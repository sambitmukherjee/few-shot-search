{
    "0": {
        "state": null,
        "thought": "1 + 6 = 7 (left: 7 9 12)\n12 - 1 = 11 (left: 6 9 11)\n9 - 1 = 8 (left: 6 8 12)\n6 * 1 = 6 (left: 6 9 12)\n12 / 1 = 12 (left: 6 9 12)\n9 / 1 = 9 (left: 6 9 12)\n6 / 1 = 6 (left: 6 9 12)\n9 + 6 = 15 (left: 1 12 15)\n12 - 6 = 6 (left: 1 6 9)\n12 / 6 = 2 (left: 1 2 9)\n9 - 6 = 3 (left: 1 3 12)\n9 / 6 = 1.5 (left: 1 1.5 12)\n12 + 1 = 13 (left: 6 9 13)\n12 - 9 = 3 (left: 1 3 6)\n12 / 9 = 1.333 (left: 1 1.333 6)\n9 * 1 = 9 (left: 6 9 12)\n9 - 1 = 8 (left: 6 8 12)\n9 / 1 = 9 (left: 6 9 12)\n6 + 1 = 7 (left: 7 9 12)\n6 - 1 = 5 (left: 5 9 12)\n6 / 1 = 6 (left: 6 9 12)",
        "value": null,
        "opening_remark": null,
        "children": {
            "0_0": {
                "state": "1 + 6 = 7 (left: 7 9 12)",
                "thought": null,
                "value": 2.001,
                "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                "children": {},
                "closing_remark": null,
                "backtracked": false
            },
            "0_1": {
                "state": "12 - 1 = 11 (left: 6 9 11)",
                "thought": "6 + 9 = 15 (left: 11 15)\n9 - 6 = 3 (left: 3 11)\n11 - 6 = 5 (left: 5 9)\n11 - 9 = 2 (left: 2 6)\n6 * 9 = 54 (left: 11 54)\n11 + 6 = 17 (left: 9 17)\n9 + 6 = 15 (left: 11 15)\n11 * 6 = 66 (left: 9 66)\n9 * 6 = 54 (left: 11 54)\n11 / 6 = 1.833 (left: 1.833 9)",
                "value": 3.0,
                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                "children": {
                    "0_1_0": {
                        "state": "12 - 1 = 11 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_1": {
                        "state": "12 - 1 = 11 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_2": {
                        "state": "12 - 1 = 11 (left: 6 9 11)\n11 - 6 = 5 (left: 5 9)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_3": {
                        "state": "12 - 1 = 11 (left: 6 9 11)\n11 - 9 = 2 (left: 2 6)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_4": {
                        "state": "12 - 1 = 11 (left: 6 9 11)\n6 * 9 = 54 (left: 11 54)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_5": {
                        "state": "12 - 1 = 11 (left: 6 9 11)\n11 + 6 = 17 (left: 9 17)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_6": {
                        "state": "12 - 1 = 11 (left: 6 9 11)\n9 + 6 = 15 (left: 11 15)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_7": {
                        "state": "12 - 1 = 11 (left: 6 9 11)\n11 * 6 = 66 (left: 9 66)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_8": {
                        "state": "12 - 1 = 11 (left: 6 9 11)\n9 * 6 = 54 (left: 11 54)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_9": {
                        "state": "12 - 1 = 11 (left: 6 9 11)\n11 / 6 = 1.833 (left: 1.833 9)",
                        "thought": null,
                        "value": 1.002,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    }
                },
                "closing_remark": null,
                "backtracked": false,
                "backtracked_to": "0"
            },
            "0_2": {
                "state": "9 - 1 = 8 (left: 6 8 12)",
                "thought": "6 + 8 = 14 (left: 12 14)\n8 / 6 = 1.33 (left: 1.33 12)\n12 + 6 = 18 (left: 8 18)\n6 * 8 = 48 (left: 12 48)\n8 - 6 = 2 (left: 2 12)\n12 - 8 = 4 (left: 4 6)\n12 /  6 = 2 (left: 2 8)\n12 - 6 = 6 (left: 6 8)",
                "value": 41.0,
                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                "children": {
                    "0_2_0": {
                        "state": "9 - 1 = 8 (left: 6 8 12)\n6 + 8 = 14 (left: 12 14)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_2_1": {
                        "state": "9 - 1 = 8 (left: 6 8 12)\n8 / 6 = 1.33 (left: 1.33 12)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_2_2": {
                        "state": "9 - 1 = 8 (left: 6 8 12)\n12 + 6 = 18 (left: 8 18)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_2_3": {
                        "state": "9 - 1 = 8 (left: 6 8 12)\n6 * 8 = 48 (left: 12 48)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_2_4": {
                        "state": "9 - 1 = 8 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)",
                        "thought": "2 + 12 = 14 (left: 14)\n12 / 2 = 6 (left: 6)\n12 - 2 = 10 (left: 10)\n2 * 12 = 24 (left: 24)",
                        "value": 60.0,
                        "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                        "children": {
                            "0_2_4_0": {
                                "state": "9 - 1 = 8 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                                "thought": null,
                                "value": 0.003,
                                "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                                "children": {},
                                "closing_remark": null,
                                "backtracked": false
                            },
                            "0_2_4_1": {
                                "state": "9 - 1 = 8 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                                "thought": null,
                                "value": 0.003,
                                "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                                "children": {},
                                "closing_remark": null,
                                "backtracked": false
                            },
                            "0_2_4_2": {
                                "state": "9 - 1 = 8 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                                "thought": null,
                                "value": 0.003,
                                "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                                "children": {},
                                "closing_remark": null,
                                "backtracked": false
                            },
                            "0_2_4_3": {
                                "state": "9 - 1 = 8 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                                "thought": "Answer: (9 - 1 - 6) * 12 = 24",
                                "value": 60.0,
                                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                                "children": {
                                    "0_2_4_3_0": {
                                        "state": "9 - 1 = 8 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 1 - 6) * 12 = 24",
                                        "thought": null,
                                        "value": 60.0,
                                        "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                                        "children": {},
                                        "closing_remark": null,
                                        "backtracked": false
                                    }
                                },
                                "closing_remark": null,
                                "backtracked": true,
                                "backtracked_to": "0_2_4"
                            }
                        },
                        "closing_remark": null,
                        "backtracked": true,
                        "backtracked_to": "0_2"
                    }
                },
                "closing_remark": null,
                "backtracked": true,
                "backtracked_to": "0"
            }
        },
        "closing_remark": null,
        "backtracked": false
    }
}