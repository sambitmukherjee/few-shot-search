{
    "0": {
        "state": null,
        "thought": "4 + 4 = 8 (left: 4 8 8)\n4 * 4 = 16 (left: 4 8 16)\n8 - 4 = 4 (left: 4 4 4)\n8 / 4 = 2 (left: 2 4 4)\n4 - 4 = 0 (left: 0 4 8)\n8 + 4 = 12 (left: 4 4 12)\n8 * 4 = 32 (left: 4 4 32)\n4 / 4 = 1 (left: 1 4 8)",
        "value": null,
        "opening_remark": null,
        "children": {
            "0_0": {
                "state": "4 + 4 = 8 (left: 4 8 8)",
                "thought": "4 + 8 = 12 (left: 8 12)\n8 - 4 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n4 * 8 = 32 (left: 8 32)\n8 + 8 = 16 (left: 4 16)\n8 - 8 = 0 (left: 4 0)\n8 / 8 = 1 (left: 4 1)\n8 * 8 = 64 (left: 4 64)",
                "value": 41.0,
                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                "children": {
                    "0_0_0": {
                        "state": "4 + 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_0_1": {
                        "state": "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_0_2": {
                        "state": "4 + 4 = 8 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_0_3": {
                        "state": "4 + 4 = 8 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)",
                        "thought": "8 * 4 = 32 (left: 32 32)\n32 / 8 = 4 (left: 4 32)\n32 - 8 = 24 (left: 24 32)",
                        "value": 40.001,
                        "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                        "children": {
                            "0_0_3_0": {
                                "state": "4 + 4 = 8 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n8 * 4 = 32 (left: 32 32)",
                                "thought": null,
                                "value": 0.003,
                                "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                                "children": {},
                                "closing_remark": null,
                                "backtracked": false
                            },
                            "0_0_3_1": {
                                "state": "4 + 4 = 8 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n32 / 8 = 4 (left: 4 32)",
                                "thought": null,
                                "value": 0.003,
                                "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                                "children": {},
                                "closing_remark": null,
                                "backtracked": false
                            },
                            "0_0_3_2": {
                                "state": "4 + 4 = 8 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24 32)",
                                "thought": null,
                                "value": 0.003,
                                "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                                "children": {},
                                "closing_remark": null,
                                "backtracked": false
                            }
                        },
                        "closing_remark": null,
                        "backtracked": false,
                        "backtracked_to": "0_0"
                    }
                },
                "closing_remark": null,
                "backtracked": false
            },
            "0_1": {
                "state": "4 * 4 = 16 (left: 4 8 16)",
                "thought": "4 * 8 = 32 (left: 16 32)\n16 - 8 = 8 (left: 4 8)\n8 / 4 = 2 (left: 2 16)\n16 / 4 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 16)\n16 / 8 = 2 (left: 2 4)\n4 + 8 = 12 (left: 12 16)\n16 + 4 = 20 (left: 8 20)\n16 - 4 = 12 (left: 8 12)\n16 + 8 = 24 (left: 4 24)",
                "value": 3.0,
                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                "children": {
                    "0_1_0": {
                        "state": "4 * 4 = 16 (left: 4 8 16)\n4 * 8 = 32 (left: 16 32)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_1": {
                        "state": "4 * 4 = 16 (left: 4 8 16)\n16 - 8 = 8 (left: 4 8)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_2": {
                        "state": "4 * 4 = 16 (left: 4 8 16)\n8 / 4 = 2 (left: 2 16)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_3": {
                        "state": "4 * 4 = 16 (left: 4 8 16)\n16 / 4 = 4 (left: 4 8)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_4": {
                        "state": "4 * 4 = 16 (left: 4 8 16)\n8 - 4 = 4 (left: 4 16)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_5": {
                        "state": "4 * 4 = 16 (left: 4 8 16)\n16 / 8 = 2 (left: 2 4)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_6": {
                        "state": "4 * 4 = 16 (left: 4 8 16)\n4 + 8 = 12 (left: 12 16)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_7": {
                        "state": "4 * 4 = 16 (left: 4 8 16)\n16 + 4 = 20 (left: 20 16)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_8": {
                        "state": "4 * 4 = 16 (left: 4 8 16)\n16 - 4 = 12 (left: 12 16)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_9": {
                        "state": "4 * 4 = 16 (left: 4 8 16)\n16 + 8 = 24 (left: 24 16)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    }
                },
                "closing_remark": null,
                "backtracked": false,
                "backtracked_to": "0_0"
            },
            "0_2": {
                "state": "8 - 4 = 4 (left: 4 4 4)",
                "thought": null,
                "value": 0.003,
                "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                "children": {},
                "closing_remark": null,
                "backtracked": false
            },
            "0_3": {
                "state": "8 / 4 = 2 (left: 2 4 4)",
                "thought": "2 + 4 = 6 (left: 4 6)\n4 - 2 = 2 (left: 2 4)\n4 / 2 = 2 (left: 2 4)\n2 * 4 = 8 (left: 4 8)\n4 + 4 = 8 (left: 2 8)",
                "value": 20.002,
                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                "children": {
                    "0_3_0": {
                        "state": "8 / 4 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)",
                        "thought": "4 + 6 = 10 (left: 10)\n4 - 6 = -2 (left: -2)\n6 - 4 = 2 (left: 2)\n4 * 6 = 24 (left: 24)\n6 / 4 = 1.5 (left: 1.5)\n4 / 6 = 0.67 (left: 0.67)",
                        "value": 60.0,
                        "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                        "children": {
                            "0_3_0_0": {
                                "state": "8 / 4 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                                "thought": null,
                                "value": 0.003,
                                "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                                "children": {},
                                "closing_remark": null,
                                "backtracked": false
                            },
                            "0_3_0_1": {
                                "state": "8 / 4 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 - 6 = -2 (left: -2)",
                                "thought": null,
                                "value": 0.002,
                                "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                                "children": {},
                                "closing_remark": null,
                                "backtracked": false
                            },
                            "0_3_0_2": {
                                "state": "8 / 4 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                                "thought": null,
                                "value": 0.002,
                                "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                                "children": {},
                                "closing_remark": null,
                                "backtracked": false
                            },
                            "0_3_0_3": {
                                "state": "8 / 4 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                                "thought": "Answer: 4 * (8 / 4 + 4) = 24",
                                "value": 60.0,
                                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                                "children": {
                                    "0_3_0_3_0": {
                                        "state": "8 / 4 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (8 / 4 + 4) = 24",
                                        "thought": null,
                                        "value": 60.0,
                                        "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                                        "children": {},
                                        "closing_remark": null,
                                        "backtracked": false
                                    }
                                },
                                "closing_remark": null,
                                "backtracked": true,
                                "backtracked_to": "0_3"
                            }
                        },
                        "closing_remark": null,
                        "backtracked": false
                    }
                },
                "closing_remark": null,
                "backtracked": true,
                "backtracked_to": "0"
            }
        },
        "closing_remark": null,
        "backtracked": false
    }
}