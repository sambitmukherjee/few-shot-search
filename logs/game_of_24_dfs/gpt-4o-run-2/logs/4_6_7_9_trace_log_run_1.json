{
    "0": {
        "state": null,
        "thought": "4 + 6 = 10 (left: 7 9 10)\n6 + 7 = 13 (left: 4 9 13)\n7 + 9 = 16 (left: 4 6 16)\n9 + 4 = 13 (left: 6 7 13)\n6 - 4 = 2 (left: 2 7 9)\n7 - 4 = 3 (left: 3 6 9)\n9 - 4 = 5 (left: 5 6 7)\n9 - 6 = 3 (left: 3 4 7)\n4 * 6 = 24 (left: 7 9 24)\n6 * 7 = 42 (left: 4 9 42)\n7 * 9 = 63 (left: 4 6 63)\n9 * 4 = 36 (left: 6 7 36)\n6 / 4 = 1.5 (left: 1.5 7 9)\n7 / 4 = 1.75 (left: 1.75 6 9)\n9 / 4 = 2.25 (left: 2.25 6 7)",
        "value": null,
        "opening_remark": null,
        "children": {
            "0_0": {
                "state": "4 + 6 = 10 (left: 7 9 10)",
                "thought": "7 + 9 = 16 (left: 10 16)\n9 - 7 = 2 (left: 2 10)\n10 - 7 = 3 (left: 3 9)\n10 - 9 = 1 (left: 1 7)\n7 * 9 = 63 (left: 10 63)\n10 / 7 = 1.43 (left: 1.43 9)\n9 / 7 = 1.29 (left: 1.29 10)",
                "value": 3.0,
                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                "children": {
                    "0_0_0": {
                        "state": "4 + 6 = 10 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_0_1": {
                        "state": "4 + 6 = 10 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_0_2": {
                        "state": "4 + 6 = 10 (left: 7 9 10)\n10 - 7 = 3 (left: 3 9)",
                        "thought": null,
                        "value": 1.002,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_0_3": {
                        "state": "4 + 6 = 10 (left: 7 9 10)\n10 - 9 = 1 (left: 1 7)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_0_4": {
                        "state": "4 + 6 = 10 (left: 7 9 10)\n7 * 9 = 63 (left: 10 63)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_0_5": {
                        "state": "4 + 6 = 10 (left: 7 9 10)\n10 / 7 = 1.43 (left: 1.43 9)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_0_6": {
                        "state": "4 + 6 = 10 (left: 7 9 10)\n9 / 7 = 1.29 (left: 1.29 10)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    }
                },
                "closing_remark": null,
                "backtracked": false,
                "backtracked_to": "0"
            },
            "0_1": {
                "state": "6 + 7 = 13 (left: 4 9 13)",
                "thought": null,
                "value": 2.001,
                "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                "children": {},
                "closing_remark": null,
                "backtracked": false
            },
            "0_2": {
                "state": "7 + 9 = 16 (left: 4 6 16)",
                "thought": "4 + 6 = 10 (left: 10 16)\n16 - 4 = 12 (left: 6 12)\n16 / 4 = 4 (left: 4 6)\n6 * 4 = 24 (left: 16 24)\n16 - 6 = 10 (left: 4 10)\n4 * 6 = 24 (left: 16 24)\n6 - 4 = 2 (left: 2 16)\n16 / 6 = 2.67 (left: 4 2.67)",
                "value": 40.001,
                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                "children": {
                    "0_2_0": {
                        "state": "7 + 9 = 16 (left: 4 6 16)\n4 + 6 = 10 (left: 10 16)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_2_1": {
                        "state": "7 + 9 = 16 (left: 4 6 16)\n16 - 4 = 12 (left: 6 12)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_2_2": {
                        "state": "7 + 9 = 16 (left: 4 6 16)\n16 / 4 = 4 (left: 4 6)",
                        "thought": "4 + 6 = 10 (left: 10)\n4 * 6 = 24 (left: 24)\n6 - 4 = 2 (left: 2)\n6 / 4 = 1.5 (left: 1.5)",
                        "value": 60.0,
                        "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                        "children": {
                            "0_2_2_0": {
                                "state": "7 + 9 = 16 (left: 4 6 16)\n16 / 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                                "thought": null,
                                "value": 0.003,
                                "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                                "children": {},
                                "closing_remark": null,
                                "backtracked": false
                            },
                            "0_2_2_1": {
                                "state": "7 + 9 = 16 (left: 4 6 16)\n16 / 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                                "thought": "Answer: (7 + 9) / 4 * 6 = 24",
                                "value": 60.0,
                                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                                "children": {
                                    "0_2_2_1_0": {
                                        "state": "7 + 9 = 16 (left: 4 6 16)\n16 / 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (7 + 9) / 4 * 6 = 24",
                                        "thought": null,
                                        "value": 60.0,
                                        "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                                        "children": {},
                                        "closing_remark": null,
                                        "backtracked": false
                                    }
                                },
                                "closing_remark": null,
                                "backtracked": false
                            }
                        },
                        "closing_remark": null,
                        "backtracked": false
                    }
                },
                "closing_remark": null,
                "backtracked": true,
                "backtracked_to": "0"
            }
        },
        "closing_remark": null,
        "backtracked": false
    }
}