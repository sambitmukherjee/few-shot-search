{
    "0": {
        "state": null,
        "thought": "2 + 4 = 6 (left: 6 8 11)\n4 - 2 = 2 (left: 2 8 11)\n8 - 2 = 6 (left: 4 6 11)\n11 - 2 = 9 (left: 4 8 9)\n2 * 4 = 8 (left: 8 8 11)\n4 / 2 = 2 (left: 2 8 11)\n11 / 2 = 5.5 (left: 4 5.5 8)\n11 - 4 = 7 (left: 2 7 8)\n4 * 2 = 8 (left: 8 8 11)\n8 / 2 = 4 (left: 4 4 11)\n11 + 2 = 13 (left: 4 8 13)\n2 * 8 = 16 (left: 4 11 16)\n8 - 4 = 4 (left: 2 4 11)\n11 / 4 = 2.75 (left: 2 2.75 8)\n11 * 2 = 22 (left: 4 8 22)",
        "value": null,
        "opening_remark": null,
        "children": {
            "0_0": {
                "state": "2 + 4 = 6 (left: 6 8 11)",
                "thought": null,
                "value": 2.001,
                "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                "children": {},
                "closing_remark": null,
                "backtracked": false
            },
            "0_1": {
                "state": "4 - 2 = 2 (left: 2 8 11)",
                "thought": null,
                "value": 2.001,
                "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                "children": {},
                "closing_remark": null,
                "backtracked": false
            },
            "0_2": {
                "state": "8 - 2 = 6 (left: 4 6 11)",
                "thought": "4 + 6 = 10 (left: 10 11)\n6 - 4 = 2 (left: 2 11)\n11 - 4 = 7 (left: 6 7)\n11 - 6 = 5 (left: 4 5)\n4 * 6 = 24 (left: 11 24)\n11 / 4 = 2.75 (left: 2.75 6)\n6 / 4 = 1.5 (left: 1.5 11)",
                "value": 3.0,
                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                "children": {
                    "0_2_0": {
                        "state": "8 - 2 = 6 (left: 4 6 11)\n4 + 6 = 10 (left: 10 11)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_2_1": {
                        "state": "8 - 2 = 6 (left: 4 6 11)\n6 - 4 = 2 (left: 2 11)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_2_2": {
                        "state": "8 - 2 = 6 (left: 4 6 11)\n11 - 4 = 7 (left: 6 7)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_2_3": {
                        "state": "8 - 2 = 6 (left: 4 6 11)\n11 - 6 = 5 (left: 4 5)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_2_4": {
                        "state": "8 - 2 = 6 (left: 4 6 11)\n4 * 6 = 24 (left: 11 24)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_2_5": {
                        "state": "8 - 2 = 6 (left: 4 6 11)\n11 / 4 = 2.75 (left: 2.75 6)",
                        "thought": null,
                        "value": 1.002,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_2_6": {
                        "state": "8 - 2 = 6 (left: 4 6 11)\n6 / 4 = 1.5 (left: 1.5 11)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    }
                },
                "closing_remark": null,
                "backtracked": false,
                "backtracked_to": "0"
            },
            "0_3": {
                "state": "11 - 2 = 9 (left: 4 8 9)",
                "thought": "4 + 8 = 12 (left: 9 12)\n8 - 4 = 4 (left: 4 9)\n9 - 4 = 5 (left: 5 8)\n9 - 8 = 1 (left: 1 4)\n8 / 4 = 2 (left: 2 9)\n9 / 4 = 2.25 (left: 2.25 8)\n4 * 8 = 32 (left: 9 32)\n9 * 4 = 36 (left: 8 36)\n8 * 9 = 72 (left: 4 72)",
                "value": 3.0,
                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                "children": {
                    "0_3_0": {
                        "state": "11 - 2 = 9 (left: 4 8 9)\n4 + 8 = 12 (left: 9 12)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_3_1": {
                        "state": "11 - 2 = 9 (left: 4 8 9)\n8 - 4 = 4 (left: 4 9)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_3_2": {
                        "state": "11 - 2 = 9 (left: 4 8 9)\n9 - 4 = 5 (left: 5 8)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_3_3": {
                        "state": "11 - 2 = 9 (left: 4 8 9)\n9 - 8 = 1 (left: 1 4)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_3_4": {
                        "state": "11 - 2 = 9 (left: 4 8 9)\n8 / 4 = 2 (left: 2 9)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_3_5": {
                        "state": "11 - 2 = 9 (left: 4 8 9)\n9 / 4 = 2.25 (left: 2.25 8)",
                        "thought": null,
                        "value": 1.002,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_3_6": {
                        "state": "11 - 2 = 9 (left: 4 8 9)\n4 * 8 = 32 (left: 9 32)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_3_7": {
                        "state": "11 - 2 = 9 (left: 4 8 9)\n9 * 4 = 36 (left: 8 36)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_3_8": {
                        "state": "11 - 2 = 9 (left: 4 8 9)\n8 * 9 = 72 (left: 4 72)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    }
                },
                "closing_remark": null,
                "backtracked": false,
                "backtracked_to": "0"
            },
            "0_4": {
                "state": "2 * 4 = 8 (left: 8 8 11)",
                "thought": "8 + 8 = 16 (left: 11 16)\n8 - 8 = 0 (left: 0 11)\n11 - 8 = 3 (left: 3 8)\n8 / 8 = 1 (left: 1 11)\n11 + 8 = 19 (left: 8 19)",
                "value": 40.001,
                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                "children": {
                    "0_4_0": {
                        "state": "2 * 4 = 8 (left: 8 8 11)\n8 + 8 = 16 (left: 11 16)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_4_1": {
                        "state": "2 * 4 = 8 (left: 8 8 11)\n8 - 8 = 0 (left: 0 11)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_4_2": {
                        "state": "2 * 4 = 8 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)",
                        "thought": "3 + 8 = 11 (left: 11)\n8 - 3 = 5 (left: 5)\n3 * 8 = 24 (left: 24)\n8 / 3 = 2.67 (left: 2.67)",
                        "value": 60.0,
                        "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                        "children": {
                            "0_4_2_0": {
                                "state": "2 * 4 = 8 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                                "thought": null,
                                "value": 0.003,
                                "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                                "children": {},
                                "closing_remark": null,
                                "backtracked": false
                            },
                            "0_4_2_1": {
                                "state": "2 * 4 = 8 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)",
                                "thought": null,
                                "value": 0.002,
                                "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                                "children": {},
                                "closing_remark": null,
                                "backtracked": false
                            },
                            "0_4_2_2": {
                                "state": "2 * 4 = 8 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                                "thought": "Answer: (2 * 4) * (11 - 8) = 24",
                                "value": 60.0,
                                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                                "children": {
                                    "0_4_2_2_0": {
                                        "state": "2 * 4 = 8 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 * 4) * (11 - 8) = 24",
                                        "thought": null,
                                        "value": 60.0,
                                        "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                                        "children": {},
                                        "closing_remark": null,
                                        "backtracked": false
                                    }
                                },
                                "closing_remark": null,
                                "backtracked": true,
                                "backtracked_to": "0_4_2"
                            }
                        },
                        "closing_remark": null,
                        "backtracked": true,
                        "backtracked_to": "0_4"
                    }
                },
                "closing_remark": null,
                "backtracked": true,
                "backtracked_to": "0"
            }
        },
        "closing_remark": null,
        "backtracked": false
    }
}