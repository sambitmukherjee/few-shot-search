{
    "0": {
        "state": null,
        "thought": "1 + 3 = 4 (left: 4 5 6)\n3 - 1 = 2 (left: 2 5 6)\n5 - 1 = 4 (left: 3 4 6)\n6 - 1 = 5 (left: 3 5 5)\n1 * 3 = 3 (left: 3 5 6)\n3 * 1 = 3 (left: 3 5 6)\n5 * 1 = 5 (left: 3 5 6)\n6 * 1 = 6 (left: 3 5 6)\n5 / 1 = 5 (left: 3 5 6)\n6 / 1 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 1 6 8)\n5 - 3 = 2 (left: 1 2 6)\n6 - 3 = 3 (left: 1 3 5)\n3 * 5 = 15 (left: 1 6 15)\n5 * 3 = 15 (left: 1 6 15)\n5 / 3 = 1.66667 (left: 1 1.66667 6)\n6 + 5 = 11 (left: 1 3 11)\n5 - 6 = -1 (left: -1 1 3)\n6 - 5 = 1 (left: 1 1 3)\n5 * 6 = 30 (left: 1 3 30)\n6 * 5 = 30 (left: 1 3 30)\n6 / 5 = 1.2 (left: 1 1.2 3)\n3 + 6 = 9 (left: 1 5 9)\n6 - 3 = 3 (left: 1 3 5)\n3 * 6 = 18 (left: 1 5 18)\n6 * 3 = 18 (left: 1 5 18)\n6 / 3 = 2 (left: 1 2 5)",
        "value": null,
        "opening_remark": null,
        "children": {
            "0_0": {
                "state": "1 + 3 = 4 (left: 4 5 6)",
                "thought": "4 + 5 = 9 (left: 6 9)\n5 + 6 = 11 (left: 4 11)\n6 + 4 = 10 (left: 5 10)\n5 - 4 = 1 (left: 1 6)\n6 - 4 = 2 (left: 2 5)\n6 - 5 = 1 (left: 1 4)\n4 * 5 = 20 (left: 6 20)\n5 * 6 = 30 (left: 4 30)\n6 / 4 = 1.5 (left: 1.5 5)\n5 / 4 = 1.25 (left: 1.25 6)",
                "value": 3.0,
                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                "children": {
                    "0_0_0": {
                        "state": "1 + 3 = 4 (left: 4 5 6)\n4 + 5 = 9 (left: 6 9)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_0_1": {
                        "state": "1 + 3 = 4 (left: 4 5 6)\n5 + 6 = 11 (left: 4 11)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_0_2": {
                        "state": "1 + 3 = 4 (left: 4 5 6)\n6 + 4 = 10 (left: 5 10)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_0_3": {
                        "state": "1 + 3 = 4 (left: 4 5 6)\n5 - 4 = 1 (left: 1 6)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_0_4": {
                        "state": "1 + 3 = 4 (left: 4 5 6)\n6 - 4 = 2 (left: 2 5)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_0_5": {
                        "state": "1 + 3 = 4 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_0_6": {
                        "state": "1 + 3 = 4 (left: 4 5 6)\n4 * 5 = 20 (left: 6 20)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_0_7": {
                        "state": "1 + 3 = 4 (left: 4 5 6)\n5 * 6 = 30 (left: 4 30)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_0_8": {
                        "state": "1 + 3 = 4 (left: 4 5 6)\n6 / 4 = 1.5 (left: 1.5 5)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_0_9": {
                        "state": "1 + 3 = 4 (left: 4 5 6)\n5 / 4 = 1.25 (left: 1.25 6)",
                        "thought": null,
                        "value": 1.002,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    }
                },
                "closing_remark": null,
                "backtracked": false,
                "backtracked_to": "0"
            },
            "0_1": {
                "state": "3 - 1 = 2 (left: 2 5 6)",
                "thought": "2 + 5 = 7 (left: 6 7)\n5 - 2 = 3 (left: 3 6)\n6 - 2 = 4 (left: 4 5)\n2 * 5 = 10 (left: 6 10)\n5 / 2 = 2.5 (left: 2.5 6)\n6 / 2 = 3 (left: 3 5)\n6 - 5 = 1 (left: 1 2)\n2 * 6 = 12 (left: 5 12)\n5 * 2 = 10 (left: 6 10)",
                "value": 3.0,
                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                "children": {
                    "0_1_0": {
                        "state": "3 - 1 = 2 (left: 2 5 6)\n2 + 5 = 7 (left: 6 7)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_1": {
                        "state": "3 - 1 = 2 (left: 2 5 6)\n5 - 2 = 3 (left: 3 6)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_2": {
                        "state": "3 - 1 = 2 (left: 2 5 6)\n6 - 2 = 4 (left: 4 5)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_3": {
                        "state": "3 - 1 = 2 (left: 2 5 6)\n2 * 5 = 10 (left: 6 10)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_4": {
                        "state": "3 - 1 = 2 (left: 2 5 6)\n5 / 2 = 2.5 (left: 2.5 6)",
                        "thought": null,
                        "value": 1.002,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_5": {
                        "state": "3 - 1 = 2 (left: 2 5 6)\n6 / 2 = 3 (left: 3 5)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_6": {
                        "state": "3 - 1 = 2 (left: 2 5 6)\n6 - 5 = 1 (left: 1 2)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_7": {
                        "state": "3 - 1 = 2 (left: 2 5 6)\n2 * 6 = 12 (left: 5 12)",
                        "thought": null,
                        "value": 1.002,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_1_8": {
                        "state": "3 - 1 = 2 (left: 2 5 6)\n5 * 2 = 10 (left: 6 10)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    }
                },
                "closing_remark": null,
                "backtracked": false,
                "backtracked_to": "0"
            },
            "0_2": {
                "state": "5 - 1 = 4 (left: 3 4 6)",
                "thought": "3 + 4 = 7 (left: 6 7)\n4 + 6 = 10 (left: 3 10)\n6 - 4 = 2 (left: 2 3)\n4 * 3 = 12 (left: 6 12)\n6 / 3 = 2 (left: 2 4)\n3 * 6 = 18 (left: 4 18)\n4 - 3 = 1 (left: 1 6)\n6 - 3 = 3 (left: 3 4)",
                "value": 3.0,
                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                "children": {
                    "0_2_0": {
                        "state": "5 - 1 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 6 7)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_2_1": {
                        "state": "5 - 1 = 4 (left: 3 4 6)\n4 + 6 = 10 (left: 3 10)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_2_2": {
                        "state": "5 - 1 = 4 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_2_3": {
                        "state": "5 - 1 = 4 (left: 3 4 6)\n4 * 3 = 12 (left: 6 12)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_2_4": {
                        "state": "5 - 1 = 4 (left: 3 4 6)\n6 / 3 = 2 (left: 2 4)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_2_5": {
                        "state": "5 - 1 = 4 (left: 3 4 6)\n3 * 6 = 18 (left: 4 18)",
                        "thought": null,
                        "value": 1.002,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_2_6": {
                        "state": "5 - 1 = 4 (left: 3 4 6)\n4 - 3 = 1 (left: 1 6)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_2_7": {
                        "state": "5 - 1 = 4 (left: 3 4 6)\n6 - 3 = 3 (left: 3 4)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    }
                },
                "closing_remark": null,
                "backtracked": false,
                "backtracked_to": "0"
            },
            "0_3": {
                "state": "6 - 1 = 5 (left: 3 5 5)",
                "thought": null,
                "value": 2.001,
                "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                "children": {},
                "closing_remark": null,
                "backtracked": false
            },
            "0_4": {
                "state": "1 * 3 = 3 (left: 3 5 6)",
                "thought": "3 + 5 = 8 (left: 6 8)\n5 - 3 = 2 (left: 2 6)\n6 - 3 = 3 (left: 3 5)\n3 * 5 = 15 (left: 6 15)\n5 * 6 = 30 (left: 3 30)\n6 / 3 = 2 (left: 2 5)",
                "value": 3.0,
                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                "children": {
                    "0_4_0": {
                        "state": "1 * 3 = 3 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_4_1": {
                        "state": "1 * 3 = 3 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_4_2": {
                        "state": "1 * 3 = 3 (left: 3 5 6)\n6 - 3 = 3 (left: 3 5)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_4_3": {
                        "state": "1 * 3 = 3 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_4_4": {
                        "state": "1 * 3 = 3 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_4_5": {
                        "state": "1 * 3 = 3 (left: 3 5 6)\n6 / 3 = 2 (left: 2 5)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    }
                },
                "closing_remark": null,
                "backtracked": false,
                "backtracked_to": "0"
            },
            "0_5": {
                "state": "3 * 1 = 3 (left: 3 5 6)",
                "thought": "3 + 5 = 8 (left: 6 8)\n5 - 3 = 2 (left: 2 6)\n6 - 3 = 3 (left: 3 5)\n6 / 3 = 2 (left: 2 5)\n3 * 5 = 15 (left: 6 15)\n5 * 6 = 30 (left: 3 30)\n6 + 3 = 9 (left: 5 9)\n5 + 3 = 8 (left: 6 8)",
                "value": 3.0,
                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                "children": {
                    "0_5_0": {
                        "state": "3 * 1 = 3 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_5_1": {
                        "state": "3 * 1 = 3 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_5_2": {
                        "state": "3 * 1 = 3 (left: 3 5 6)\n6 - 3 = 3 (left: 3 5)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_5_3": {
                        "state": "3 * 1 = 3 (left: 3 5 6)\n6 / 3 = 2 (left: 2 5)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_5_4": {
                        "state": "3 * 1 = 3 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_5_5": {
                        "state": "3 * 1 = 3 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_5_6": {
                        "state": "3 * 1 = 3 (left: 3 5 6)\n6 + 3 = 9 (left: 5 9)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_5_7": {
                        "state": "3 * 1 = 3 (left: 3 5 6)\n5 + 3 = 8 (left: 6 8)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    }
                },
                "closing_remark": null,
                "backtracked": false,
                "backtracked_to": "0"
            },
            "0_6": {
                "state": "5 * 1 = 5 (left: 3 5 6)",
                "thought": "3 + 5 = 8 (left: 6 8)\n5 - 3 = 2 (left: 2 6)\n6 / 3 = 2 (left: 2 5)\n3 * 5 = 15 (left: 6 15) \n5 + 6 = 11 (left: 3 11)\n6 - 3 = 3 (left: 3 5)\n6 - 5 = 1 (left: 1 3)",
                "value": 3.0,
                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                "children": {
                    "0_6_0": {
                        "state": "5 * 1 = 5 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_6_1": {
                        "state": "5 * 1 = 5 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_6_2": {
                        "state": "5 * 1 = 5 (left: 3 5 6)\n6 / 3 = 2 (left: 2 5)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_6_3": {
                        "state": "5 * 1 = 5 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_6_4": {
                        "state": "5 * 1 = 5 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_6_5": {
                        "state": "5 * 1 = 5 (left: 3 5 6)\n6 - 3 = 3 (left: 3 5)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_6_6": {
                        "state": "5 * 1 = 5 (left: 3 5 6)\n6 - 5 = 1 (left: 1 3)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    }
                },
                "closing_remark": null,
                "backtracked": false,
                "backtracked_to": "0"
            },
            "0_7": {
                "state": "6 * 1 = 6 (left: 3 5 6)",
                "thought": "3 + 5 = 8 (left: 6 8)\n5 - 3 = 2 (left: 2 6)\n6 - 3 = 3 (left: 3 5)\n6 / 3 = 2 (left: 2 5)\n5 * 3 = 15 (left: 6 15)\n6 + 3 = 9 (left: 5 9)",
                "value": 3.0,
                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                "children": {
                    "0_7_0": {
                        "state": "6 * 1 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_7_1": {
                        "state": "6 * 1 = 6 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_7_2": {
                        "state": "6 * 1 = 6 (left: 3 5 6)\n6 - 3 = 3 (left: 3 5)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_7_3": {
                        "state": "6 * 1 = 6 (left: 3 5 6)\n6 / 3 = 2 (left: 2 5)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_7_4": {
                        "state": "6 * 1 = 6 (left: 3 5 6)\n5 * 3 = 15 (left: 6 15)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_7_5": {
                        "state": "6 * 1 = 6 (left: 3 5 6)\n6 + 3 = 9 (left: 5 9)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    }
                },
                "closing_remark": null,
                "backtracked": false,
                "backtracked_to": "0"
            },
            "0_8": {
                "state": "5 / 1 = 5 (left: 3 5 6)",
                "thought": "3 + 5 = 8 (left: 6 8)\n5 - 3 = 2 (left: 2 6)\n6 - 3 = 3 (left: 3 5)\n3 * 5 = 15 (left: 6 15)\n6 / 3 = 2 (left: 2 5)\n5 * 3 = 15 (left: 6 15)\n6 - 5 = 1 (left: 1 3)",
                "value": 3.0,
                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                "children": {
                    "0_8_0": {
                        "state": "5 / 1 = 5 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_8_1": {
                        "state": "5 / 1 = 5 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_8_2": {
                        "state": "5 / 1 = 5 (left: 3 5 6)\n6 - 3 = 3 (left: 3 5)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_8_3": {
                        "state": "5 / 1 = 5 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_8_4": {
                        "state": "5 / 1 = 5 (left: 3 5 6)\n6 / 3 = 2 (left: 2 5)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_8_5": {
                        "state": "5 / 1 = 5 (left: 3 5 6)\n5 * 3 = 15 (left: 6 15)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_8_6": {
                        "state": "5 / 1 = 5 (left: 3 5 6)\n6 - 5 = 1 (left: 1 3)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    }
                },
                "closing_remark": null,
                "backtracked": false,
                "backtracked_to": "0"
            },
            "0_9": {
                "state": "6 / 1 = 6 (left: 3 5 6)",
                "thought": "3 + 5 = 8 (left: 6 8)\n5 + 6 = 11 (left: 3 11)\n6 - 3 = 3 (left: 3 5)\n5 - 3 = 2 (left: 2 6)\n6 / 3 = 2 (left: 2 5)\n3 * 5 = 15 (left: 6 15)\n5 * 6 = 30 (left: 3 30)\n6 * 3 = 18 (left: 5 18)",
                "value": 3.0,
                "opening_remark": "Value does exceed heuristic threshold, childs will be traversed.",
                "children": {
                    "0_9_0": {
                        "state": "6 / 1 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_9_1": {
                        "state": "6 / 1 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_9_2": {
                        "state": "6 / 1 = 6 (left: 3 5 6)\n6 - 3 = 3 (left: 3 5)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_9_3": {
                        "state": "6 / 1 = 6 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_9_4": {
                        "state": "6 / 1 = 6 (left: 3 5 6)\n6 / 3 = 2 (left: 2 5)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_9_5": {
                        "state": "6 / 1 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_9_6": {
                        "state": "6 / 1 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    },
                    "0_9_7": {
                        "state": "6 / 1 = 6 (left: 3 5 6)\n6 * 3 = 18 (left: 5 18)",
                        "thought": null,
                        "value": 0.003,
                        "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
                        "children": {},
                        "closing_remark": null,
                        "backtracked": false
                    }
                },
                "closing_remark": null,
                "backtracked": false,
                "backtracked_to": "0"
            }
        },
        "closing_remark": null,
        "backtracked": false
    }
}