{
  "summary": {
    "total_checks": 193,
    "passed": 193,
    "failed": 0
  },
  "checks_by_type": {
    "pseudo_recursive_call": {
      "FAIL": 0,
      "details": [
        {
          "check_name": "pseudo_recursive_call",
          "node_id": "0_0",
          "result": "PASS",
          "reason": "Value 3.0 more than or equal to threshold 3.0",
          "timestamp": "2025-05-29T20:00:26.115185",
          "event_type": "validation",
          "details": {
            "value": 3.0,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pseudo_recursive_call",
          "node_id": "0_6",
          "result": "PASS",
          "reason": "Value 3.0 more than or equal to threshold 3.0",
          "timestamp": "2025-05-29T20:02:43.189921",
          "event_type": "validation",
          "details": {
            "value": 3.0,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pseudo_recursive_call",
          "node_id": "0_7",
          "result": "PASS",
          "reason": "Value 3.0 more than or equal to threshold 3.0",
          "timestamp": "2025-05-29T20:03:51.144219",
          "event_type": "validation",
          "details": {
            "value": 3.0,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pseudo_recursive_call",
          "node_id": "0_8",
          "result": "PASS",
          "reason": "Value 3.0 more than or equal to threshold 3.0",
          "timestamp": "2025-05-29T20:05:24.834019",
          "event_type": "validation",
          "details": {
            "value": 3.0,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pseudo_recursive_call",
          "node_id": "0_10",
          "result": "PASS",
          "reason": "Value 3.0 more than or equal to threshold 3.0",
          "timestamp": "2025-05-29T20:06:54.421427",
          "event_type": "validation",
          "details": {
            "value": 3.0,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pseudo_recursive_call",
          "node_id": "0_13",
          "result": "PASS",
          "reason": "Value 3.0 more than or equal to threshold 3.0",
          "timestamp": "2025-05-29T20:08:56.766260",
          "event_type": "validation",
          "details": {
            "value": 3.0,
            "threshold": 3.0
          }
        }
      ]
    },
    "child_state": {
      "FAIL": 0,
      "details": [
        {
          "check_name": "child_state",
          "node_id": "0_0",
          "result": "PASS",
          "reason": "State validation passed: Last thought '4 + 5 = 9 (left: 7 9 11)' found in parent's thoughts",
          "timestamp": "2025-05-29T20:00:26.115250",
          "event_type": "validation",
          "details": {
            "validation_success": [
              "Last thought '4 + 5 = 9 (left: 7 9 11)' found in parent's thoughts"
            ],
            "parent_thoughts": [
              "4 + 5 = 9 (left: 7 9 11)",
              "5 + 7 = 12 (left: 4 11 12)",
              "7 + 11 = 18 (left: 4 5 18)",
              "4 * 5 = 20 (left: 7 11 20)",
              "5 * 7 = 35 (left: 4 11 35)",
              "7 * 11 = 77 (left: 4 5 77)",
              "11 - 4 = 7 (left: 5 7 7)",
              "11 - 5 = 6 (left: 4 6 7)",
              "7 - 4 = 3 (left: 3 5 11)",
              "7 - 5 = 2 (left: 2 4 11)",
              "11 / 4 = 2.75 (left: 2.75 5 7)",
              "11 / 5 = 2.2 (left: 2.2 4 7)",
              "7 / 4 = 1.75 (left: 1.75 5 11)",
              "7 / 5 = 1.4 (left: 1.4 4 11)"
            ],
            "parent_state": null
          }
        },
        {
          "check_name": "child_state",
          "node_id": "0_6",
          "result": "PASS",
          "reason": "State validation passed: Last thought '11 - 4 = 7 (left: 5 7 7)' found in parent's thoughts",
          "timestamp": "2025-05-29T20:02:43.189967",
          "event_type": "validation",
          "details": {
            "validation_success": [
              "Last thought '11 - 4 = 7 (left: 5 7 7)' found in parent's thoughts"
            ],
            "parent_thoughts": [
              "4 + 5 = 9 (left: 7 9 11)",
              "5 + 7 = 12 (left: 4 11 12)",
              "7 + 11 = 18 (left: 4 5 18)",
              "4 * 5 = 20 (left: 7 11 20)",
              "5 * 7 = 35 (left: 4 11 35)",
              "7 * 11 = 77 (left: 4 5 77)",
              "11 - 4 = 7 (left: 5 7 7)",
              "11 - 5 = 6 (left: 4 6 7)",
              "7 - 4 = 3 (left: 3 5 11)",
              "7 - 5 = 2 (left: 2 4 11)",
              "11 / 4 = 2.75 (left: 2.75 5 7)",
              "11 / 5 = 2.2 (left: 2.2 4 7)",
              "7 / 4 = 1.75 (left: 1.75 5 11)",
              "7 / 5 = 1.4 (left: 1.4 4 11)"
            ],
            "parent_state": null
          }
        },
        {
          "check_name": "child_state",
          "node_id": "0_7",
          "result": "PASS",
          "reason": "State validation passed: Last thought '11 - 5 = 6 (left: 4 6 7)' found in parent's thoughts",
          "timestamp": "2025-05-29T20:03:51.144266",
          "event_type": "validation",
          "details": {
            "validation_success": [
              "Last thought '11 - 5 = 6 (left: 4 6 7)' found in parent's thoughts"
            ],
            "parent_thoughts": [
              "4 + 5 = 9 (left: 7 9 11)",
              "5 + 7 = 12 (left: 4 11 12)",
              "7 + 11 = 18 (left: 4 5 18)",
              "4 * 5 = 20 (left: 7 11 20)",
              "5 * 7 = 35 (left: 4 11 35)",
              "7 * 11 = 77 (left: 4 5 77)",
              "11 - 4 = 7 (left: 5 7 7)",
              "11 - 5 = 6 (left: 4 6 7)",
              "7 - 4 = 3 (left: 3 5 11)",
              "7 - 5 = 2 (left: 2 4 11)",
              "11 / 4 = 2.75 (left: 2.75 5 7)",
              "11 / 5 = 2.2 (left: 2.2 4 7)",
              "7 / 4 = 1.75 (left: 1.75 5 11)",
              "7 / 5 = 1.4 (left: 1.4 4 11)"
            ],
            "parent_state": null
          }
        },
        {
          "check_name": "child_state",
          "node_id": "0_8",
          "result": "PASS",
          "reason": "State validation passed: Last thought '7 - 4 = 3 (left: 3 5 11)' found in parent's thoughts",
          "timestamp": "2025-05-29T20:05:24.834060",
          "event_type": "validation",
          "details": {
            "validation_success": [
              "Last thought '7 - 4 = 3 (left: 3 5 11)' found in parent's thoughts"
            ],
            "parent_thoughts": [
              "4 + 5 = 9 (left: 7 9 11)",
              "5 + 7 = 12 (left: 4 11 12)",
              "7 + 11 = 18 (left: 4 5 18)",
              "4 * 5 = 20 (left: 7 11 20)",
              "5 * 7 = 35 (left: 4 11 35)",
              "7 * 11 = 77 (left: 4 5 77)",
              "11 - 4 = 7 (left: 5 7 7)",
              "11 - 5 = 6 (left: 4 6 7)",
              "7 - 4 = 3 (left: 3 5 11)",
              "7 - 5 = 2 (left: 2 4 11)",
              "11 / 4 = 2.75 (left: 2.75 5 7)",
              "11 / 5 = 2.2 (left: 2.2 4 7)",
              "7 / 4 = 1.75 (left: 1.75 5 11)",
              "7 / 5 = 1.4 (left: 1.4 4 11)"
            ],
            "parent_state": null
          }
        },
        {
          "check_name": "child_state",
          "node_id": "0_10",
          "result": "PASS",
          "reason": "State validation passed: Last thought '11 / 4 = 2.75 (left: 2.75 5 7)' found in parent's thoughts",
          "timestamp": "2025-05-29T20:06:54.421478",
          "event_type": "validation",
          "details": {
            "validation_success": [
              "Last thought '11 / 4 = 2.75 (left: 2.75 5 7)' found in parent's thoughts"
            ],
            "parent_thoughts": [
              "4 + 5 = 9 (left: 7 9 11)",
              "5 + 7 = 12 (left: 4 11 12)",
              "7 + 11 = 18 (left: 4 5 18)",
              "4 * 5 = 20 (left: 7 11 20)",
              "5 * 7 = 35 (left: 4 11 35)",
              "7 * 11 = 77 (left: 4 5 77)",
              "11 - 4 = 7 (left: 5 7 7)",
              "11 - 5 = 6 (left: 4 6 7)",
              "7 - 4 = 3 (left: 3 5 11)",
              "7 - 5 = 2 (left: 2 4 11)",
              "11 / 4 = 2.75 (left: 2.75 5 7)",
              "11 / 5 = 2.2 (left: 2.2 4 7)",
              "7 / 4 = 1.75 (left: 1.75 5 11)",
              "7 / 5 = 1.4 (left: 1.4 4 11)"
            ],
            "parent_state": null
          }
        },
        {
          "check_name": "child_state",
          "node_id": "0_13",
          "result": "PASS",
          "reason": "State validation passed: Last thought '7 / 5 = 1.4 (left: 1.4 4 11)' found in parent's thoughts",
          "timestamp": "2025-05-29T20:08:56.766304",
          "event_type": "validation",
          "details": {
            "validation_success": [
              "Last thought '7 / 5 = 1.4 (left: 1.4 4 11)' found in parent's thoughts"
            ],
            "parent_thoughts": [
              "4 + 5 = 9 (left: 7 9 11)",
              "5 + 7 = 12 (left: 4 11 12)",
              "7 + 11 = 18 (left: 4 5 18)",
              "4 * 5 = 20 (left: 7 11 20)",
              "5 * 7 = 35 (left: 4 11 35)",
              "7 * 11 = 77 (left: 4 5 77)",
              "11 - 4 = 7 (left: 5 7 7)",
              "11 - 5 = 6 (left: 4 6 7)",
              "7 - 4 = 3 (left: 3 5 11)",
              "7 - 5 = 2 (left: 2 4 11)",
              "11 / 4 = 2.75 (left: 2.75 5 7)",
              "11 / 5 = 2.2 (left: 2.2 4 7)",
              "7 / 4 = 1.75 (left: 1.75 5 11)",
              "7 / 5 = 1.4 (left: 1.4 4 11)"
            ],
            "parent_state": null
          }
        }
      ]
    },
    "child_id_assignment": {
      "FAIL": 0,
      "details": [
        {
          "check_name": "child_id_assignment",
          "node_id": "0_0",
          "result": "PASS",
          "reason": "node_id 0_0 matches thought position.",
          "timestamp": "2025-05-29T20:00:26.115296",
          "event_type": "validation",
          "details": {
            "node_id": "0_0",
            "state": "4 + 5 = 9 (left: 7 9 11)",
            "thoughts": [
              "4 + 5 = 9 (left: 7 9 11)",
              "5 + 7 = 12 (left: 4 11 12)",
              "7 + 11 = 18 (left: 4 5 18)",
              "4 * 5 = 20 (left: 7 11 20)",
              "5 * 7 = 35 (left: 4 11 35)",
              "7 * 11 = 77 (left: 4 5 77)",
              "11 - 4 = 7 (left: 5 7 7)",
              "11 - 5 = 6 (left: 4 6 7)",
              "7 - 4 = 3 (left: 3 5 11)",
              "7 - 5 = 2 (left: 2 4 11)",
              "11 / 4 = 2.75 (left: 2.75 5 7)",
              "11 / 5 = 2.2 (left: 2.2 4 7)",
              "7 / 4 = 1.75 (left: 1.75 5 11)",
              "7 / 5 = 1.4 (left: 1.4 4 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_0_0",
          "result": "PASS",
          "reason": "node_id 0_0_0 matches thought position.",
          "timestamp": "2025-05-29T20:00:42.964235",
          "event_type": "validation",
          "details": {
            "node_id": "0_0_0",
            "state": "7 + 9 = 16 (left: 11 16)",
            "thoughts": [
              "7 + 9 = 16 (left: 11 16)",
              "9 - 7 = 2 (left: 2 11)",
              "11 - 7 = 4 (left: 4 9)",
              "11 - 9 = 2 (left: 2 7)",
              "7 * 9 = 63 (left: 11 63)",
              "11 / 7 = 1.57 (left: 1.57 9)",
              "9 / 7 = 1.29 (left: 1.29 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_0_1",
          "result": "PASS",
          "reason": "node_id 0_0_1 matches thought position.",
          "timestamp": "2025-05-29T20:00:54.396627",
          "event_type": "validation",
          "details": {
            "node_id": "0_0_1",
            "state": "9 - 7 = 2 (left: 2 11)",
            "thoughts": [
              "7 + 9 = 16 (left: 11 16)",
              "9 - 7 = 2 (left: 2 11)",
              "11 - 7 = 4 (left: 4 9)",
              "11 - 9 = 2 (left: 2 7)",
              "7 * 9 = 63 (left: 11 63)",
              "11 / 7 = 1.57 (left: 1.57 9)",
              "9 / 7 = 1.29 (left: 1.29 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_0_2",
          "result": "PASS",
          "reason": "node_id 0_0_2 matches thought position.",
          "timestamp": "2025-05-29T20:01:01.530064",
          "event_type": "validation",
          "details": {
            "node_id": "0_0_2",
            "state": "11 - 7 = 4 (left: 4 9)",
            "thoughts": [
              "7 + 9 = 16 (left: 11 16)",
              "9 - 7 = 2 (left: 2 11)",
              "11 - 7 = 4 (left: 4 9)",
              "11 - 9 = 2 (left: 2 7)",
              "7 * 9 = 63 (left: 11 63)",
              "11 / 7 = 1.57 (left: 1.57 9)",
              "9 / 7 = 1.29 (left: 1.29 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_0_3",
          "result": "PASS",
          "reason": "node_id 0_0_3 matches thought position.",
          "timestamp": "2025-05-29T20:01:08.851081",
          "event_type": "validation",
          "details": {
            "node_id": "0_0_3",
            "state": "11 - 9 = 2 (left: 2 7)",
            "thoughts": [
              "7 + 9 = 16 (left: 11 16)",
              "9 - 7 = 2 (left: 2 11)",
              "11 - 7 = 4 (left: 4 9)",
              "11 - 9 = 2 (left: 2 7)",
              "7 * 9 = 63 (left: 11 63)",
              "11 / 7 = 1.57 (left: 1.57 9)",
              "9 / 7 = 1.29 (left: 1.29 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_0_4",
          "result": "PASS",
          "reason": "node_id 0_0_4 matches thought position.",
          "timestamp": "2025-05-29T20:01:19.298703",
          "event_type": "validation",
          "details": {
            "node_id": "0_0_4",
            "state": "7 * 9 = 63 (left: 11 63)",
            "thoughts": [
              "7 + 9 = 16 (left: 11 16)",
              "9 - 7 = 2 (left: 2 11)",
              "11 - 7 = 4 (left: 4 9)",
              "11 - 9 = 2 (left: 2 7)",
              "7 * 9 = 63 (left: 11 63)",
              "11 / 7 = 1.57 (left: 1.57 9)",
              "9 / 7 = 1.29 (left: 1.29 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_0_5",
          "result": "PASS",
          "reason": "node_id 0_0_5 matches thought position.",
          "timestamp": "2025-05-29T20:01:27.781523",
          "event_type": "validation",
          "details": {
            "node_id": "0_0_5",
            "state": "11 / 7 = 1.57 (left: 1.57 9)",
            "thoughts": [
              "7 + 9 = 16 (left: 11 16)",
              "9 - 7 = 2 (left: 2 11)",
              "11 - 7 = 4 (left: 4 9)",
              "11 - 9 = 2 (left: 2 7)",
              "7 * 9 = 63 (left: 11 63)",
              "11 / 7 = 1.57 (left: 1.57 9)",
              "9 / 7 = 1.29 (left: 1.29 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_0_6",
          "result": "PASS",
          "reason": "node_id 0_0_6 matches thought position.",
          "timestamp": "2025-05-29T20:01:38.719055",
          "event_type": "validation",
          "details": {
            "node_id": "0_0_6",
            "state": "9 / 7 = 1.29 (left: 1.29 11)",
            "thoughts": [
              "7 + 9 = 16 (left: 11 16)",
              "9 - 7 = 2 (left: 2 11)",
              "11 - 7 = 4 (left: 4 9)",
              "11 - 9 = 2 (left: 2 7)",
              "7 * 9 = 63 (left: 11 63)",
              "11 / 7 = 1.57 (left: 1.57 9)",
              "9 / 7 = 1.29 (left: 1.29 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_1",
          "result": "PASS",
          "reason": "node_id 0_1 matches thought position.",
          "timestamp": "2025-05-29T20:01:53.614652",
          "event_type": "validation",
          "details": {
            "node_id": "0_1",
            "state": "5 + 7 = 12 (left: 4 11 12)",
            "thoughts": [
              "4 + 5 = 9 (left: 7 9 11)",
              "5 + 7 = 12 (left: 4 11 12)",
              "7 + 11 = 18 (left: 4 5 18)",
              "4 * 5 = 20 (left: 7 11 20)",
              "5 * 7 = 35 (left: 4 11 35)",
              "7 * 11 = 77 (left: 4 5 77)",
              "11 - 4 = 7 (left: 5 7 7)",
              "11 - 5 = 6 (left: 4 6 7)",
              "7 - 4 = 3 (left: 3 5 11)",
              "7 - 5 = 2 (left: 2 4 11)",
              "11 / 4 = 2.75 (left: 2.75 5 7)",
              "11 / 5 = 2.2 (left: 2.2 4 7)",
              "7 / 4 = 1.75 (left: 1.75 5 11)",
              "7 / 5 = 1.4 (left: 1.4 4 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_2",
          "result": "PASS",
          "reason": "node_id 0_2 matches thought position.",
          "timestamp": "2025-05-29T20:02:05.708611",
          "event_type": "validation",
          "details": {
            "node_id": "0_2",
            "state": "7 + 11 = 18 (left: 4 5 18)",
            "thoughts": [
              "4 + 5 = 9 (left: 7 9 11)",
              "5 + 7 = 12 (left: 4 11 12)",
              "7 + 11 = 18 (left: 4 5 18)",
              "4 * 5 = 20 (left: 7 11 20)",
              "5 * 7 = 35 (left: 4 11 35)",
              "7 * 11 = 77 (left: 4 5 77)",
              "11 - 4 = 7 (left: 5 7 7)",
              "11 - 5 = 6 (left: 4 6 7)",
              "7 - 4 = 3 (left: 3 5 11)",
              "7 - 5 = 2 (left: 2 4 11)",
              "11 / 4 = 2.75 (left: 2.75 5 7)",
              "11 / 5 = 2.2 (left: 2.2 4 7)",
              "7 / 4 = 1.75 (left: 1.75 5 11)",
              "7 / 5 = 1.4 (left: 1.4 4 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_3",
          "result": "PASS",
          "reason": "node_id 0_3 matches thought position.",
          "timestamp": "2025-05-29T20:02:13.640874",
          "event_type": "validation",
          "details": {
            "node_id": "0_3",
            "state": "4 * 5 = 20 (left: 7 11 20)",
            "thoughts": [
              "4 + 5 = 9 (left: 7 9 11)",
              "5 + 7 = 12 (left: 4 11 12)",
              "7 + 11 = 18 (left: 4 5 18)",
              "4 * 5 = 20 (left: 7 11 20)",
              "5 * 7 = 35 (left: 4 11 35)",
              "7 * 11 = 77 (left: 4 5 77)",
              "11 - 4 = 7 (left: 5 7 7)",
              "11 - 5 = 6 (left: 4 6 7)",
              "7 - 4 = 3 (left: 3 5 11)",
              "7 - 5 = 2 (left: 2 4 11)",
              "11 / 4 = 2.75 (left: 2.75 5 7)",
              "11 / 5 = 2.2 (left: 2.2 4 7)",
              "7 / 4 = 1.75 (left: 1.75 5 11)",
              "7 / 5 = 1.4 (left: 1.4 4 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_4",
          "result": "PASS",
          "reason": "node_id 0_4 matches thought position.",
          "timestamp": "2025-05-29T20:02:23.958148",
          "event_type": "validation",
          "details": {
            "node_id": "0_4",
            "state": "5 * 7 = 35 (left: 4 11 35)",
            "thoughts": [
              "4 + 5 = 9 (left: 7 9 11)",
              "5 + 7 = 12 (left: 4 11 12)",
              "7 + 11 = 18 (left: 4 5 18)",
              "4 * 5 = 20 (left: 7 11 20)",
              "5 * 7 = 35 (left: 4 11 35)",
              "7 * 11 = 77 (left: 4 5 77)",
              "11 - 4 = 7 (left: 5 7 7)",
              "11 - 5 = 6 (left: 4 6 7)",
              "7 - 4 = 3 (left: 3 5 11)",
              "7 - 5 = 2 (left: 2 4 11)",
              "11 / 4 = 2.75 (left: 2.75 5 7)",
              "11 / 5 = 2.2 (left: 2.2 4 7)",
              "7 / 4 = 1.75 (left: 1.75 5 11)",
              "7 / 5 = 1.4 (left: 1.4 4 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_5",
          "result": "PASS",
          "reason": "node_id 0_5 matches thought position.",
          "timestamp": "2025-05-29T20:02:33.983788",
          "event_type": "validation",
          "details": {
            "node_id": "0_5",
            "state": "7 * 11 = 77 (left: 4 5 77)",
            "thoughts": [
              "4 + 5 = 9 (left: 7 9 11)",
              "5 + 7 = 12 (left: 4 11 12)",
              "7 + 11 = 18 (left: 4 5 18)",
              "4 * 5 = 20 (left: 7 11 20)",
              "5 * 7 = 35 (left: 4 11 35)",
              "7 * 11 = 77 (left: 4 5 77)",
              "11 - 4 = 7 (left: 5 7 7)",
              "11 - 5 = 6 (left: 4 6 7)",
              "7 - 4 = 3 (left: 3 5 11)",
              "7 - 5 = 2 (left: 2 4 11)",
              "11 / 4 = 2.75 (left: 2.75 5 7)",
              "11 / 5 = 2.2 (left: 2.2 4 7)",
              "7 / 4 = 1.75 (left: 1.75 5 11)",
              "7 / 5 = 1.4 (left: 1.4 4 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_6",
          "result": "PASS",
          "reason": "node_id 0_6 matches thought position.",
          "timestamp": "2025-05-29T20:02:43.190010",
          "event_type": "validation",
          "details": {
            "node_id": "0_6",
            "state": "11 - 4 = 7 (left: 5 7 7)",
            "thoughts": [
              "4 + 5 = 9 (left: 7 9 11)",
              "5 + 7 = 12 (left: 4 11 12)",
              "7 + 11 = 18 (left: 4 5 18)",
              "4 * 5 = 20 (left: 7 11 20)",
              "5 * 7 = 35 (left: 4 11 35)",
              "7 * 11 = 77 (left: 4 5 77)",
              "11 - 4 = 7 (left: 5 7 7)",
              "11 - 5 = 6 (left: 4 6 7)",
              "7 - 4 = 3 (left: 3 5 11)",
              "7 - 5 = 2 (left: 2 4 11)",
              "11 / 4 = 2.75 (left: 2.75 5 7)",
              "11 / 5 = 2.2 (left: 2.2 4 7)",
              "7 / 4 = 1.75 (left: 1.75 5 11)",
              "7 / 5 = 1.4 (left: 1.4 4 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_6_0",
          "result": "PASS",
          "reason": "node_id 0_6_0 matches thought position.",
          "timestamp": "2025-05-29T20:02:57.827313",
          "event_type": "validation",
          "details": {
            "node_id": "0_6_0",
            "state": "5 + 7 = 12 (left: 7 12)",
            "thoughts": [
              "5 + 7 = 12 (left: 7 12)",
              "5 - 7 = -2 (left: -2 7)",
              "7 - 5 = 2 (left: 2 7)",
              "7 / 5 = 1.4 (left: 1.4 7)",
              "5 * 7 = 35 (left: 7 35)",
              "7 * 7 = 49 (left: 5 49)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_6_1",
          "result": "PASS",
          "reason": "node_id 0_6_1 matches thought position.",
          "timestamp": "2025-05-29T20:03:05.873034",
          "event_type": "validation",
          "details": {
            "node_id": "0_6_1",
            "state": "5 - 7 = -2 (left: -2 7)",
            "thoughts": [
              "5 + 7 = 12 (left: 7 12)",
              "5 - 7 = -2 (left: -2 7)",
              "7 - 5 = 2 (left: 2 7)",
              "7 / 5 = 1.4 (left: 1.4 7)",
              "5 * 7 = 35 (left: 7 35)",
              "7 * 7 = 49 (left: 5 49)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_6_2",
          "result": "PASS",
          "reason": "node_id 0_6_2 matches thought position.",
          "timestamp": "2025-05-29T20:03:13.871902",
          "event_type": "validation",
          "details": {
            "node_id": "0_6_2",
            "state": "7 - 5 = 2 (left: 2 7)",
            "thoughts": [
              "5 + 7 = 12 (left: 7 12)",
              "5 - 7 = -2 (left: -2 7)",
              "7 - 5 = 2 (left: 2 7)",
              "7 / 5 = 1.4 (left: 1.4 7)",
              "5 * 7 = 35 (left: 7 35)",
              "7 * 7 = 49 (left: 5 49)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_6_3",
          "result": "PASS",
          "reason": "node_id 0_6_3 matches thought position.",
          "timestamp": "2025-05-29T20:03:22.241818",
          "event_type": "validation",
          "details": {
            "node_id": "0_6_3",
            "state": "7 / 5 = 1.4 (left: 1.4 7)",
            "thoughts": [
              "5 + 7 = 12 (left: 7 12)",
              "5 - 7 = -2 (left: -2 7)",
              "7 - 5 = 2 (left: 2 7)",
              "7 / 5 = 1.4 (left: 1.4 7)",
              "5 * 7 = 35 (left: 7 35)",
              "7 * 7 = 49 (left: 5 49)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_6_4",
          "result": "PASS",
          "reason": "node_id 0_6_4 matches thought position.",
          "timestamp": "2025-05-29T20:03:31.031814",
          "event_type": "validation",
          "details": {
            "node_id": "0_6_4",
            "state": "5 * 7 = 35 (left: 7 35)",
            "thoughts": [
              "5 + 7 = 12 (left: 7 12)",
              "5 - 7 = -2 (left: -2 7)",
              "7 - 5 = 2 (left: 2 7)",
              "7 / 5 = 1.4 (left: 1.4 7)",
              "5 * 7 = 35 (left: 7 35)",
              "7 * 7 = 49 (left: 5 49)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_6_5",
          "result": "PASS",
          "reason": "node_id 0_6_5 matches thought position.",
          "timestamp": "2025-05-29T20:03:39.377603",
          "event_type": "validation",
          "details": {
            "node_id": "0_6_5",
            "state": "7 * 7 = 49 (left: 5 49)",
            "thoughts": [
              "5 + 7 = 12 (left: 7 12)",
              "5 - 7 = -2 (left: -2 7)",
              "7 - 5 = 2 (left: 2 7)",
              "7 / 5 = 1.4 (left: 1.4 7)",
              "5 * 7 = 35 (left: 7 35)",
              "7 * 7 = 49 (left: 5 49)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_7",
          "result": "PASS",
          "reason": "node_id 0_7 matches thought position.",
          "timestamp": "2025-05-29T20:03:51.144336",
          "event_type": "validation",
          "details": {
            "node_id": "0_7",
            "state": "11 - 5 = 6 (left: 4 6 7)",
            "thoughts": [
              "4 + 5 = 9 (left: 7 9 11)",
              "5 + 7 = 12 (left: 4 11 12)",
              "7 + 11 = 18 (left: 4 5 18)",
              "4 * 5 = 20 (left: 7 11 20)",
              "5 * 7 = 35 (left: 4 11 35)",
              "7 * 11 = 77 (left: 4 5 77)",
              "11 - 4 = 7 (left: 5 7 7)",
              "11 - 5 = 6 (left: 4 6 7)",
              "7 - 4 = 3 (left: 3 5 11)",
              "7 - 5 = 2 (left: 2 4 11)",
              "11 / 4 = 2.75 (left: 2.75 5 7)",
              "11 / 5 = 2.2 (left: 2.2 4 7)",
              "7 / 4 = 1.75 (left: 1.75 5 11)",
              "7 / 5 = 1.4 (left: 1.4 4 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_7_0",
          "result": "PASS",
          "reason": "node_id 0_7_0 matches thought position.",
          "timestamp": "2025-05-29T20:04:07.920075",
          "event_type": "validation",
          "details": {
            "node_id": "0_7_0",
            "state": "4 + 6 = 10 (left: 7 10)",
            "thoughts": [
              "4 + 6 = 10 (left: 7 10)",
              "6 - 4 = 2 (left: 2 7)",
              "7 - 4 = 3 (left: 3 6)",
              "7 - 6 = 1 (left: 1 4)",
              "6 / 4 = 1.5 (left: 1.5 7)",
              "7 / 4 = 1.75 (left: 1.75 6)",
              "4 * 6 = 24 (left: 7 24)",
              "7 * 4 = 28 (left: 6 28)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_7_1",
          "result": "PASS",
          "reason": "node_id 0_7_1 matches thought position.",
          "timestamp": "2025-05-29T20:04:14.788354",
          "event_type": "validation",
          "details": {
            "node_id": "0_7_1",
            "state": "6 - 4 = 2 (left: 2 7)",
            "thoughts": [
              "4 + 6 = 10 (left: 7 10)",
              "6 - 4 = 2 (left: 2 7)",
              "7 - 4 = 3 (left: 3 6)",
              "7 - 6 = 1 (left: 1 4)",
              "6 / 4 = 1.5 (left: 1.5 7)",
              "7 / 4 = 1.75 (left: 1.75 6)",
              "4 * 6 = 24 (left: 7 24)",
              "7 * 4 = 28 (left: 6 28)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_7_2",
          "result": "PASS",
          "reason": "node_id 0_7_2 matches thought position.",
          "timestamp": "2025-05-29T20:04:22.806041",
          "event_type": "validation",
          "details": {
            "node_id": "0_7_2",
            "state": "7 - 4 = 3 (left: 3 6)",
            "thoughts": [
              "4 + 6 = 10 (left: 7 10)",
              "6 - 4 = 2 (left: 2 7)",
              "7 - 4 = 3 (left: 3 6)",
              "7 - 6 = 1 (left: 1 4)",
              "6 / 4 = 1.5 (left: 1.5 7)",
              "7 / 4 = 1.75 (left: 1.75 6)",
              "4 * 6 = 24 (left: 7 24)",
              "7 * 4 = 28 (left: 6 28)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_7_3",
          "result": "PASS",
          "reason": "node_id 0_7_3 matches thought position.",
          "timestamp": "2025-05-29T20:04:32.885310",
          "event_type": "validation",
          "details": {
            "node_id": "0_7_3",
            "state": "7 - 6 = 1 (left: 1 4)",
            "thoughts": [
              "4 + 6 = 10 (left: 7 10)",
              "6 - 4 = 2 (left: 2 7)",
              "7 - 4 = 3 (left: 3 6)",
              "7 - 6 = 1 (left: 1 4)",
              "6 / 4 = 1.5 (left: 1.5 7)",
              "7 / 4 = 1.75 (left: 1.75 6)",
              "4 * 6 = 24 (left: 7 24)",
              "7 * 4 = 28 (left: 6 28)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_7_4",
          "result": "PASS",
          "reason": "node_id 0_7_4 matches thought position.",
          "timestamp": "2025-05-29T20:04:43.465144",
          "event_type": "validation",
          "details": {
            "node_id": "0_7_4",
            "state": "6 / 4 = 1.5 (left: 1.5 7)",
            "thoughts": [
              "4 + 6 = 10 (left: 7 10)",
              "6 - 4 = 2 (left: 2 7)",
              "7 - 4 = 3 (left: 3 6)",
              "7 - 6 = 1 (left: 1 4)",
              "6 / 4 = 1.5 (left: 1.5 7)",
              "7 / 4 = 1.75 (left: 1.75 6)",
              "4 * 6 = 24 (left: 7 24)",
              "7 * 4 = 28 (left: 6 28)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_7_5",
          "result": "PASS",
          "reason": "node_id 0_7_5 matches thought position.",
          "timestamp": "2025-05-29T20:04:54.181463",
          "event_type": "validation",
          "details": {
            "node_id": "0_7_5",
            "state": "7 / 4 = 1.75 (left: 1.75 6)",
            "thoughts": [
              "4 + 6 = 10 (left: 7 10)",
              "6 - 4 = 2 (left: 2 7)",
              "7 - 4 = 3 (left: 3 6)",
              "7 - 6 = 1 (left: 1 4)",
              "6 / 4 = 1.5 (left: 1.5 7)",
              "7 / 4 = 1.75 (left: 1.75 6)",
              "4 * 6 = 24 (left: 7 24)",
              "7 * 4 = 28 (left: 6 28)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_7_6",
          "result": "PASS",
          "reason": "node_id 0_7_6 matches thought position.",
          "timestamp": "2025-05-29T20:05:03.120670",
          "event_type": "validation",
          "details": {
            "node_id": "0_7_6",
            "state": "4 * 6 = 24 (left: 7 24)",
            "thoughts": [
              "4 + 6 = 10 (left: 7 10)",
              "6 - 4 = 2 (left: 2 7)",
              "7 - 4 = 3 (left: 3 6)",
              "7 - 6 = 1 (left: 1 4)",
              "6 / 4 = 1.5 (left: 1.5 7)",
              "7 / 4 = 1.75 (left: 1.75 6)",
              "4 * 6 = 24 (left: 7 24)",
              "7 * 4 = 28 (left: 6 28)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_7_7",
          "result": "PASS",
          "reason": "node_id 0_7_7 matches thought position.",
          "timestamp": "2025-05-29T20:05:12.811183",
          "event_type": "validation",
          "details": {
            "node_id": "0_7_7",
            "state": "7 * 4 = 28 (left: 6 28)",
            "thoughts": [
              "4 + 6 = 10 (left: 7 10)",
              "6 - 4 = 2 (left: 2 7)",
              "7 - 4 = 3 (left: 3 6)",
              "7 - 6 = 1 (left: 1 4)",
              "6 / 4 = 1.5 (left: 1.5 7)",
              "7 / 4 = 1.75 (left: 1.75 6)",
              "4 * 6 = 24 (left: 7 24)",
              "7 * 4 = 28 (left: 6 28)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_8",
          "result": "PASS",
          "reason": "node_id 0_8 matches thought position.",
          "timestamp": "2025-05-29T20:05:24.834140",
          "event_type": "validation",
          "details": {
            "node_id": "0_8",
            "state": "7 - 4 = 3 (left: 3 5 11)",
            "thoughts": [
              "4 + 5 = 9 (left: 7 9 11)",
              "5 + 7 = 12 (left: 4 11 12)",
              "7 + 11 = 18 (left: 4 5 18)",
              "4 * 5 = 20 (left: 7 11 20)",
              "5 * 7 = 35 (left: 4 11 35)",
              "7 * 11 = 77 (left: 4 5 77)",
              "11 - 4 = 7 (left: 5 7 7)",
              "11 - 5 = 6 (left: 4 6 7)",
              "7 - 4 = 3 (left: 3 5 11)",
              "7 - 5 = 2 (left: 2 4 11)",
              "11 / 4 = 2.75 (left: 2.75 5 7)",
              "11 / 5 = 2.2 (left: 2.2 4 7)",
              "7 / 4 = 1.75 (left: 1.75 5 11)",
              "7 / 5 = 1.4 (left: 1.4 4 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_8_0",
          "result": "PASS",
          "reason": "node_id 0_8_0 matches thought position.",
          "timestamp": "2025-05-29T20:05:41.232795",
          "event_type": "validation",
          "details": {
            "node_id": "0_8_0",
            "state": "3 + 5 = 8 (left: 8 11)",
            "thoughts": [
              "3 + 5 = 8 (left: 8 11)",
              "5 - 3 = 2 (left: 2 11)",
              "11 - 3 = 8 (left: 5 8)",
              "3 * 5 = 15 (left: 11 15)",
              "11 - 5 = 6 (left: 3 6)",
              "11 / 3 = Approximately 3.67 (left: 3.67 5)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_8_1",
          "result": "PASS",
          "reason": "node_id 0_8_1 matches thought position.",
          "timestamp": "2025-05-29T20:05:49.202877",
          "event_type": "validation",
          "details": {
            "node_id": "0_8_1",
            "state": "5 - 3 = 2 (left: 2 11)",
            "thoughts": [
              "3 + 5 = 8 (left: 8 11)",
              "5 - 3 = 2 (left: 2 11)",
              "11 - 3 = 8 (left: 5 8)",
              "3 * 5 = 15 (left: 11 15)",
              "11 - 5 = 6 (left: 3 6)",
              "11 / 3 = Approximately 3.67 (left: 3.67 5)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_8_2",
          "result": "PASS",
          "reason": "node_id 0_8_2 matches thought position.",
          "timestamp": "2025-05-29T20:05:59.621583",
          "event_type": "validation",
          "details": {
            "node_id": "0_8_2",
            "state": "11 - 3 = 8 (left: 5 8)",
            "thoughts": [
              "3 + 5 = 8 (left: 8 11)",
              "5 - 3 = 2 (left: 2 11)",
              "11 - 3 = 8 (left: 5 8)",
              "3 * 5 = 15 (left: 11 15)",
              "11 - 5 = 6 (left: 3 6)",
              "11 / 3 = Approximately 3.67 (left: 3.67 5)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_8_3",
          "result": "PASS",
          "reason": "node_id 0_8_3 matches thought position.",
          "timestamp": "2025-05-29T20:06:08.554037",
          "event_type": "validation",
          "details": {
            "node_id": "0_8_3",
            "state": "3 * 5 = 15 (left: 11 15)",
            "thoughts": [
              "3 + 5 = 8 (left: 8 11)",
              "5 - 3 = 2 (left: 2 11)",
              "11 - 3 = 8 (left: 5 8)",
              "3 * 5 = 15 (left: 11 15)",
              "11 - 5 = 6 (left: 3 6)",
              "11 / 3 = Approximately 3.67 (left: 3.67 5)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_8_4",
          "result": "PASS",
          "reason": "node_id 0_8_4 matches thought position.",
          "timestamp": "2025-05-29T20:06:16.384863",
          "event_type": "validation",
          "details": {
            "node_id": "0_8_4",
            "state": "11 - 5 = 6 (left: 3 6)",
            "thoughts": [
              "3 + 5 = 8 (left: 8 11)",
              "5 - 3 = 2 (left: 2 11)",
              "11 - 3 = 8 (left: 5 8)",
              "3 * 5 = 15 (left: 11 15)",
              "11 - 5 = 6 (left: 3 6)",
              "11 / 3 = Approximately 3.67 (left: 3.67 5)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_8_5",
          "result": "PASS",
          "reason": "node_id 0_8_5 matches thought position.",
          "timestamp": "2025-05-29T20:06:25.632556",
          "event_type": "validation",
          "details": {
            "node_id": "0_8_5",
            "state": "11 / 3 = Approximately 3.67 (left: 3.67 5)",
            "thoughts": [
              "3 + 5 = 8 (left: 8 11)",
              "5 - 3 = 2 (left: 2 11)",
              "11 - 3 = 8 (left: 5 8)",
              "3 * 5 = 15 (left: 11 15)",
              "11 - 5 = 6 (left: 3 6)",
              "11 / 3 = Approximately 3.67 (left: 3.67 5)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_9",
          "result": "PASS",
          "reason": "node_id 0_9 matches thought position.",
          "timestamp": "2025-05-29T20:06:41.800219",
          "event_type": "validation",
          "details": {
            "node_id": "0_9",
            "state": "7 - 5 = 2 (left: 2 4 11)",
            "thoughts": [
              "4 + 5 = 9 (left: 7 9 11)",
              "5 + 7 = 12 (left: 4 11 12)",
              "7 + 11 = 18 (left: 4 5 18)",
              "4 * 5 = 20 (left: 7 11 20)",
              "5 * 7 = 35 (left: 4 11 35)",
              "7 * 11 = 77 (left: 4 5 77)",
              "11 - 4 = 7 (left: 5 7 7)",
              "11 - 5 = 6 (left: 4 6 7)",
              "7 - 4 = 3 (left: 3 5 11)",
              "7 - 5 = 2 (left: 2 4 11)",
              "11 / 4 = 2.75 (left: 2.75 5 7)",
              "11 / 5 = 2.2 (left: 2.2 4 7)",
              "7 / 4 = 1.75 (left: 1.75 5 11)",
              "7 / 5 = 1.4 (left: 1.4 4 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_10",
          "result": "PASS",
          "reason": "node_id 0_10 matches thought position.",
          "timestamp": "2025-05-29T20:06:54.421518",
          "event_type": "validation",
          "details": {
            "node_id": "0_10",
            "state": "11 / 4 = 2.75 (left: 2.75 5 7)",
            "thoughts": [
              "4 + 5 = 9 (left: 7 9 11)",
              "5 + 7 = 12 (left: 4 11 12)",
              "7 + 11 = 18 (left: 4 5 18)",
              "4 * 5 = 20 (left: 7 11 20)",
              "5 * 7 = 35 (left: 4 11 35)",
              "7 * 11 = 77 (left: 4 5 77)",
              "11 - 4 = 7 (left: 5 7 7)",
              "11 - 5 = 6 (left: 4 6 7)",
              "7 - 4 = 3 (left: 3 5 11)",
              "7 - 5 = 2 (left: 2 4 11)",
              "11 / 4 = 2.75 (left: 2.75 5 7)",
              "11 / 5 = 2.2 (left: 2.2 4 7)",
              "7 / 4 = 1.75 (left: 1.75 5 11)",
              "7 / 5 = 1.4 (left: 1.4 4 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_10_0",
          "result": "PASS",
          "reason": "node_id 0_10_0 matches thought position.",
          "timestamp": "2025-05-29T20:07:12.636141",
          "event_type": "validation",
          "details": {
            "node_id": "0_10_0",
            "state": "2.75 + 5 = 7.75 (left: 7 7.75)",
            "thoughts": [
              "2.75 + 5 = 7.75 (left: 7 7.75)",
              "5 - 2.75 = 2.25 (left: 2.25 7)",
              "7 - 2.75 = 4.25 (left: 4.25 5)",
              "7 - 5 = 2 (left: 2 2.75)",
              "5 / 2.75 = 1.81818182 (left: 1.81818182 7)",
              "7 / 2.75 = 2.54545455 (left: 2.54545455 5)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_10_1",
          "result": "PASS",
          "reason": "node_id 0_10_1 matches thought position.",
          "timestamp": "2025-05-29T20:07:22.020406",
          "event_type": "validation",
          "details": {
            "node_id": "0_10_1",
            "state": "5 - 2.75 = 2.25 (left: 2.25 7)",
            "thoughts": [
              "2.75 + 5 = 7.75 (left: 7 7.75)",
              "5 - 2.75 = 2.25 (left: 2.25 7)",
              "7 - 2.75 = 4.25 (left: 4.25 5)",
              "7 - 5 = 2 (left: 2 2.75)",
              "5 / 2.75 = 1.81818182 (left: 1.81818182 7)",
              "7 / 2.75 = 2.54545455 (left: 2.54545455 5)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_10_2",
          "result": "PASS",
          "reason": "node_id 0_10_2 matches thought position.",
          "timestamp": "2025-05-29T20:07:35.613567",
          "event_type": "validation",
          "details": {
            "node_id": "0_10_2",
            "state": "7 - 2.75 = 4.25 (left: 4.25 5)",
            "thoughts": [
              "2.75 + 5 = 7.75 (left: 7 7.75)",
              "5 - 2.75 = 2.25 (left: 2.25 7)",
              "7 - 2.75 = 4.25 (left: 4.25 5)",
              "7 - 5 = 2 (left: 2 2.75)",
              "5 / 2.75 = 1.81818182 (left: 1.81818182 7)",
              "7 / 2.75 = 2.54545455 (left: 2.54545455 5)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_10_3",
          "result": "PASS",
          "reason": "node_id 0_10_3 matches thought position.",
          "timestamp": "2025-05-29T20:07:50.050849",
          "event_type": "validation",
          "details": {
            "node_id": "0_10_3",
            "state": "7 - 5 = 2 (left: 2 2.75)",
            "thoughts": [
              "2.75 + 5 = 7.75 (left: 7 7.75)",
              "5 - 2.75 = 2.25 (left: 2.25 7)",
              "7 - 2.75 = 4.25 (left: 4.25 5)",
              "7 - 5 = 2 (left: 2 2.75)",
              "5 / 2.75 = 1.81818182 (left: 1.81818182 7)",
              "7 / 2.75 = 2.54545455 (left: 2.54545455 5)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_10_4",
          "result": "PASS",
          "reason": "node_id 0_10_4 matches thought position.",
          "timestamp": "2025-05-29T20:08:07.551832",
          "event_type": "validation",
          "details": {
            "node_id": "0_10_4",
            "state": "5 / 2.75 = 1.81818182 (left: 1.81818182 7)",
            "thoughts": [
              "2.75 + 5 = 7.75 (left: 7 7.75)",
              "5 - 2.75 = 2.25 (left: 2.25 7)",
              "7 - 2.75 = 4.25 (left: 4.25 5)",
              "7 - 5 = 2 (left: 2 2.75)",
              "5 / 2.75 = 1.81818182 (left: 1.81818182 7)",
              "7 / 2.75 = 2.54545455 (left: 2.54545455 5)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_10_5",
          "result": "PASS",
          "reason": "node_id 0_10_5 matches thought position.",
          "timestamp": "2025-05-29T20:08:20.220490",
          "event_type": "validation",
          "details": {
            "node_id": "0_10_5",
            "state": "7 / 2.75 = 2.54545455 (left: 2.54545455 5)",
            "thoughts": [
              "2.75 + 5 = 7.75 (left: 7 7.75)",
              "5 - 2.75 = 2.25 (left: 2.25 7)",
              "7 - 2.75 = 4.25 (left: 4.25 5)",
              "7 - 5 = 2 (left: 2 2.75)",
              "5 / 2.75 = 1.81818182 (left: 1.81818182 7)",
              "7 / 2.75 = 2.54545455 (left: 2.54545455 5)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_11",
          "result": "PASS",
          "reason": "node_id 0_11 matches thought position.",
          "timestamp": "2025-05-29T20:08:32.101276",
          "event_type": "validation",
          "details": {
            "node_id": "0_11",
            "state": "11 / 5 = 2.2 (left: 2.2 4 7)",
            "thoughts": [
              "4 + 5 = 9 (left: 7 9 11)",
              "5 + 7 = 12 (left: 4 11 12)",
              "7 + 11 = 18 (left: 4 5 18)",
              "4 * 5 = 20 (left: 7 11 20)",
              "5 * 7 = 35 (left: 4 11 35)",
              "7 * 11 = 77 (left: 4 5 77)",
              "11 - 4 = 7 (left: 5 7 7)",
              "11 - 5 = 6 (left: 4 6 7)",
              "7 - 4 = 3 (left: 3 5 11)",
              "7 - 5 = 2 (left: 2 4 11)",
              "11 / 4 = 2.75 (left: 2.75 5 7)",
              "11 / 5 = 2.2 (left: 2.2 4 7)",
              "7 / 4 = 1.75 (left: 1.75 5 11)",
              "7 / 5 = 1.4 (left: 1.4 4 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_12",
          "result": "PASS",
          "reason": "node_id 0_12 matches thought position.",
          "timestamp": "2025-05-29T20:08:43.079198",
          "event_type": "validation",
          "details": {
            "node_id": "0_12",
            "state": "7 / 4 = 1.75 (left: 1.75 5 11)",
            "thoughts": [
              "4 + 5 = 9 (left: 7 9 11)",
              "5 + 7 = 12 (left: 4 11 12)",
              "7 + 11 = 18 (left: 4 5 18)",
              "4 * 5 = 20 (left: 7 11 20)",
              "5 * 7 = 35 (left: 4 11 35)",
              "7 * 11 = 77 (left: 4 5 77)",
              "11 - 4 = 7 (left: 5 7 7)",
              "11 - 5 = 6 (left: 4 6 7)",
              "7 - 4 = 3 (left: 3 5 11)",
              "7 - 5 = 2 (left: 2 4 11)",
              "11 / 4 = 2.75 (left: 2.75 5 7)",
              "11 / 5 = 2.2 (left: 2.2 4 7)",
              "7 / 4 = 1.75 (left: 1.75 5 11)",
              "7 / 5 = 1.4 (left: 1.4 4 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_13",
          "result": "PASS",
          "reason": "node_id 0_13 matches thought position.",
          "timestamp": "2025-05-29T20:08:56.766337",
          "event_type": "validation",
          "details": {
            "node_id": "0_13",
            "state": "7 / 5 = 1.4 (left: 1.4 4 11)",
            "thoughts": [
              "4 + 5 = 9 (left: 7 9 11)",
              "5 + 7 = 12 (left: 4 11 12)",
              "7 + 11 = 18 (left: 4 5 18)",
              "4 * 5 = 20 (left: 7 11 20)",
              "5 * 7 = 35 (left: 4 11 35)",
              "7 * 11 = 77 (left: 4 5 77)",
              "11 - 4 = 7 (left: 5 7 7)",
              "11 - 5 = 6 (left: 4 6 7)",
              "7 - 4 = 3 (left: 3 5 11)",
              "7 - 5 = 2 (left: 2 4 11)",
              "11 / 4 = 2.75 (left: 2.75 5 7)",
              "11 / 5 = 2.2 (left: 2.2 4 7)",
              "7 / 4 = 1.75 (left: 1.75 5 11)",
              "7 / 5 = 1.4 (left: 1.4 4 11)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_13_0",
          "result": "PASS",
          "reason": "node_id 0_13_0 matches thought position.",
          "timestamp": "2025-05-29T20:09:18.465406",
          "event_type": "validation",
          "details": {
            "node_id": "0_13_0",
            "state": "1.4 + 4 = 5.4 (left: 5.4 11)",
            "thoughts": [
              "1.4 + 4 = 5.4 (left: 5.4 11)",
              "11 - 4 = 7 (left: 1.4 7)",
              "11 / 1.4 = 7.86 (approx) (left: 4 7.86)",
              "4 * 1.4 = 5.6 (left: 5.6 11)",
              "11 - 1.4 = 9.6 (left: 4 9.6)",
              "4 - 1.4 = 2.6 (left: 2.6 11)",
              "11 / 4 = 2.75 (left: 1.4 2.75)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_13_1",
          "result": "PASS",
          "reason": "node_id 0_13_1 matches thought position.",
          "timestamp": "2025-05-29T20:09:28.526597",
          "event_type": "validation",
          "details": {
            "node_id": "0_13_1",
            "state": "11 - 4 = 7 (left: 1.4 7)",
            "thoughts": [
              "1.4 + 4 = 5.4 (left: 5.4 11)",
              "11 - 4 = 7 (left: 1.4 7)",
              "11 / 1.4 = 7.86 (approx) (left: 4 7.86)",
              "4 * 1.4 = 5.6 (left: 5.6 11)",
              "11 - 1.4 = 9.6 (left: 4 9.6)",
              "4 - 1.4 = 2.6 (left: 2.6 11)",
              "11 / 4 = 2.75 (left: 1.4 2.75)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_13_2",
          "result": "PASS",
          "reason": "node_id 0_13_2 matches thought position.",
          "timestamp": "2025-05-29T20:09:41.895499",
          "event_type": "validation",
          "details": {
            "node_id": "0_13_2",
            "state": "11 / 1.4 = 7.86 (approx) (left: 4 7.86)",
            "thoughts": [
              "1.4 + 4 = 5.4 (left: 5.4 11)",
              "11 - 4 = 7 (left: 1.4 7)",
              "11 / 1.4 = 7.86 (approx) (left: 4 7.86)",
              "4 * 1.4 = 5.6 (left: 5.6 11)",
              "11 - 1.4 = 9.6 (left: 4 9.6)",
              "4 - 1.4 = 2.6 (left: 2.6 11)",
              "11 / 4 = 2.75 (left: 1.4 2.75)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_13_3",
          "result": "PASS",
          "reason": "node_id 0_13_3 matches thought position.",
          "timestamp": "2025-05-29T20:09:52.189625",
          "event_type": "validation",
          "details": {
            "node_id": "0_13_3",
            "state": "4 * 1.4 = 5.6 (left: 5.6 11)",
            "thoughts": [
              "1.4 + 4 = 5.4 (left: 5.4 11)",
              "11 - 4 = 7 (left: 1.4 7)",
              "11 / 1.4 = 7.86 (approx) (left: 4 7.86)",
              "4 * 1.4 = 5.6 (left: 5.6 11)",
              "11 - 1.4 = 9.6 (left: 4 9.6)",
              "4 - 1.4 = 2.6 (left: 2.6 11)",
              "11 / 4 = 2.75 (left: 1.4 2.75)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_13_4",
          "result": "PASS",
          "reason": "node_id 0_13_4 matches thought position.",
          "timestamp": "2025-05-29T20:10:05.601720",
          "event_type": "validation",
          "details": {
            "node_id": "0_13_4",
            "state": "11 - 1.4 = 9.6 (left: 4 9.6)",
            "thoughts": [
              "1.4 + 4 = 5.4 (left: 5.4 11)",
              "11 - 4 = 7 (left: 1.4 7)",
              "11 / 1.4 = 7.86 (approx) (left: 4 7.86)",
              "4 * 1.4 = 5.6 (left: 5.6 11)",
              "11 - 1.4 = 9.6 (left: 4 9.6)",
              "4 - 1.4 = 2.6 (left: 2.6 11)",
              "11 / 4 = 2.75 (left: 1.4 2.75)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_13_5",
          "result": "PASS",
          "reason": "node_id 0_13_5 matches thought position.",
          "timestamp": "2025-05-29T20:10:16.015208",
          "event_type": "validation",
          "details": {
            "node_id": "0_13_5",
            "state": "4 - 1.4 = 2.6 (left: 2.6 11)",
            "thoughts": [
              "1.4 + 4 = 5.4 (left: 5.4 11)",
              "11 - 4 = 7 (left: 1.4 7)",
              "11 / 1.4 = 7.86 (approx) (left: 4 7.86)",
              "4 * 1.4 = 5.6 (left: 5.6 11)",
              "11 - 1.4 = 9.6 (left: 4 9.6)",
              "4 - 1.4 = 2.6 (left: 2.6 11)",
              "11 / 4 = 2.75 (left: 1.4 2.75)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_13_6",
          "result": "PASS",
          "reason": "node_id 0_13_6 matches thought position.",
          "timestamp": "2025-05-29T20:10:31.779841",
          "event_type": "validation",
          "details": {
            "node_id": "0_13_6",
            "state": "11 / 4 = 2.75 (left: 1.4 2.75)",
            "thoughts": [
              "1.4 + 4 = 5.4 (left: 5.4 11)",
              "11 - 4 = 7 (left: 1.4 7)",
              "11 / 1.4 = 7.86 (approx) (left: 4 7.86)",
              "4 * 1.4 = 5.6 (left: 5.6 11)",
              "11 - 1.4 = 9.6 (left: 4 9.6)",
              "4 - 1.4 = 2.6 (left: 2.6 11)",
              "11 / 4 = 2.75 (left: 1.4 2.75)"
            ]
          }
        }
      ]
    },
    "node_state": {
      "FAIL": 0,
      "details": [
        {
          "check_name": "node_state",
          "node_id": "0_0",
          "result": "PASS",
          "reason": "State consistency check passed",
          "timestamp": "2025-05-29T20:00:33.352788",
          "event_type": "validation",
          "details": {
            "expected_state": "4 + 5 = 9 (left: 7 9 11)",
            "actual_state": "4 + 5 = 9 (left: 7 9 11)"
          }
        },
        {
          "check_name": "node_state",
          "node_id": "0_6",
          "result": "PASS",
          "reason": "State consistency check passed",
          "timestamp": "2025-05-29T20:02:49.826764",
          "event_type": "validation",
          "details": {
            "expected_state": "11 - 4 = 7 (left: 5 7 7)",
            "actual_state": "11 - 4 = 7 (left: 5 7 7)"
          }
        },
        {
          "check_name": "node_state",
          "node_id": "0_7",
          "result": "PASS",
          "reason": "State consistency check passed",
          "timestamp": "2025-05-29T20:03:57.582909",
          "event_type": "validation",
          "details": {
            "expected_state": "11 - 5 = 6 (left: 4 6 7)",
            "actual_state": "11 - 5 = 6 (left: 4 6 7)"
          }
        },
        {
          "check_name": "node_state",
          "node_id": "0_8",
          "result": "PASS",
          "reason": "State consistency check passed",
          "timestamp": "2025-05-29T20:05:30.603479",
          "event_type": "validation",
          "details": {
            "expected_state": "7 - 4 = 3 (left: 3 5 11)",
            "actual_state": "7 - 4 = 3 (left: 3 5 11)"
          }
        },
        {
          "check_name": "node_state",
          "node_id": "0_10",
          "result": "PASS",
          "reason": "State consistency check passed",
          "timestamp": "2025-05-29T20:07:01.096028",
          "event_type": "validation",
          "details": {
            "expected_state": "11 / 4 = 2.75 (left: 2.75 5 7)",
            "actual_state": "11 / 4 = 2.75 (left: 2.75 5 7)"
          }
        },
        {
          "check_name": "node_state",
          "node_id": "0_13",
          "result": "PASS",
          "reason": "State consistency check passed",
          "timestamp": "2025-05-29T20:09:05.329767",
          "event_type": "validation",
          "details": {
            "expected_state": "7 / 5 = 1.4 (left: 1.4 4 11)",
            "actual_state": "7 / 5 = 1.4 (left: 1.4 4 11)"
          }
        }
      ]
    },
    "pruning": {
      "FAIL": 0,
      "details": [
        {
          "check_name": "pruning",
          "node_id": "0_0_0",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:00:42.964167",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_0_1",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:00:54.396555",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_0_2",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:01:01.529990",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_0_3",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:01:08.851002",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_0_4",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:01:19.298613",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_0_5",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:01:27.781444",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_0_6",
          "result": "PASS",
          "reason": "Value 1.002 meets threshold 3.0",
          "timestamp": "2025-05-29T20:01:38.718982",
          "event_type": "validation",
          "details": {
            "value": 1.002,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_1",
          "result": "PASS",
          "reason": "Value 2.001 meets threshold 3.0",
          "timestamp": "2025-05-29T20:01:53.614605",
          "event_type": "validation",
          "details": {
            "value": 2.001,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_2",
          "result": "PASS",
          "reason": "Value 2.001 meets threshold 3.0",
          "timestamp": "2025-05-29T20:02:05.708546",
          "event_type": "validation",
          "details": {
            "value": 2.001,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_3",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:02:13.640807",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_4",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:02:23.958057",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_5",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:02:33.983719",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_6_0",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:02:57.827230",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_6_1",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:03:05.872965",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_6_2",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:03:13.871833",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_6_3",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:03:22.241754",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_6_4",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:03:31.031743",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_6_5",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:03:39.377530",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_7_0",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:04:07.919992",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_7_1",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:04:14.788286",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_7_2",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:04:22.805830",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_7_3",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:04:32.885195",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_7_4",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:04:43.465084",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_7_5",
          "result": "PASS",
          "reason": "Value 1.002 meets threshold 3.0",
          "timestamp": "2025-05-29T20:04:54.181399",
          "event_type": "validation",
          "details": {
            "value": 1.002,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_7_6",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:05:03.120609",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_7_7",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:05:12.811110",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_8_0",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:05:41.232600",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_8_1",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:05:49.202808",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_8_2",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:05:59.621528",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_8_3",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:06:08.553957",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_8_4",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:06:16.384800",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_8_5",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:06:25.632482",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_9",
          "result": "PASS",
          "reason": "Value 2.001 meets threshold 3.0",
          "timestamp": "2025-05-29T20:06:41.800180",
          "event_type": "validation",
          "details": {
            "value": 2.001,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_10_0",
          "result": "PASS",
          "reason": "Value 1.002 meets threshold 3.0",
          "timestamp": "2025-05-29T20:07:12.636057",
          "event_type": "validation",
          "details": {
            "value": 1.002,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_10_1",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:07:22.020340",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_10_2",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:07:35.613492",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_10_3",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:07:50.050788",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_10_4",
          "result": "PASS",
          "reason": "Value 2.001 meets threshold 3.0",
          "timestamp": "2025-05-29T20:08:07.551751",
          "event_type": "validation",
          "details": {
            "value": 2.001,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_10_5",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:08:20.220404",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_11",
          "result": "PASS",
          "reason": "Value 2.001 meets threshold 3.0",
          "timestamp": "2025-05-29T20:08:32.101231",
          "event_type": "validation",
          "details": {
            "value": 2.001,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_12",
          "result": "PASS",
          "reason": "Value 2.001 meets threshold 3.0",
          "timestamp": "2025-05-29T20:08:43.079121",
          "event_type": "validation",
          "details": {
            "value": 2.001,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_13_0",
          "result": "PASS",
          "reason": "Value 2.001 meets threshold 3.0",
          "timestamp": "2025-05-29T20:09:18.465344",
          "event_type": "validation",
          "details": {
            "value": 2.001,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_13_1",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:09:28.526528",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_13_2",
          "result": "PASS",
          "reason": "Value 2.001 meets threshold 3.0",
          "timestamp": "2025-05-29T20:09:41.895418",
          "event_type": "validation",
          "details": {
            "value": 2.001,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_13_3",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:09:52.189556",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_13_4",
          "result": "PASS",
          "reason": "Value 1.002 meets threshold 3.0",
          "timestamp": "2025-05-29T20:10:05.601630",
          "event_type": "validation",
          "details": {
            "value": 1.002,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_13_5",
          "result": "PASS",
          "reason": "Value 2.001 meets threshold 3.0",
          "timestamp": "2025-05-29T20:10:16.015133",
          "event_type": "validation",
          "details": {
            "value": 2.001,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pruning",
          "node_id": "0_13_6",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T20:10:31.779777",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        }
      ]
    },
    "backtracking_I": {
      "FAIL": 0,
      "details": [
        {
          "check_name": "backtracking_I",
          "node_id": "0_0",
          "result": "PASS",
          "reason": "Complete backtracking validation passed: Correctly popped expected node 0_0; Correctly backtracking to parent '0'",
          "timestamp": "2025-05-29T20:01:40.385419",
          "event_type": "validation",
          "details": {
            "popped_node": "0_0",
            "expected_popped": "0_0",
            "backtrack_to": "0",
            "expected_parent": "0",
            "validation_details": [
              "Correctly popped expected node 0_0",
              "Correctly backtracking to parent '0'"
            ]
          }
        },
        {
          "check_name": "backtracking_I",
          "node_id": "0_6",
          "result": "PASS",
          "reason": "Complete backtracking validation passed: Correctly popped expected node 0_6; Correctly backtracking to parent '0'",
          "timestamp": "2025-05-29T20:03:41.206075",
          "event_type": "validation",
          "details": {
            "popped_node": "0_6",
            "expected_popped": "0_6",
            "backtrack_to": "0",
            "expected_parent": "0",
            "validation_details": [
              "Correctly popped expected node 0_6",
              "Correctly backtracking to parent '0'"
            ]
          }
        },
        {
          "check_name": "backtracking_I",
          "node_id": "0_7",
          "result": "PASS",
          "reason": "Complete backtracking validation passed: Correctly popped expected node 0_7; Correctly backtracking to parent '0'",
          "timestamp": "2025-05-29T20:05:14.656526",
          "event_type": "validation",
          "details": {
            "popped_node": "0_7",
            "expected_popped": "0_7",
            "backtrack_to": "0",
            "expected_parent": "0",
            "validation_details": [
              "Correctly popped expected node 0_7",
              "Correctly backtracking to parent '0'"
            ]
          }
        },
        {
          "check_name": "backtracking_I",
          "node_id": "0_8",
          "result": "PASS",
          "reason": "Complete backtracking validation passed: Correctly popped expected node 0_8; Correctly backtracking to parent '0'",
          "timestamp": "2025-05-29T20:06:27.350950",
          "event_type": "validation",
          "details": {
            "popped_node": "0_8",
            "expected_popped": "0_8",
            "backtrack_to": "0",
            "expected_parent": "0",
            "validation_details": [
              "Correctly popped expected node 0_8",
              "Correctly backtracking to parent '0'"
            ]
          }
        },
        {
          "check_name": "backtracking_I",
          "node_id": "0_10",
          "result": "PASS",
          "reason": "Complete backtracking validation passed: Correctly popped expected node 0_10; Correctly backtracking to parent '0'",
          "timestamp": "2025-05-29T20:08:21.805293",
          "event_type": "validation",
          "details": {
            "popped_node": "0_10",
            "expected_popped": "0_10",
            "backtrack_to": "0",
            "expected_parent": "0",
            "validation_details": [
              "Correctly popped expected node 0_10",
              "Correctly backtracking to parent '0'"
            ]
          }
        },
        {
          "check_name": "backtracking_I",
          "node_id": "0_13",
          "result": "PASS",
          "reason": "Complete backtracking validation passed: Correctly popped expected node 0_13; Correctly backtracking to parent '0'",
          "timestamp": "2025-05-29T20:10:33.977968",
          "event_type": "validation",
          "details": {
            "popped_node": "0_13",
            "expected_popped": "0_13",
            "backtrack_to": "0",
            "expected_parent": "0",
            "validation_details": [
              "Correctly popped expected node 0_13",
              "Correctly backtracking to parent '0'"
            ]
          }
        },
        {
          "check_name": "backtracking_I",
          "node_id": "0",
          "result": "PASS",
          "reason": "Complete backtracking validation passed: Correctly popped expected node 0; Correctly backtracking to parent 'None'",
          "timestamp": "2025-05-29T20:10:35.869259",
          "event_type": "validation",
          "details": {
            "popped_node": "0",
            "expected_popped": "0",
            "backtrack_to": "None",
            "expected_parent": "None",
            "validation_details": [
              "Correctly popped expected node 0",
              "Correctly backtracking to parent 'None'"
            ]
          }
        }
      ]
    },
    "backtracking_III": {
      "FAIL": 0,
      "details": [
        {
          "check_name": "backtracking_III",
          "node_id": "0_0",
          "result": "PASS",
          "reason": "All 7 children explored - valid backtrack",
          "timestamp": "2025-05-29T20:01:40.385440",
          "event_type": "validation",
          "details": {
            "total_thoughts": 7,
            "evaluated_children": 7
          }
        },
        {
          "check_name": "backtracking_III",
          "node_id": "0_6",
          "result": "PASS",
          "reason": "All 6 children explored - valid backtrack",
          "timestamp": "2025-05-29T20:03:41.206099",
          "event_type": "validation",
          "details": {
            "total_thoughts": 6,
            "evaluated_children": 6
          }
        },
        {
          "check_name": "backtracking_III",
          "node_id": "0_7",
          "result": "PASS",
          "reason": "All 8 children explored - valid backtrack",
          "timestamp": "2025-05-29T20:05:14.656556",
          "event_type": "validation",
          "details": {
            "total_thoughts": 8,
            "evaluated_children": 8
          }
        },
        {
          "check_name": "backtracking_III",
          "node_id": "0_8",
          "result": "PASS",
          "reason": "All 6 children explored - valid backtrack",
          "timestamp": "2025-05-29T20:06:27.350974",
          "event_type": "validation",
          "details": {
            "total_thoughts": 6,
            "evaluated_children": 6
          }
        },
        {
          "check_name": "backtracking_III",
          "node_id": "0_10",
          "result": "PASS",
          "reason": "All 6 children explored - valid backtrack",
          "timestamp": "2025-05-29T20:08:21.805315",
          "event_type": "validation",
          "details": {
            "total_thoughts": 6,
            "evaluated_children": 6
          }
        },
        {
          "check_name": "backtracking_III",
          "node_id": "0_13",
          "result": "PASS",
          "reason": "All 7 children explored - valid backtrack",
          "timestamp": "2025-05-29T20:10:33.977997",
          "event_type": "validation",
          "details": {
            "total_thoughts": 7,
            "evaluated_children": 7
          }
        },
        {
          "check_name": "backtracking_III",
          "node_id": "0",
          "result": "PASS",
          "reason": "All 14 children explored - valid backtrack",
          "timestamp": "2025-05-29T20:10:35.869287",
          "event_type": "validation",
          "details": {
            "total_thoughts": 14,
            "evaluated_children": 14
          }
        }
      ]
    },
    "backtracking_IV": {
      "FAIL": 0,
      "details": [
        {
          "check_name": "backtracking_IV",
          "node_id": "0_1",
          "result": "PASS",
          "reason": "Correct sequential sibling: 0_1 follows 0_0",
          "timestamp": "2025-05-29T20:01:53.614567",
          "event_type": "validation",
          "details": {
            "popped_node": "0_0",
            "current_node": "0_1",
            "expected_index": 1,
            "actual_index": 1
          }
        },
        {
          "check_name": "backtracking_IV",
          "node_id": "0_7",
          "result": "PASS",
          "reason": "Correct sequential sibling: 0_7 follows 0_6",
          "timestamp": "2025-05-29T20:03:51.144305",
          "event_type": "validation",
          "details": {
            "popped_node": "0_6",
            "current_node": "0_7",
            "expected_index": 7,
            "actual_index": 7
          }
        },
        {
          "check_name": "backtracking_IV",
          "node_id": "0_8",
          "result": "PASS",
          "reason": "Correct sequential sibling: 0_8 follows 0_7",
          "timestamp": "2025-05-29T20:05:24.834105",
          "event_type": "validation",
          "details": {
            "popped_node": "0_7",
            "current_node": "0_8",
            "expected_index": 8,
            "actual_index": 8
          }
        },
        {
          "check_name": "backtracking_IV",
          "node_id": "0_9",
          "result": "PASS",
          "reason": "Correct sequential sibling: 0_9 follows 0_8",
          "timestamp": "2025-05-29T20:06:41.800140",
          "event_type": "validation",
          "details": {
            "popped_node": "0_8",
            "current_node": "0_9",
            "expected_index": 9,
            "actual_index": 9
          }
        },
        {
          "check_name": "backtracking_IV",
          "node_id": "0_11",
          "result": "PASS",
          "reason": "Correct sequential sibling: 0_11 follows 0_10",
          "timestamp": "2025-05-29T20:08:32.101196",
          "event_type": "validation",
          "details": {
            "popped_node": "0_10",
            "current_node": "0_11",
            "expected_index": 11,
            "actual_index": 11
          }
        }
      ]
    },
    "looping_order": {
      "FAIL": 0,
      "details": [
        {
          "check_name": "looping_order",
          "node_id": "0_0",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071624",
          "event_type": "validation",
          "details": {
            "state": "4 + 5 = 9 (left: 7 9 11)",
            "thought": "4 + 5 = 9 (left: 7 9 11)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_1",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071653",
          "event_type": "validation",
          "details": {
            "state": "5 + 7 = 12 (left: 4 11 12)",
            "thought": "5 + 7 = 12 (left: 4 11 12)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_2",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071659",
          "event_type": "validation",
          "details": {
            "state": "7 + 11 = 18 (left: 4 5 18)",
            "thought": "7 + 11 = 18 (left: 4 5 18)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_3",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071665",
          "event_type": "validation",
          "details": {
            "state": "4 * 5 = 20 (left: 7 11 20)",
            "thought": "4 * 5 = 20 (left: 7 11 20)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_4",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071673",
          "event_type": "validation",
          "details": {
            "state": "5 * 7 = 35 (left: 4 11 35)",
            "thought": "5 * 7 = 35 (left: 4 11 35)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_5",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071693",
          "event_type": "validation",
          "details": {
            "state": "7 * 11 = 77 (left: 4 5 77)",
            "thought": "7 * 11 = 77 (left: 4 5 77)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_6",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071700",
          "event_type": "validation",
          "details": {
            "state": "11 - 4 = 7 (left: 5 7 7)",
            "thought": "11 - 4 = 7 (left: 5 7 7)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_7",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071707",
          "event_type": "validation",
          "details": {
            "state": "11 - 5 = 6 (left: 4 6 7)",
            "thought": "11 - 5 = 6 (left: 4 6 7)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_8",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071712",
          "event_type": "validation",
          "details": {
            "state": "7 - 4 = 3 (left: 3 5 11)",
            "thought": "7 - 4 = 3 (left: 3 5 11)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_9",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071717",
          "event_type": "validation",
          "details": {
            "state": "7 - 5 = 2 (left: 2 4 11)",
            "thought": "7 - 5 = 2 (left: 2 4 11)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_10",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071725",
          "event_type": "validation",
          "details": {
            "state": "11 / 4 = 2.75 (left: 2.75 5 7)",
            "thought": "11 / 4 = 2.75 (left: 2.75 5 7)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_11",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071731",
          "event_type": "validation",
          "details": {
            "state": "11 / 5 = 2.2 (left: 2.2 4 7)",
            "thought": "11 / 5 = 2.2 (left: 2.2 4 7)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_12",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071736",
          "event_type": "validation",
          "details": {
            "state": "7 / 4 = 1.75 (left: 1.75 5 11)",
            "thought": "7 / 4 = 1.75 (left: 1.75 5 11)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_13",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071741",
          "event_type": "validation",
          "details": {
            "state": "7 / 5 = 1.4 (left: 1.4 4 11)",
            "thought": "7 / 5 = 1.4 (left: 1.4 4 11)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_0_0",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071770",
          "event_type": "validation",
          "details": {
            "state": "7 + 9 = 16 (left: 11 16)",
            "thought": "7 + 9 = 16 (left: 11 16)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_0_1",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071776",
          "event_type": "validation",
          "details": {
            "state": "9 - 7 = 2 (left: 2 11)",
            "thought": "9 - 7 = 2 (left: 2 11)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_0_2",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071781",
          "event_type": "validation",
          "details": {
            "state": "11 - 7 = 4 (left: 4 9)",
            "thought": "11 - 7 = 4 (left: 4 9)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_0_3",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071786",
          "event_type": "validation",
          "details": {
            "state": "11 - 9 = 2 (left: 2 7)",
            "thought": "11 - 9 = 2 (left: 2 7)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_0_4",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071791",
          "event_type": "validation",
          "details": {
            "state": "7 * 9 = 63 (left: 11 63)",
            "thought": "7 * 9 = 63 (left: 11 63)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_0_5",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071796",
          "event_type": "validation",
          "details": {
            "state": "11 / 7 = 1.57 (left: 1.57 9)",
            "thought": "11 / 7 = 1.57 (left: 1.57 9)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_0_6",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071801",
          "event_type": "validation",
          "details": {
            "state": "9 / 7 = 1.29 (left: 1.29 11)",
            "thought": "9 / 7 = 1.29 (left: 1.29 11)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_6_0",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071908",
          "event_type": "validation",
          "details": {
            "state": "5 + 7 = 12 (left: 7 12)",
            "thought": "5 + 7 = 12 (left: 7 12)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_6_1",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071914",
          "event_type": "validation",
          "details": {
            "state": "5 - 7 = -2 (left: -2 7)",
            "thought": "5 - 7 = -2 (left: -2 7)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_6_2",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071919",
          "event_type": "validation",
          "details": {
            "state": "7 - 5 = 2 (left: 2 7)",
            "thought": "7 - 5 = 2 (left: 2 7)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_6_3",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071924",
          "event_type": "validation",
          "details": {
            "state": "7 / 5 = 1.4 (left: 1.4 7)",
            "thought": "7 / 5 = 1.4 (left: 1.4 7)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_6_4",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071929",
          "event_type": "validation",
          "details": {
            "state": "5 * 7 = 35 (left: 7 35)",
            "thought": "5 * 7 = 35 (left: 7 35)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_6_5",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.071935",
          "event_type": "validation",
          "details": {
            "state": "7 * 7 = 49 (left: 5 49)",
            "thought": "7 * 7 = 49 (left: 5 49)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_7_0",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072010",
          "event_type": "validation",
          "details": {
            "state": "4 + 6 = 10 (left: 7 10)",
            "thought": "4 + 6 = 10 (left: 7 10)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_7_1",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072017",
          "event_type": "validation",
          "details": {
            "state": "6 - 4 = 2 (left: 2 7)",
            "thought": "6 - 4 = 2 (left: 2 7)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_7_2",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072021",
          "event_type": "validation",
          "details": {
            "state": "7 - 4 = 3 (left: 3 6)",
            "thought": "7 - 4 = 3 (left: 3 6)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_7_3",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072026",
          "event_type": "validation",
          "details": {
            "state": "7 - 6 = 1 (left: 1 4)",
            "thought": "7 - 6 = 1 (left: 1 4)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_7_4",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072032",
          "event_type": "validation",
          "details": {
            "state": "6 / 4 = 1.5 (left: 1.5 7)",
            "thought": "6 / 4 = 1.5 (left: 1.5 7)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_7_5",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072036",
          "event_type": "validation",
          "details": {
            "state": "7 / 4 = 1.75 (left: 1.75 6)",
            "thought": "7 / 4 = 1.75 (left: 1.75 6)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_7_6",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072041",
          "event_type": "validation",
          "details": {
            "state": "4 * 6 = 24 (left: 7 24)",
            "thought": "4 * 6 = 24 (left: 7 24)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_7_7",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072048",
          "event_type": "validation",
          "details": {
            "state": "7 * 4 = 28 (left: 6 28)",
            "thought": "7 * 4 = 28 (left: 6 28)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_8_0",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072100",
          "event_type": "validation",
          "details": {
            "state": "3 + 5 = 8 (left: 8 11)",
            "thought": "3 + 5 = 8 (left: 8 11)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_8_1",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072105",
          "event_type": "validation",
          "details": {
            "state": "5 - 3 = 2 (left: 2 11)",
            "thought": "5 - 3 = 2 (left: 2 11)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_8_2",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072110",
          "event_type": "validation",
          "details": {
            "state": "11 - 3 = 8 (left: 5 8)",
            "thought": "11 - 3 = 8 (left: 5 8)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_8_3",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072115",
          "event_type": "validation",
          "details": {
            "state": "3 * 5 = 15 (left: 11 15)",
            "thought": "3 * 5 = 15 (left: 11 15)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_8_4",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072120",
          "event_type": "validation",
          "details": {
            "state": "11 - 5 = 6 (left: 3 6)",
            "thought": "11 - 5 = 6 (left: 3 6)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_8_5",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072126",
          "event_type": "validation",
          "details": {
            "state": "11 / 3 = Approximately 3.67 (left: 3.67 5)",
            "thought": "11 / 3 = Approximately 3.67 (left: 3.67 5)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_10_0",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072164",
          "event_type": "validation",
          "details": {
            "state": "2.75 + 5 = 7.75 (left: 7 7.75)",
            "thought": "2.75 + 5 = 7.75 (left: 7 7.75)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_10_1",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072169",
          "event_type": "validation",
          "details": {
            "state": "5 - 2.75 = 2.25 (left: 2.25 7)",
            "thought": "5 - 2.75 = 2.25 (left: 2.25 7)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_10_2",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072174",
          "event_type": "validation",
          "details": {
            "state": "7 - 2.75 = 4.25 (left: 4.25 5)",
            "thought": "7 - 2.75 = 4.25 (left: 4.25 5)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_10_3",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072178",
          "event_type": "validation",
          "details": {
            "state": "7 - 5 = 2 (left: 2 2.75)",
            "thought": "7 - 5 = 2 (left: 2 2.75)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_10_4",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072184",
          "event_type": "validation",
          "details": {
            "state": "5 / 2.75 = 1.81818182 (left: 1.81818182 7)",
            "thought": "5 / 2.75 = 1.81818182 (left: 1.81818182 7)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_10_5",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072188",
          "event_type": "validation",
          "details": {
            "state": "7 / 2.75 = 2.54545455 (left: 2.54545455 5)",
            "thought": "7 / 2.75 = 2.54545455 (left: 2.54545455 5)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_13_0",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072231",
          "event_type": "validation",
          "details": {
            "state": "1.4 + 4 = 5.4 (left: 5.4 11)",
            "thought": "1.4 + 4 = 5.4 (left: 5.4 11)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_13_1",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072236",
          "event_type": "validation",
          "details": {
            "state": "11 - 4 = 7 (left: 1.4 7)",
            "thought": "11 - 4 = 7 (left: 1.4 7)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_13_2",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072241",
          "event_type": "validation",
          "details": {
            "state": "11 / 1.4 = 7.86 (approx) (left: 4 7.86)",
            "thought": "11 / 1.4 = 7.86 (approx) (left: 4 7.86)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_13_3",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072247",
          "event_type": "validation",
          "details": {
            "state": "4 * 1.4 = 5.6 (left: 5.6 11)",
            "thought": "4 * 1.4 = 5.6 (left: 5.6 11)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_13_4",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072252",
          "event_type": "validation",
          "details": {
            "state": "11 - 1.4 = 9.6 (left: 4 9.6)",
            "thought": "11 - 1.4 = 9.6 (left: 4 9.6)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_13_5",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072257",
          "event_type": "validation",
          "details": {
            "state": "4 - 1.4 = 2.6 (left: 2.6 11)",
            "thought": "4 - 1.4 = 2.6 (left: 2.6 11)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_13_6",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T20:10:37.072262",
          "event_type": "validation",
          "details": {
            "state": "11 / 4 = 2.75 (left: 1.4 2.75)",
            "thought": "11 / 4 = 2.75 (left: 1.4 2.75)"
          }
        }
      ]
    },
    "valid_search_trace": {
      "success_trace": true
    }
  },
  "detailed_results": [
    {
      "check_name": "pseudo_recursive_call",
      "node_id": "0_0",
      "result": "PASS",
      "reason": "Value 3.0 more than or equal to threshold 3.0",
      "timestamp": "2025-05-29T20:00:26.115185",
      "event_type": "validation",
      "details": {
        "value": 3.0,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_state",
      "node_id": "0_0",
      "result": "PASS",
      "reason": "State validation passed: Last thought '4 + 5 = 9 (left: 7 9 11)' found in parent's thoughts",
      "timestamp": "2025-05-29T20:00:26.115250",
      "event_type": "validation",
      "details": {
        "validation_success": [
          "Last thought '4 + 5 = 9 (left: 7 9 11)' found in parent's thoughts"
        ],
        "parent_thoughts": [
          "4 + 5 = 9 (left: 7 9 11)",
          "5 + 7 = 12 (left: 4 11 12)",
          "7 + 11 = 18 (left: 4 5 18)",
          "4 * 5 = 20 (left: 7 11 20)",
          "5 * 7 = 35 (left: 4 11 35)",
          "7 * 11 = 77 (left: 4 5 77)",
          "11 - 4 = 7 (left: 5 7 7)",
          "11 - 5 = 6 (left: 4 6 7)",
          "7 - 4 = 3 (left: 3 5 11)",
          "7 - 5 = 2 (left: 2 4 11)",
          "11 / 4 = 2.75 (left: 2.75 5 7)",
          "11 / 5 = 2.2 (left: 2.2 4 7)",
          "7 / 4 = 1.75 (left: 1.75 5 11)",
          "7 / 5 = 1.4 (left: 1.4 4 11)"
        ],
        "parent_state": null
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_0",
      "result": "PASS",
      "reason": "node_id 0_0 matches thought position.",
      "timestamp": "2025-05-29T20:00:26.115296",
      "event_type": "validation",
      "details": {
        "node_id": "0_0",
        "state": "4 + 5 = 9 (left: 7 9 11)",
        "thoughts": [
          "4 + 5 = 9 (left: 7 9 11)",
          "5 + 7 = 12 (left: 4 11 12)",
          "7 + 11 = 18 (left: 4 5 18)",
          "4 * 5 = 20 (left: 7 11 20)",
          "5 * 7 = 35 (left: 4 11 35)",
          "7 * 11 = 77 (left: 4 5 77)",
          "11 - 4 = 7 (left: 5 7 7)",
          "11 - 5 = 6 (left: 4 6 7)",
          "7 - 4 = 3 (left: 3 5 11)",
          "7 - 5 = 2 (left: 2 4 11)",
          "11 / 4 = 2.75 (left: 2.75 5 7)",
          "11 / 5 = 2.2 (left: 2.2 4 7)",
          "7 / 4 = 1.75 (left: 1.75 5 11)",
          "7 / 5 = 1.4 (left: 1.4 4 11)"
        ]
      }
    },
    {
      "check_name": "node_state",
      "node_id": "0_0",
      "result": "PASS",
      "reason": "State consistency check passed",
      "timestamp": "2025-05-29T20:00:33.352788",
      "event_type": "validation",
      "details": {
        "expected_state": "4 + 5 = 9 (left: 7 9 11)",
        "actual_state": "4 + 5 = 9 (left: 7 9 11)"
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_0_0",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:00:42.964167",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_0_0",
      "result": "PASS",
      "reason": "node_id 0_0_0 matches thought position.",
      "timestamp": "2025-05-29T20:00:42.964235",
      "event_type": "validation",
      "details": {
        "node_id": "0_0_0",
        "state": "7 + 9 = 16 (left: 11 16)",
        "thoughts": [
          "7 + 9 = 16 (left: 11 16)",
          "9 - 7 = 2 (left: 2 11)",
          "11 - 7 = 4 (left: 4 9)",
          "11 - 9 = 2 (left: 2 7)",
          "7 * 9 = 63 (left: 11 63)",
          "11 / 7 = 1.57 (left: 1.57 9)",
          "9 / 7 = 1.29 (left: 1.29 11)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_0_1",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:00:54.396555",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_0_1",
      "result": "PASS",
      "reason": "node_id 0_0_1 matches thought position.",
      "timestamp": "2025-05-29T20:00:54.396627",
      "event_type": "validation",
      "details": {
        "node_id": "0_0_1",
        "state": "9 - 7 = 2 (left: 2 11)",
        "thoughts": [
          "7 + 9 = 16 (left: 11 16)",
          "9 - 7 = 2 (left: 2 11)",
          "11 - 7 = 4 (left: 4 9)",
          "11 - 9 = 2 (left: 2 7)",
          "7 * 9 = 63 (left: 11 63)",
          "11 / 7 = 1.57 (left: 1.57 9)",
          "9 / 7 = 1.29 (left: 1.29 11)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_0_2",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:01:01.529990",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_0_2",
      "result": "PASS",
      "reason": "node_id 0_0_2 matches thought position.",
      "timestamp": "2025-05-29T20:01:01.530064",
      "event_type": "validation",
      "details": {
        "node_id": "0_0_2",
        "state": "11 - 7 = 4 (left: 4 9)",
        "thoughts": [
          "7 + 9 = 16 (left: 11 16)",
          "9 - 7 = 2 (left: 2 11)",
          "11 - 7 = 4 (left: 4 9)",
          "11 - 9 = 2 (left: 2 7)",
          "7 * 9 = 63 (left: 11 63)",
          "11 / 7 = 1.57 (left: 1.57 9)",
          "9 / 7 = 1.29 (left: 1.29 11)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_0_3",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:01:08.851002",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_0_3",
      "result": "PASS",
      "reason": "node_id 0_0_3 matches thought position.",
      "timestamp": "2025-05-29T20:01:08.851081",
      "event_type": "validation",
      "details": {
        "node_id": "0_0_3",
        "state": "11 - 9 = 2 (left: 2 7)",
        "thoughts": [
          "7 + 9 = 16 (left: 11 16)",
          "9 - 7 = 2 (left: 2 11)",
          "11 - 7 = 4 (left: 4 9)",
          "11 - 9 = 2 (left: 2 7)",
          "7 * 9 = 63 (left: 11 63)",
          "11 / 7 = 1.57 (left: 1.57 9)",
          "9 / 7 = 1.29 (left: 1.29 11)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_0_4",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:01:19.298613",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_0_4",
      "result": "PASS",
      "reason": "node_id 0_0_4 matches thought position.",
      "timestamp": "2025-05-29T20:01:19.298703",
      "event_type": "validation",
      "details": {
        "node_id": "0_0_4",
        "state": "7 * 9 = 63 (left: 11 63)",
        "thoughts": [
          "7 + 9 = 16 (left: 11 16)",
          "9 - 7 = 2 (left: 2 11)",
          "11 - 7 = 4 (left: 4 9)",
          "11 - 9 = 2 (left: 2 7)",
          "7 * 9 = 63 (left: 11 63)",
          "11 / 7 = 1.57 (left: 1.57 9)",
          "9 / 7 = 1.29 (left: 1.29 11)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_0_5",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:01:27.781444",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_0_5",
      "result": "PASS",
      "reason": "node_id 0_0_5 matches thought position.",
      "timestamp": "2025-05-29T20:01:27.781523",
      "event_type": "validation",
      "details": {
        "node_id": "0_0_5",
        "state": "11 / 7 = 1.57 (left: 1.57 9)",
        "thoughts": [
          "7 + 9 = 16 (left: 11 16)",
          "9 - 7 = 2 (left: 2 11)",
          "11 - 7 = 4 (left: 4 9)",
          "11 - 9 = 2 (left: 2 7)",
          "7 * 9 = 63 (left: 11 63)",
          "11 / 7 = 1.57 (left: 1.57 9)",
          "9 / 7 = 1.29 (left: 1.29 11)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_0_6",
      "result": "PASS",
      "reason": "Value 1.002 meets threshold 3.0",
      "timestamp": "2025-05-29T20:01:38.718982",
      "event_type": "validation",
      "details": {
        "value": 1.002,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_0_6",
      "result": "PASS",
      "reason": "node_id 0_0_6 matches thought position.",
      "timestamp": "2025-05-29T20:01:38.719055",
      "event_type": "validation",
      "details": {
        "node_id": "0_0_6",
        "state": "9 / 7 = 1.29 (left: 1.29 11)",
        "thoughts": [
          "7 + 9 = 16 (left: 11 16)",
          "9 - 7 = 2 (left: 2 11)",
          "11 - 7 = 4 (left: 4 9)",
          "11 - 9 = 2 (left: 2 7)",
          "7 * 9 = 63 (left: 11 63)",
          "11 / 7 = 1.57 (left: 1.57 9)",
          "9 / 7 = 1.29 (left: 1.29 11)"
        ]
      }
    },
    {
      "check_name": "backtracking_I",
      "node_id": "0_0",
      "result": "PASS",
      "reason": "Complete backtracking validation passed: Correctly popped expected node 0_0; Correctly backtracking to parent '0'",
      "timestamp": "2025-05-29T20:01:40.385419",
      "event_type": "validation",
      "details": {
        "popped_node": "0_0",
        "expected_popped": "0_0",
        "backtrack_to": "0",
        "expected_parent": "0",
        "validation_details": [
          "Correctly popped expected node 0_0",
          "Correctly backtracking to parent '0'"
        ]
      }
    },
    {
      "check_name": "backtracking_III",
      "node_id": "0_0",
      "result": "PASS",
      "reason": "All 7 children explored - valid backtrack",
      "timestamp": "2025-05-29T20:01:40.385440",
      "event_type": "validation",
      "details": {
        "total_thoughts": 7,
        "evaluated_children": 7
      }
    },
    {
      "check_name": "backtracking_IV",
      "node_id": "0_1",
      "result": "PASS",
      "reason": "Correct sequential sibling: 0_1 follows 0_0",
      "timestamp": "2025-05-29T20:01:53.614567",
      "event_type": "validation",
      "details": {
        "popped_node": "0_0",
        "current_node": "0_1",
        "expected_index": 1,
        "actual_index": 1
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_1",
      "result": "PASS",
      "reason": "Value 2.001 meets threshold 3.0",
      "timestamp": "2025-05-29T20:01:53.614605",
      "event_type": "validation",
      "details": {
        "value": 2.001,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_1",
      "result": "PASS",
      "reason": "node_id 0_1 matches thought position.",
      "timestamp": "2025-05-29T20:01:53.614652",
      "event_type": "validation",
      "details": {
        "node_id": "0_1",
        "state": "5 + 7 = 12 (left: 4 11 12)",
        "thoughts": [
          "4 + 5 = 9 (left: 7 9 11)",
          "5 + 7 = 12 (left: 4 11 12)",
          "7 + 11 = 18 (left: 4 5 18)",
          "4 * 5 = 20 (left: 7 11 20)",
          "5 * 7 = 35 (left: 4 11 35)",
          "7 * 11 = 77 (left: 4 5 77)",
          "11 - 4 = 7 (left: 5 7 7)",
          "11 - 5 = 6 (left: 4 6 7)",
          "7 - 4 = 3 (left: 3 5 11)",
          "7 - 5 = 2 (left: 2 4 11)",
          "11 / 4 = 2.75 (left: 2.75 5 7)",
          "11 / 5 = 2.2 (left: 2.2 4 7)",
          "7 / 4 = 1.75 (left: 1.75 5 11)",
          "7 / 5 = 1.4 (left: 1.4 4 11)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_2",
      "result": "PASS",
      "reason": "Value 2.001 meets threshold 3.0",
      "timestamp": "2025-05-29T20:02:05.708546",
      "event_type": "validation",
      "details": {
        "value": 2.001,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_2",
      "result": "PASS",
      "reason": "node_id 0_2 matches thought position.",
      "timestamp": "2025-05-29T20:02:05.708611",
      "event_type": "validation",
      "details": {
        "node_id": "0_2",
        "state": "7 + 11 = 18 (left: 4 5 18)",
        "thoughts": [
          "4 + 5 = 9 (left: 7 9 11)",
          "5 + 7 = 12 (left: 4 11 12)",
          "7 + 11 = 18 (left: 4 5 18)",
          "4 * 5 = 20 (left: 7 11 20)",
          "5 * 7 = 35 (left: 4 11 35)",
          "7 * 11 = 77 (left: 4 5 77)",
          "11 - 4 = 7 (left: 5 7 7)",
          "11 - 5 = 6 (left: 4 6 7)",
          "7 - 4 = 3 (left: 3 5 11)",
          "7 - 5 = 2 (left: 2 4 11)",
          "11 / 4 = 2.75 (left: 2.75 5 7)",
          "11 / 5 = 2.2 (left: 2.2 4 7)",
          "7 / 4 = 1.75 (left: 1.75 5 11)",
          "7 / 5 = 1.4 (left: 1.4 4 11)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_3",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:02:13.640807",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_3",
      "result": "PASS",
      "reason": "node_id 0_3 matches thought position.",
      "timestamp": "2025-05-29T20:02:13.640874",
      "event_type": "validation",
      "details": {
        "node_id": "0_3",
        "state": "4 * 5 = 20 (left: 7 11 20)",
        "thoughts": [
          "4 + 5 = 9 (left: 7 9 11)",
          "5 + 7 = 12 (left: 4 11 12)",
          "7 + 11 = 18 (left: 4 5 18)",
          "4 * 5 = 20 (left: 7 11 20)",
          "5 * 7 = 35 (left: 4 11 35)",
          "7 * 11 = 77 (left: 4 5 77)",
          "11 - 4 = 7 (left: 5 7 7)",
          "11 - 5 = 6 (left: 4 6 7)",
          "7 - 4 = 3 (left: 3 5 11)",
          "7 - 5 = 2 (left: 2 4 11)",
          "11 / 4 = 2.75 (left: 2.75 5 7)",
          "11 / 5 = 2.2 (left: 2.2 4 7)",
          "7 / 4 = 1.75 (left: 1.75 5 11)",
          "7 / 5 = 1.4 (left: 1.4 4 11)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_4",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:02:23.958057",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_4",
      "result": "PASS",
      "reason": "node_id 0_4 matches thought position.",
      "timestamp": "2025-05-29T20:02:23.958148",
      "event_type": "validation",
      "details": {
        "node_id": "0_4",
        "state": "5 * 7 = 35 (left: 4 11 35)",
        "thoughts": [
          "4 + 5 = 9 (left: 7 9 11)",
          "5 + 7 = 12 (left: 4 11 12)",
          "7 + 11 = 18 (left: 4 5 18)",
          "4 * 5 = 20 (left: 7 11 20)",
          "5 * 7 = 35 (left: 4 11 35)",
          "7 * 11 = 77 (left: 4 5 77)",
          "11 - 4 = 7 (left: 5 7 7)",
          "11 - 5 = 6 (left: 4 6 7)",
          "7 - 4 = 3 (left: 3 5 11)",
          "7 - 5 = 2 (left: 2 4 11)",
          "11 / 4 = 2.75 (left: 2.75 5 7)",
          "11 / 5 = 2.2 (left: 2.2 4 7)",
          "7 / 4 = 1.75 (left: 1.75 5 11)",
          "7 / 5 = 1.4 (left: 1.4 4 11)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_5",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:02:33.983719",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_5",
      "result": "PASS",
      "reason": "node_id 0_5 matches thought position.",
      "timestamp": "2025-05-29T20:02:33.983788",
      "event_type": "validation",
      "details": {
        "node_id": "0_5",
        "state": "7 * 11 = 77 (left: 4 5 77)",
        "thoughts": [
          "4 + 5 = 9 (left: 7 9 11)",
          "5 + 7 = 12 (left: 4 11 12)",
          "7 + 11 = 18 (left: 4 5 18)",
          "4 * 5 = 20 (left: 7 11 20)",
          "5 * 7 = 35 (left: 4 11 35)",
          "7 * 11 = 77 (left: 4 5 77)",
          "11 - 4 = 7 (left: 5 7 7)",
          "11 - 5 = 6 (left: 4 6 7)",
          "7 - 4 = 3 (left: 3 5 11)",
          "7 - 5 = 2 (left: 2 4 11)",
          "11 / 4 = 2.75 (left: 2.75 5 7)",
          "11 / 5 = 2.2 (left: 2.2 4 7)",
          "7 / 4 = 1.75 (left: 1.75 5 11)",
          "7 / 5 = 1.4 (left: 1.4 4 11)"
        ]
      }
    },
    {
      "check_name": "pseudo_recursive_call",
      "node_id": "0_6",
      "result": "PASS",
      "reason": "Value 3.0 more than or equal to threshold 3.0",
      "timestamp": "2025-05-29T20:02:43.189921",
      "event_type": "validation",
      "details": {
        "value": 3.0,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_state",
      "node_id": "0_6",
      "result": "PASS",
      "reason": "State validation passed: Last thought '11 - 4 = 7 (left: 5 7 7)' found in parent's thoughts",
      "timestamp": "2025-05-29T20:02:43.189967",
      "event_type": "validation",
      "details": {
        "validation_success": [
          "Last thought '11 - 4 = 7 (left: 5 7 7)' found in parent's thoughts"
        ],
        "parent_thoughts": [
          "4 + 5 = 9 (left: 7 9 11)",
          "5 + 7 = 12 (left: 4 11 12)",
          "7 + 11 = 18 (left: 4 5 18)",
          "4 * 5 = 20 (left: 7 11 20)",
          "5 * 7 = 35 (left: 4 11 35)",
          "7 * 11 = 77 (left: 4 5 77)",
          "11 - 4 = 7 (left: 5 7 7)",
          "11 - 5 = 6 (left: 4 6 7)",
          "7 - 4 = 3 (left: 3 5 11)",
          "7 - 5 = 2 (left: 2 4 11)",
          "11 / 4 = 2.75 (left: 2.75 5 7)",
          "11 / 5 = 2.2 (left: 2.2 4 7)",
          "7 / 4 = 1.75 (left: 1.75 5 11)",
          "7 / 5 = 1.4 (left: 1.4 4 11)"
        ],
        "parent_state": null
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_6",
      "result": "PASS",
      "reason": "node_id 0_6 matches thought position.",
      "timestamp": "2025-05-29T20:02:43.190010",
      "event_type": "validation",
      "details": {
        "node_id": "0_6",
        "state": "11 - 4 = 7 (left: 5 7 7)",
        "thoughts": [
          "4 + 5 = 9 (left: 7 9 11)",
          "5 + 7 = 12 (left: 4 11 12)",
          "7 + 11 = 18 (left: 4 5 18)",
          "4 * 5 = 20 (left: 7 11 20)",
          "5 * 7 = 35 (left: 4 11 35)",
          "7 * 11 = 77 (left: 4 5 77)",
          "11 - 4 = 7 (left: 5 7 7)",
          "11 - 5 = 6 (left: 4 6 7)",
          "7 - 4 = 3 (left: 3 5 11)",
          "7 - 5 = 2 (left: 2 4 11)",
          "11 / 4 = 2.75 (left: 2.75 5 7)",
          "11 / 5 = 2.2 (left: 2.2 4 7)",
          "7 / 4 = 1.75 (left: 1.75 5 11)",
          "7 / 5 = 1.4 (left: 1.4 4 11)"
        ]
      }
    },
    {
      "check_name": "node_state",
      "node_id": "0_6",
      "result": "PASS",
      "reason": "State consistency check passed",
      "timestamp": "2025-05-29T20:02:49.826764",
      "event_type": "validation",
      "details": {
        "expected_state": "11 - 4 = 7 (left: 5 7 7)",
        "actual_state": "11 - 4 = 7 (left: 5 7 7)"
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_6_0",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:02:57.827230",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_6_0",
      "result": "PASS",
      "reason": "node_id 0_6_0 matches thought position.",
      "timestamp": "2025-05-29T20:02:57.827313",
      "event_type": "validation",
      "details": {
        "node_id": "0_6_0",
        "state": "5 + 7 = 12 (left: 7 12)",
        "thoughts": [
          "5 + 7 = 12 (left: 7 12)",
          "5 - 7 = -2 (left: -2 7)",
          "7 - 5 = 2 (left: 2 7)",
          "7 / 5 = 1.4 (left: 1.4 7)",
          "5 * 7 = 35 (left: 7 35)",
          "7 * 7 = 49 (left: 5 49)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_6_1",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:03:05.872965",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_6_1",
      "result": "PASS",
      "reason": "node_id 0_6_1 matches thought position.",
      "timestamp": "2025-05-29T20:03:05.873034",
      "event_type": "validation",
      "details": {
        "node_id": "0_6_1",
        "state": "5 - 7 = -2 (left: -2 7)",
        "thoughts": [
          "5 + 7 = 12 (left: 7 12)",
          "5 - 7 = -2 (left: -2 7)",
          "7 - 5 = 2 (left: 2 7)",
          "7 / 5 = 1.4 (left: 1.4 7)",
          "5 * 7 = 35 (left: 7 35)",
          "7 * 7 = 49 (left: 5 49)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_6_2",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:03:13.871833",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_6_2",
      "result": "PASS",
      "reason": "node_id 0_6_2 matches thought position.",
      "timestamp": "2025-05-29T20:03:13.871902",
      "event_type": "validation",
      "details": {
        "node_id": "0_6_2",
        "state": "7 - 5 = 2 (left: 2 7)",
        "thoughts": [
          "5 + 7 = 12 (left: 7 12)",
          "5 - 7 = -2 (left: -2 7)",
          "7 - 5 = 2 (left: 2 7)",
          "7 / 5 = 1.4 (left: 1.4 7)",
          "5 * 7 = 35 (left: 7 35)",
          "7 * 7 = 49 (left: 5 49)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_6_3",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:03:22.241754",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_6_3",
      "result": "PASS",
      "reason": "node_id 0_6_3 matches thought position.",
      "timestamp": "2025-05-29T20:03:22.241818",
      "event_type": "validation",
      "details": {
        "node_id": "0_6_3",
        "state": "7 / 5 = 1.4 (left: 1.4 7)",
        "thoughts": [
          "5 + 7 = 12 (left: 7 12)",
          "5 - 7 = -2 (left: -2 7)",
          "7 - 5 = 2 (left: 2 7)",
          "7 / 5 = 1.4 (left: 1.4 7)",
          "5 * 7 = 35 (left: 7 35)",
          "7 * 7 = 49 (left: 5 49)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_6_4",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:03:31.031743",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_6_4",
      "result": "PASS",
      "reason": "node_id 0_6_4 matches thought position.",
      "timestamp": "2025-05-29T20:03:31.031814",
      "event_type": "validation",
      "details": {
        "node_id": "0_6_4",
        "state": "5 * 7 = 35 (left: 7 35)",
        "thoughts": [
          "5 + 7 = 12 (left: 7 12)",
          "5 - 7 = -2 (left: -2 7)",
          "7 - 5 = 2 (left: 2 7)",
          "7 / 5 = 1.4 (left: 1.4 7)",
          "5 * 7 = 35 (left: 7 35)",
          "7 * 7 = 49 (left: 5 49)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_6_5",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:03:39.377530",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_6_5",
      "result": "PASS",
      "reason": "node_id 0_6_5 matches thought position.",
      "timestamp": "2025-05-29T20:03:39.377603",
      "event_type": "validation",
      "details": {
        "node_id": "0_6_5",
        "state": "7 * 7 = 49 (left: 5 49)",
        "thoughts": [
          "5 + 7 = 12 (left: 7 12)",
          "5 - 7 = -2 (left: -2 7)",
          "7 - 5 = 2 (left: 2 7)",
          "7 / 5 = 1.4 (left: 1.4 7)",
          "5 * 7 = 35 (left: 7 35)",
          "7 * 7 = 49 (left: 5 49)"
        ]
      }
    },
    {
      "check_name": "backtracking_I",
      "node_id": "0_6",
      "result": "PASS",
      "reason": "Complete backtracking validation passed: Correctly popped expected node 0_6; Correctly backtracking to parent '0'",
      "timestamp": "2025-05-29T20:03:41.206075",
      "event_type": "validation",
      "details": {
        "popped_node": "0_6",
        "expected_popped": "0_6",
        "backtrack_to": "0",
        "expected_parent": "0",
        "validation_details": [
          "Correctly popped expected node 0_6",
          "Correctly backtracking to parent '0'"
        ]
      }
    },
    {
      "check_name": "backtracking_III",
      "node_id": "0_6",
      "result": "PASS",
      "reason": "All 6 children explored - valid backtrack",
      "timestamp": "2025-05-29T20:03:41.206099",
      "event_type": "validation",
      "details": {
        "total_thoughts": 6,
        "evaluated_children": 6
      }
    },
    {
      "check_name": "pseudo_recursive_call",
      "node_id": "0_7",
      "result": "PASS",
      "reason": "Value 3.0 more than or equal to threshold 3.0",
      "timestamp": "2025-05-29T20:03:51.144219",
      "event_type": "validation",
      "details": {
        "value": 3.0,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_state",
      "node_id": "0_7",
      "result": "PASS",
      "reason": "State validation passed: Last thought '11 - 5 = 6 (left: 4 6 7)' found in parent's thoughts",
      "timestamp": "2025-05-29T20:03:51.144266",
      "event_type": "validation",
      "details": {
        "validation_success": [
          "Last thought '11 - 5 = 6 (left: 4 6 7)' found in parent's thoughts"
        ],
        "parent_thoughts": [
          "4 + 5 = 9 (left: 7 9 11)",
          "5 + 7 = 12 (left: 4 11 12)",
          "7 + 11 = 18 (left: 4 5 18)",
          "4 * 5 = 20 (left: 7 11 20)",
          "5 * 7 = 35 (left: 4 11 35)",
          "7 * 11 = 77 (left: 4 5 77)",
          "11 - 4 = 7 (left: 5 7 7)",
          "11 - 5 = 6 (left: 4 6 7)",
          "7 - 4 = 3 (left: 3 5 11)",
          "7 - 5 = 2 (left: 2 4 11)",
          "11 / 4 = 2.75 (left: 2.75 5 7)",
          "11 / 5 = 2.2 (left: 2.2 4 7)",
          "7 / 4 = 1.75 (left: 1.75 5 11)",
          "7 / 5 = 1.4 (left: 1.4 4 11)"
        ],
        "parent_state": null
      }
    },
    {
      "check_name": "backtracking_IV",
      "node_id": "0_7",
      "result": "PASS",
      "reason": "Correct sequential sibling: 0_7 follows 0_6",
      "timestamp": "2025-05-29T20:03:51.144305",
      "event_type": "validation",
      "details": {
        "popped_node": "0_6",
        "current_node": "0_7",
        "expected_index": 7,
        "actual_index": 7
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_7",
      "result": "PASS",
      "reason": "node_id 0_7 matches thought position.",
      "timestamp": "2025-05-29T20:03:51.144336",
      "event_type": "validation",
      "details": {
        "node_id": "0_7",
        "state": "11 - 5 = 6 (left: 4 6 7)",
        "thoughts": [
          "4 + 5 = 9 (left: 7 9 11)",
          "5 + 7 = 12 (left: 4 11 12)",
          "7 + 11 = 18 (left: 4 5 18)",
          "4 * 5 = 20 (left: 7 11 20)",
          "5 * 7 = 35 (left: 4 11 35)",
          "7 * 11 = 77 (left: 4 5 77)",
          "11 - 4 = 7 (left: 5 7 7)",
          "11 - 5 = 6 (left: 4 6 7)",
          "7 - 4 = 3 (left: 3 5 11)",
          "7 - 5 = 2 (left: 2 4 11)",
          "11 / 4 = 2.75 (left: 2.75 5 7)",
          "11 / 5 = 2.2 (left: 2.2 4 7)",
          "7 / 4 = 1.75 (left: 1.75 5 11)",
          "7 / 5 = 1.4 (left: 1.4 4 11)"
        ]
      }
    },
    {
      "check_name": "node_state",
      "node_id": "0_7",
      "result": "PASS",
      "reason": "State consistency check passed",
      "timestamp": "2025-05-29T20:03:57.582909",
      "event_type": "validation",
      "details": {
        "expected_state": "11 - 5 = 6 (left: 4 6 7)",
        "actual_state": "11 - 5 = 6 (left: 4 6 7)"
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_7_0",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:04:07.919992",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_7_0",
      "result": "PASS",
      "reason": "node_id 0_7_0 matches thought position.",
      "timestamp": "2025-05-29T20:04:07.920075",
      "event_type": "validation",
      "details": {
        "node_id": "0_7_0",
        "state": "4 + 6 = 10 (left: 7 10)",
        "thoughts": [
          "4 + 6 = 10 (left: 7 10)",
          "6 - 4 = 2 (left: 2 7)",
          "7 - 4 = 3 (left: 3 6)",
          "7 - 6 = 1 (left: 1 4)",
          "6 / 4 = 1.5 (left: 1.5 7)",
          "7 / 4 = 1.75 (left: 1.75 6)",
          "4 * 6 = 24 (left: 7 24)",
          "7 * 4 = 28 (left: 6 28)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_7_1",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:04:14.788286",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_7_1",
      "result": "PASS",
      "reason": "node_id 0_7_1 matches thought position.",
      "timestamp": "2025-05-29T20:04:14.788354",
      "event_type": "validation",
      "details": {
        "node_id": "0_7_1",
        "state": "6 - 4 = 2 (left: 2 7)",
        "thoughts": [
          "4 + 6 = 10 (left: 7 10)",
          "6 - 4 = 2 (left: 2 7)",
          "7 - 4 = 3 (left: 3 6)",
          "7 - 6 = 1 (left: 1 4)",
          "6 / 4 = 1.5 (left: 1.5 7)",
          "7 / 4 = 1.75 (left: 1.75 6)",
          "4 * 6 = 24 (left: 7 24)",
          "7 * 4 = 28 (left: 6 28)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_7_2",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:04:22.805830",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_7_2",
      "result": "PASS",
      "reason": "node_id 0_7_2 matches thought position.",
      "timestamp": "2025-05-29T20:04:22.806041",
      "event_type": "validation",
      "details": {
        "node_id": "0_7_2",
        "state": "7 - 4 = 3 (left: 3 6)",
        "thoughts": [
          "4 + 6 = 10 (left: 7 10)",
          "6 - 4 = 2 (left: 2 7)",
          "7 - 4 = 3 (left: 3 6)",
          "7 - 6 = 1 (left: 1 4)",
          "6 / 4 = 1.5 (left: 1.5 7)",
          "7 / 4 = 1.75 (left: 1.75 6)",
          "4 * 6 = 24 (left: 7 24)",
          "7 * 4 = 28 (left: 6 28)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_7_3",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:04:32.885195",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_7_3",
      "result": "PASS",
      "reason": "node_id 0_7_3 matches thought position.",
      "timestamp": "2025-05-29T20:04:32.885310",
      "event_type": "validation",
      "details": {
        "node_id": "0_7_3",
        "state": "7 - 6 = 1 (left: 1 4)",
        "thoughts": [
          "4 + 6 = 10 (left: 7 10)",
          "6 - 4 = 2 (left: 2 7)",
          "7 - 4 = 3 (left: 3 6)",
          "7 - 6 = 1 (left: 1 4)",
          "6 / 4 = 1.5 (left: 1.5 7)",
          "7 / 4 = 1.75 (left: 1.75 6)",
          "4 * 6 = 24 (left: 7 24)",
          "7 * 4 = 28 (left: 6 28)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_7_4",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:04:43.465084",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_7_4",
      "result": "PASS",
      "reason": "node_id 0_7_4 matches thought position.",
      "timestamp": "2025-05-29T20:04:43.465144",
      "event_type": "validation",
      "details": {
        "node_id": "0_7_4",
        "state": "6 / 4 = 1.5 (left: 1.5 7)",
        "thoughts": [
          "4 + 6 = 10 (left: 7 10)",
          "6 - 4 = 2 (left: 2 7)",
          "7 - 4 = 3 (left: 3 6)",
          "7 - 6 = 1 (left: 1 4)",
          "6 / 4 = 1.5 (left: 1.5 7)",
          "7 / 4 = 1.75 (left: 1.75 6)",
          "4 * 6 = 24 (left: 7 24)",
          "7 * 4 = 28 (left: 6 28)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_7_5",
      "result": "PASS",
      "reason": "Value 1.002 meets threshold 3.0",
      "timestamp": "2025-05-29T20:04:54.181399",
      "event_type": "validation",
      "details": {
        "value": 1.002,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_7_5",
      "result": "PASS",
      "reason": "node_id 0_7_5 matches thought position.",
      "timestamp": "2025-05-29T20:04:54.181463",
      "event_type": "validation",
      "details": {
        "node_id": "0_7_5",
        "state": "7 / 4 = 1.75 (left: 1.75 6)",
        "thoughts": [
          "4 + 6 = 10 (left: 7 10)",
          "6 - 4 = 2 (left: 2 7)",
          "7 - 4 = 3 (left: 3 6)",
          "7 - 6 = 1 (left: 1 4)",
          "6 / 4 = 1.5 (left: 1.5 7)",
          "7 / 4 = 1.75 (left: 1.75 6)",
          "4 * 6 = 24 (left: 7 24)",
          "7 * 4 = 28 (left: 6 28)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_7_6",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:05:03.120609",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_7_6",
      "result": "PASS",
      "reason": "node_id 0_7_6 matches thought position.",
      "timestamp": "2025-05-29T20:05:03.120670",
      "event_type": "validation",
      "details": {
        "node_id": "0_7_6",
        "state": "4 * 6 = 24 (left: 7 24)",
        "thoughts": [
          "4 + 6 = 10 (left: 7 10)",
          "6 - 4 = 2 (left: 2 7)",
          "7 - 4 = 3 (left: 3 6)",
          "7 - 6 = 1 (left: 1 4)",
          "6 / 4 = 1.5 (left: 1.5 7)",
          "7 / 4 = 1.75 (left: 1.75 6)",
          "4 * 6 = 24 (left: 7 24)",
          "7 * 4 = 28 (left: 6 28)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_7_7",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:05:12.811110",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_7_7",
      "result": "PASS",
      "reason": "node_id 0_7_7 matches thought position.",
      "timestamp": "2025-05-29T20:05:12.811183",
      "event_type": "validation",
      "details": {
        "node_id": "0_7_7",
        "state": "7 * 4 = 28 (left: 6 28)",
        "thoughts": [
          "4 + 6 = 10 (left: 7 10)",
          "6 - 4 = 2 (left: 2 7)",
          "7 - 4 = 3 (left: 3 6)",
          "7 - 6 = 1 (left: 1 4)",
          "6 / 4 = 1.5 (left: 1.5 7)",
          "7 / 4 = 1.75 (left: 1.75 6)",
          "4 * 6 = 24 (left: 7 24)",
          "7 * 4 = 28 (left: 6 28)"
        ]
      }
    },
    {
      "check_name": "backtracking_I",
      "node_id": "0_7",
      "result": "PASS",
      "reason": "Complete backtracking validation passed: Correctly popped expected node 0_7; Correctly backtracking to parent '0'",
      "timestamp": "2025-05-29T20:05:14.656526",
      "event_type": "validation",
      "details": {
        "popped_node": "0_7",
        "expected_popped": "0_7",
        "backtrack_to": "0",
        "expected_parent": "0",
        "validation_details": [
          "Correctly popped expected node 0_7",
          "Correctly backtracking to parent '0'"
        ]
      }
    },
    {
      "check_name": "backtracking_III",
      "node_id": "0_7",
      "result": "PASS",
      "reason": "All 8 children explored - valid backtrack",
      "timestamp": "2025-05-29T20:05:14.656556",
      "event_type": "validation",
      "details": {
        "total_thoughts": 8,
        "evaluated_children": 8
      }
    },
    {
      "check_name": "pseudo_recursive_call",
      "node_id": "0_8",
      "result": "PASS",
      "reason": "Value 3.0 more than or equal to threshold 3.0",
      "timestamp": "2025-05-29T20:05:24.834019",
      "event_type": "validation",
      "details": {
        "value": 3.0,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_state",
      "node_id": "0_8",
      "result": "PASS",
      "reason": "State validation passed: Last thought '7 - 4 = 3 (left: 3 5 11)' found in parent's thoughts",
      "timestamp": "2025-05-29T20:05:24.834060",
      "event_type": "validation",
      "details": {
        "validation_success": [
          "Last thought '7 - 4 = 3 (left: 3 5 11)' found in parent's thoughts"
        ],
        "parent_thoughts": [
          "4 + 5 = 9 (left: 7 9 11)",
          "5 + 7 = 12 (left: 4 11 12)",
          "7 + 11 = 18 (left: 4 5 18)",
          "4 * 5 = 20 (left: 7 11 20)",
          "5 * 7 = 35 (left: 4 11 35)",
          "7 * 11 = 77 (left: 4 5 77)",
          "11 - 4 = 7 (left: 5 7 7)",
          "11 - 5 = 6 (left: 4 6 7)",
          "7 - 4 = 3 (left: 3 5 11)",
          "7 - 5 = 2 (left: 2 4 11)",
          "11 / 4 = 2.75 (left: 2.75 5 7)",
          "11 / 5 = 2.2 (left: 2.2 4 7)",
          "7 / 4 = 1.75 (left: 1.75 5 11)",
          "7 / 5 = 1.4 (left: 1.4 4 11)"
        ],
        "parent_state": null
      }
    },
    {
      "check_name": "backtracking_IV",
      "node_id": "0_8",
      "result": "PASS",
      "reason": "Correct sequential sibling: 0_8 follows 0_7",
      "timestamp": "2025-05-29T20:05:24.834105",
      "event_type": "validation",
      "details": {
        "popped_node": "0_7",
        "current_node": "0_8",
        "expected_index": 8,
        "actual_index": 8
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_8",
      "result": "PASS",
      "reason": "node_id 0_8 matches thought position.",
      "timestamp": "2025-05-29T20:05:24.834140",
      "event_type": "validation",
      "details": {
        "node_id": "0_8",
        "state": "7 - 4 = 3 (left: 3 5 11)",
        "thoughts": [
          "4 + 5 = 9 (left: 7 9 11)",
          "5 + 7 = 12 (left: 4 11 12)",
          "7 + 11 = 18 (left: 4 5 18)",
          "4 * 5 = 20 (left: 7 11 20)",
          "5 * 7 = 35 (left: 4 11 35)",
          "7 * 11 = 77 (left: 4 5 77)",
          "11 - 4 = 7 (left: 5 7 7)",
          "11 - 5 = 6 (left: 4 6 7)",
          "7 - 4 = 3 (left: 3 5 11)",
          "7 - 5 = 2 (left: 2 4 11)",
          "11 / 4 = 2.75 (left: 2.75 5 7)",
          "11 / 5 = 2.2 (left: 2.2 4 7)",
          "7 / 4 = 1.75 (left: 1.75 5 11)",
          "7 / 5 = 1.4 (left: 1.4 4 11)"
        ]
      }
    },
    {
      "check_name": "node_state",
      "node_id": "0_8",
      "result": "PASS",
      "reason": "State consistency check passed",
      "timestamp": "2025-05-29T20:05:30.603479",
      "event_type": "validation",
      "details": {
        "expected_state": "7 - 4 = 3 (left: 3 5 11)",
        "actual_state": "7 - 4 = 3 (left: 3 5 11)"
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_8_0",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:05:41.232600",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_8_0",
      "result": "PASS",
      "reason": "node_id 0_8_0 matches thought position.",
      "timestamp": "2025-05-29T20:05:41.232795",
      "event_type": "validation",
      "details": {
        "node_id": "0_8_0",
        "state": "3 + 5 = 8 (left: 8 11)",
        "thoughts": [
          "3 + 5 = 8 (left: 8 11)",
          "5 - 3 = 2 (left: 2 11)",
          "11 - 3 = 8 (left: 5 8)",
          "3 * 5 = 15 (left: 11 15)",
          "11 - 5 = 6 (left: 3 6)",
          "11 / 3 = Approximately 3.67 (left: 3.67 5)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_8_1",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:05:49.202808",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_8_1",
      "result": "PASS",
      "reason": "node_id 0_8_1 matches thought position.",
      "timestamp": "2025-05-29T20:05:49.202877",
      "event_type": "validation",
      "details": {
        "node_id": "0_8_1",
        "state": "5 - 3 = 2 (left: 2 11)",
        "thoughts": [
          "3 + 5 = 8 (left: 8 11)",
          "5 - 3 = 2 (left: 2 11)",
          "11 - 3 = 8 (left: 5 8)",
          "3 * 5 = 15 (left: 11 15)",
          "11 - 5 = 6 (left: 3 6)",
          "11 / 3 = Approximately 3.67 (left: 3.67 5)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_8_2",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:05:59.621528",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_8_2",
      "result": "PASS",
      "reason": "node_id 0_8_2 matches thought position.",
      "timestamp": "2025-05-29T20:05:59.621583",
      "event_type": "validation",
      "details": {
        "node_id": "0_8_2",
        "state": "11 - 3 = 8 (left: 5 8)",
        "thoughts": [
          "3 + 5 = 8 (left: 8 11)",
          "5 - 3 = 2 (left: 2 11)",
          "11 - 3 = 8 (left: 5 8)",
          "3 * 5 = 15 (left: 11 15)",
          "11 - 5 = 6 (left: 3 6)",
          "11 / 3 = Approximately 3.67 (left: 3.67 5)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_8_3",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:06:08.553957",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_8_3",
      "result": "PASS",
      "reason": "node_id 0_8_3 matches thought position.",
      "timestamp": "2025-05-29T20:06:08.554037",
      "event_type": "validation",
      "details": {
        "node_id": "0_8_3",
        "state": "3 * 5 = 15 (left: 11 15)",
        "thoughts": [
          "3 + 5 = 8 (left: 8 11)",
          "5 - 3 = 2 (left: 2 11)",
          "11 - 3 = 8 (left: 5 8)",
          "3 * 5 = 15 (left: 11 15)",
          "11 - 5 = 6 (left: 3 6)",
          "11 / 3 = Approximately 3.67 (left: 3.67 5)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_8_4",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:06:16.384800",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_8_4",
      "result": "PASS",
      "reason": "node_id 0_8_4 matches thought position.",
      "timestamp": "2025-05-29T20:06:16.384863",
      "event_type": "validation",
      "details": {
        "node_id": "0_8_4",
        "state": "11 - 5 = 6 (left: 3 6)",
        "thoughts": [
          "3 + 5 = 8 (left: 8 11)",
          "5 - 3 = 2 (left: 2 11)",
          "11 - 3 = 8 (left: 5 8)",
          "3 * 5 = 15 (left: 11 15)",
          "11 - 5 = 6 (left: 3 6)",
          "11 / 3 = Approximately 3.67 (left: 3.67 5)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_8_5",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:06:25.632482",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_8_5",
      "result": "PASS",
      "reason": "node_id 0_8_5 matches thought position.",
      "timestamp": "2025-05-29T20:06:25.632556",
      "event_type": "validation",
      "details": {
        "node_id": "0_8_5",
        "state": "11 / 3 = Approximately 3.67 (left: 3.67 5)",
        "thoughts": [
          "3 + 5 = 8 (left: 8 11)",
          "5 - 3 = 2 (left: 2 11)",
          "11 - 3 = 8 (left: 5 8)",
          "3 * 5 = 15 (left: 11 15)",
          "11 - 5 = 6 (left: 3 6)",
          "11 / 3 = Approximately 3.67 (left: 3.67 5)"
        ]
      }
    },
    {
      "check_name": "backtracking_I",
      "node_id": "0_8",
      "result": "PASS",
      "reason": "Complete backtracking validation passed: Correctly popped expected node 0_8; Correctly backtracking to parent '0'",
      "timestamp": "2025-05-29T20:06:27.350950",
      "event_type": "validation",
      "details": {
        "popped_node": "0_8",
        "expected_popped": "0_8",
        "backtrack_to": "0",
        "expected_parent": "0",
        "validation_details": [
          "Correctly popped expected node 0_8",
          "Correctly backtracking to parent '0'"
        ]
      }
    },
    {
      "check_name": "backtracking_III",
      "node_id": "0_8",
      "result": "PASS",
      "reason": "All 6 children explored - valid backtrack",
      "timestamp": "2025-05-29T20:06:27.350974",
      "event_type": "validation",
      "details": {
        "total_thoughts": 6,
        "evaluated_children": 6
      }
    },
    {
      "check_name": "backtracking_IV",
      "node_id": "0_9",
      "result": "PASS",
      "reason": "Correct sequential sibling: 0_9 follows 0_8",
      "timestamp": "2025-05-29T20:06:41.800140",
      "event_type": "validation",
      "details": {
        "popped_node": "0_8",
        "current_node": "0_9",
        "expected_index": 9,
        "actual_index": 9
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_9",
      "result": "PASS",
      "reason": "Value 2.001 meets threshold 3.0",
      "timestamp": "2025-05-29T20:06:41.800180",
      "event_type": "validation",
      "details": {
        "value": 2.001,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_9",
      "result": "PASS",
      "reason": "node_id 0_9 matches thought position.",
      "timestamp": "2025-05-29T20:06:41.800219",
      "event_type": "validation",
      "details": {
        "node_id": "0_9",
        "state": "7 - 5 = 2 (left: 2 4 11)",
        "thoughts": [
          "4 + 5 = 9 (left: 7 9 11)",
          "5 + 7 = 12 (left: 4 11 12)",
          "7 + 11 = 18 (left: 4 5 18)",
          "4 * 5 = 20 (left: 7 11 20)",
          "5 * 7 = 35 (left: 4 11 35)",
          "7 * 11 = 77 (left: 4 5 77)",
          "11 - 4 = 7 (left: 5 7 7)",
          "11 - 5 = 6 (left: 4 6 7)",
          "7 - 4 = 3 (left: 3 5 11)",
          "7 - 5 = 2 (left: 2 4 11)",
          "11 / 4 = 2.75 (left: 2.75 5 7)",
          "11 / 5 = 2.2 (left: 2.2 4 7)",
          "7 / 4 = 1.75 (left: 1.75 5 11)",
          "7 / 5 = 1.4 (left: 1.4 4 11)"
        ]
      }
    },
    {
      "check_name": "pseudo_recursive_call",
      "node_id": "0_10",
      "result": "PASS",
      "reason": "Value 3.0 more than or equal to threshold 3.0",
      "timestamp": "2025-05-29T20:06:54.421427",
      "event_type": "validation",
      "details": {
        "value": 3.0,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_state",
      "node_id": "0_10",
      "result": "PASS",
      "reason": "State validation passed: Last thought '11 / 4 = 2.75 (left: 2.75 5 7)' found in parent's thoughts",
      "timestamp": "2025-05-29T20:06:54.421478",
      "event_type": "validation",
      "details": {
        "validation_success": [
          "Last thought '11 / 4 = 2.75 (left: 2.75 5 7)' found in parent's thoughts"
        ],
        "parent_thoughts": [
          "4 + 5 = 9 (left: 7 9 11)",
          "5 + 7 = 12 (left: 4 11 12)",
          "7 + 11 = 18 (left: 4 5 18)",
          "4 * 5 = 20 (left: 7 11 20)",
          "5 * 7 = 35 (left: 4 11 35)",
          "7 * 11 = 77 (left: 4 5 77)",
          "11 - 4 = 7 (left: 5 7 7)",
          "11 - 5 = 6 (left: 4 6 7)",
          "7 - 4 = 3 (left: 3 5 11)",
          "7 - 5 = 2 (left: 2 4 11)",
          "11 / 4 = 2.75 (left: 2.75 5 7)",
          "11 / 5 = 2.2 (left: 2.2 4 7)",
          "7 / 4 = 1.75 (left: 1.75 5 11)",
          "7 / 5 = 1.4 (left: 1.4 4 11)"
        ],
        "parent_state": null
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_10",
      "result": "PASS",
      "reason": "node_id 0_10 matches thought position.",
      "timestamp": "2025-05-29T20:06:54.421518",
      "event_type": "validation",
      "details": {
        "node_id": "0_10",
        "state": "11 / 4 = 2.75 (left: 2.75 5 7)",
        "thoughts": [
          "4 + 5 = 9 (left: 7 9 11)",
          "5 + 7 = 12 (left: 4 11 12)",
          "7 + 11 = 18 (left: 4 5 18)",
          "4 * 5 = 20 (left: 7 11 20)",
          "5 * 7 = 35 (left: 4 11 35)",
          "7 * 11 = 77 (left: 4 5 77)",
          "11 - 4 = 7 (left: 5 7 7)",
          "11 - 5 = 6 (left: 4 6 7)",
          "7 - 4 = 3 (left: 3 5 11)",
          "7 - 5 = 2 (left: 2 4 11)",
          "11 / 4 = 2.75 (left: 2.75 5 7)",
          "11 / 5 = 2.2 (left: 2.2 4 7)",
          "7 / 4 = 1.75 (left: 1.75 5 11)",
          "7 / 5 = 1.4 (left: 1.4 4 11)"
        ]
      }
    },
    {
      "check_name": "node_state",
      "node_id": "0_10",
      "result": "PASS",
      "reason": "State consistency check passed",
      "timestamp": "2025-05-29T20:07:01.096028",
      "event_type": "validation",
      "details": {
        "expected_state": "11 / 4 = 2.75 (left: 2.75 5 7)",
        "actual_state": "11 / 4 = 2.75 (left: 2.75 5 7)"
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_10_0",
      "result": "PASS",
      "reason": "Value 1.002 meets threshold 3.0",
      "timestamp": "2025-05-29T20:07:12.636057",
      "event_type": "validation",
      "details": {
        "value": 1.002,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_10_0",
      "result": "PASS",
      "reason": "node_id 0_10_0 matches thought position.",
      "timestamp": "2025-05-29T20:07:12.636141",
      "event_type": "validation",
      "details": {
        "node_id": "0_10_0",
        "state": "2.75 + 5 = 7.75 (left: 7 7.75)",
        "thoughts": [
          "2.75 + 5 = 7.75 (left: 7 7.75)",
          "5 - 2.75 = 2.25 (left: 2.25 7)",
          "7 - 2.75 = 4.25 (left: 4.25 5)",
          "7 - 5 = 2 (left: 2 2.75)",
          "5 / 2.75 = 1.81818182 (left: 1.81818182 7)",
          "7 / 2.75 = 2.54545455 (left: 2.54545455 5)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_10_1",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:07:22.020340",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_10_1",
      "result": "PASS",
      "reason": "node_id 0_10_1 matches thought position.",
      "timestamp": "2025-05-29T20:07:22.020406",
      "event_type": "validation",
      "details": {
        "node_id": "0_10_1",
        "state": "5 - 2.75 = 2.25 (left: 2.25 7)",
        "thoughts": [
          "2.75 + 5 = 7.75 (left: 7 7.75)",
          "5 - 2.75 = 2.25 (left: 2.25 7)",
          "7 - 2.75 = 4.25 (left: 4.25 5)",
          "7 - 5 = 2 (left: 2 2.75)",
          "5 / 2.75 = 1.81818182 (left: 1.81818182 7)",
          "7 / 2.75 = 2.54545455 (left: 2.54545455 5)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_10_2",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:07:35.613492",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_10_2",
      "result": "PASS",
      "reason": "node_id 0_10_2 matches thought position.",
      "timestamp": "2025-05-29T20:07:35.613567",
      "event_type": "validation",
      "details": {
        "node_id": "0_10_2",
        "state": "7 - 2.75 = 4.25 (left: 4.25 5)",
        "thoughts": [
          "2.75 + 5 = 7.75 (left: 7 7.75)",
          "5 - 2.75 = 2.25 (left: 2.25 7)",
          "7 - 2.75 = 4.25 (left: 4.25 5)",
          "7 - 5 = 2 (left: 2 2.75)",
          "5 / 2.75 = 1.81818182 (left: 1.81818182 7)",
          "7 / 2.75 = 2.54545455 (left: 2.54545455 5)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_10_3",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:07:50.050788",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_10_3",
      "result": "PASS",
      "reason": "node_id 0_10_3 matches thought position.",
      "timestamp": "2025-05-29T20:07:50.050849",
      "event_type": "validation",
      "details": {
        "node_id": "0_10_3",
        "state": "7 - 5 = 2 (left: 2 2.75)",
        "thoughts": [
          "2.75 + 5 = 7.75 (left: 7 7.75)",
          "5 - 2.75 = 2.25 (left: 2.25 7)",
          "7 - 2.75 = 4.25 (left: 4.25 5)",
          "7 - 5 = 2 (left: 2 2.75)",
          "5 / 2.75 = 1.81818182 (left: 1.81818182 7)",
          "7 / 2.75 = 2.54545455 (left: 2.54545455 5)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_10_4",
      "result": "PASS",
      "reason": "Value 2.001 meets threshold 3.0",
      "timestamp": "2025-05-29T20:08:07.551751",
      "event_type": "validation",
      "details": {
        "value": 2.001,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_10_4",
      "result": "PASS",
      "reason": "node_id 0_10_4 matches thought position.",
      "timestamp": "2025-05-29T20:08:07.551832",
      "event_type": "validation",
      "details": {
        "node_id": "0_10_4",
        "state": "5 / 2.75 = 1.81818182 (left: 1.81818182 7)",
        "thoughts": [
          "2.75 + 5 = 7.75 (left: 7 7.75)",
          "5 - 2.75 = 2.25 (left: 2.25 7)",
          "7 - 2.75 = 4.25 (left: 4.25 5)",
          "7 - 5 = 2 (left: 2 2.75)",
          "5 / 2.75 = 1.81818182 (left: 1.81818182 7)",
          "7 / 2.75 = 2.54545455 (left: 2.54545455 5)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_10_5",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:08:20.220404",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_10_5",
      "result": "PASS",
      "reason": "node_id 0_10_5 matches thought position.",
      "timestamp": "2025-05-29T20:08:20.220490",
      "event_type": "validation",
      "details": {
        "node_id": "0_10_5",
        "state": "7 / 2.75 = 2.54545455 (left: 2.54545455 5)",
        "thoughts": [
          "2.75 + 5 = 7.75 (left: 7 7.75)",
          "5 - 2.75 = 2.25 (left: 2.25 7)",
          "7 - 2.75 = 4.25 (left: 4.25 5)",
          "7 - 5 = 2 (left: 2 2.75)",
          "5 / 2.75 = 1.81818182 (left: 1.81818182 7)",
          "7 / 2.75 = 2.54545455 (left: 2.54545455 5)"
        ]
      }
    },
    {
      "check_name": "backtracking_I",
      "node_id": "0_10",
      "result": "PASS",
      "reason": "Complete backtracking validation passed: Correctly popped expected node 0_10; Correctly backtracking to parent '0'",
      "timestamp": "2025-05-29T20:08:21.805293",
      "event_type": "validation",
      "details": {
        "popped_node": "0_10",
        "expected_popped": "0_10",
        "backtrack_to": "0",
        "expected_parent": "0",
        "validation_details": [
          "Correctly popped expected node 0_10",
          "Correctly backtracking to parent '0'"
        ]
      }
    },
    {
      "check_name": "backtracking_III",
      "node_id": "0_10",
      "result": "PASS",
      "reason": "All 6 children explored - valid backtrack",
      "timestamp": "2025-05-29T20:08:21.805315",
      "event_type": "validation",
      "details": {
        "total_thoughts": 6,
        "evaluated_children": 6
      }
    },
    {
      "check_name": "backtracking_IV",
      "node_id": "0_11",
      "result": "PASS",
      "reason": "Correct sequential sibling: 0_11 follows 0_10",
      "timestamp": "2025-05-29T20:08:32.101196",
      "event_type": "validation",
      "details": {
        "popped_node": "0_10",
        "current_node": "0_11",
        "expected_index": 11,
        "actual_index": 11
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_11",
      "result": "PASS",
      "reason": "Value 2.001 meets threshold 3.0",
      "timestamp": "2025-05-29T20:08:32.101231",
      "event_type": "validation",
      "details": {
        "value": 2.001,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_11",
      "result": "PASS",
      "reason": "node_id 0_11 matches thought position.",
      "timestamp": "2025-05-29T20:08:32.101276",
      "event_type": "validation",
      "details": {
        "node_id": "0_11",
        "state": "11 / 5 = 2.2 (left: 2.2 4 7)",
        "thoughts": [
          "4 + 5 = 9 (left: 7 9 11)",
          "5 + 7 = 12 (left: 4 11 12)",
          "7 + 11 = 18 (left: 4 5 18)",
          "4 * 5 = 20 (left: 7 11 20)",
          "5 * 7 = 35 (left: 4 11 35)",
          "7 * 11 = 77 (left: 4 5 77)",
          "11 - 4 = 7 (left: 5 7 7)",
          "11 - 5 = 6 (left: 4 6 7)",
          "7 - 4 = 3 (left: 3 5 11)",
          "7 - 5 = 2 (left: 2 4 11)",
          "11 / 4 = 2.75 (left: 2.75 5 7)",
          "11 / 5 = 2.2 (left: 2.2 4 7)",
          "7 / 4 = 1.75 (left: 1.75 5 11)",
          "7 / 5 = 1.4 (left: 1.4 4 11)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_12",
      "result": "PASS",
      "reason": "Value 2.001 meets threshold 3.0",
      "timestamp": "2025-05-29T20:08:43.079121",
      "event_type": "validation",
      "details": {
        "value": 2.001,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_12",
      "result": "PASS",
      "reason": "node_id 0_12 matches thought position.",
      "timestamp": "2025-05-29T20:08:43.079198",
      "event_type": "validation",
      "details": {
        "node_id": "0_12",
        "state": "7 / 4 = 1.75 (left: 1.75 5 11)",
        "thoughts": [
          "4 + 5 = 9 (left: 7 9 11)",
          "5 + 7 = 12 (left: 4 11 12)",
          "7 + 11 = 18 (left: 4 5 18)",
          "4 * 5 = 20 (left: 7 11 20)",
          "5 * 7 = 35 (left: 4 11 35)",
          "7 * 11 = 77 (left: 4 5 77)",
          "11 - 4 = 7 (left: 5 7 7)",
          "11 - 5 = 6 (left: 4 6 7)",
          "7 - 4 = 3 (left: 3 5 11)",
          "7 - 5 = 2 (left: 2 4 11)",
          "11 / 4 = 2.75 (left: 2.75 5 7)",
          "11 / 5 = 2.2 (left: 2.2 4 7)",
          "7 / 4 = 1.75 (left: 1.75 5 11)",
          "7 / 5 = 1.4 (left: 1.4 4 11)"
        ]
      }
    },
    {
      "check_name": "pseudo_recursive_call",
      "node_id": "0_13",
      "result": "PASS",
      "reason": "Value 3.0 more than or equal to threshold 3.0",
      "timestamp": "2025-05-29T20:08:56.766260",
      "event_type": "validation",
      "details": {
        "value": 3.0,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_state",
      "node_id": "0_13",
      "result": "PASS",
      "reason": "State validation passed: Last thought '7 / 5 = 1.4 (left: 1.4 4 11)' found in parent's thoughts",
      "timestamp": "2025-05-29T20:08:56.766304",
      "event_type": "validation",
      "details": {
        "validation_success": [
          "Last thought '7 / 5 = 1.4 (left: 1.4 4 11)' found in parent's thoughts"
        ],
        "parent_thoughts": [
          "4 + 5 = 9 (left: 7 9 11)",
          "5 + 7 = 12 (left: 4 11 12)",
          "7 + 11 = 18 (left: 4 5 18)",
          "4 * 5 = 20 (left: 7 11 20)",
          "5 * 7 = 35 (left: 4 11 35)",
          "7 * 11 = 77 (left: 4 5 77)",
          "11 - 4 = 7 (left: 5 7 7)",
          "11 - 5 = 6 (left: 4 6 7)",
          "7 - 4 = 3 (left: 3 5 11)",
          "7 - 5 = 2 (left: 2 4 11)",
          "11 / 4 = 2.75 (left: 2.75 5 7)",
          "11 / 5 = 2.2 (left: 2.2 4 7)",
          "7 / 4 = 1.75 (left: 1.75 5 11)",
          "7 / 5 = 1.4 (left: 1.4 4 11)"
        ],
        "parent_state": null
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_13",
      "result": "PASS",
      "reason": "node_id 0_13 matches thought position.",
      "timestamp": "2025-05-29T20:08:56.766337",
      "event_type": "validation",
      "details": {
        "node_id": "0_13",
        "state": "7 / 5 = 1.4 (left: 1.4 4 11)",
        "thoughts": [
          "4 + 5 = 9 (left: 7 9 11)",
          "5 + 7 = 12 (left: 4 11 12)",
          "7 + 11 = 18 (left: 4 5 18)",
          "4 * 5 = 20 (left: 7 11 20)",
          "5 * 7 = 35 (left: 4 11 35)",
          "7 * 11 = 77 (left: 4 5 77)",
          "11 - 4 = 7 (left: 5 7 7)",
          "11 - 5 = 6 (left: 4 6 7)",
          "7 - 4 = 3 (left: 3 5 11)",
          "7 - 5 = 2 (left: 2 4 11)",
          "11 / 4 = 2.75 (left: 2.75 5 7)",
          "11 / 5 = 2.2 (left: 2.2 4 7)",
          "7 / 4 = 1.75 (left: 1.75 5 11)",
          "7 / 5 = 1.4 (left: 1.4 4 11)"
        ]
      }
    },
    {
      "check_name": "node_state",
      "node_id": "0_13",
      "result": "PASS",
      "reason": "State consistency check passed",
      "timestamp": "2025-05-29T20:09:05.329767",
      "event_type": "validation",
      "details": {
        "expected_state": "7 / 5 = 1.4 (left: 1.4 4 11)",
        "actual_state": "7 / 5 = 1.4 (left: 1.4 4 11)"
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_13_0",
      "result": "PASS",
      "reason": "Value 2.001 meets threshold 3.0",
      "timestamp": "2025-05-29T20:09:18.465344",
      "event_type": "validation",
      "details": {
        "value": 2.001,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_13_0",
      "result": "PASS",
      "reason": "node_id 0_13_0 matches thought position.",
      "timestamp": "2025-05-29T20:09:18.465406",
      "event_type": "validation",
      "details": {
        "node_id": "0_13_0",
        "state": "1.4 + 4 = 5.4 (left: 5.4 11)",
        "thoughts": [
          "1.4 + 4 = 5.4 (left: 5.4 11)",
          "11 - 4 = 7 (left: 1.4 7)",
          "11 / 1.4 = 7.86 (approx) (left: 4 7.86)",
          "4 * 1.4 = 5.6 (left: 5.6 11)",
          "11 - 1.4 = 9.6 (left: 4 9.6)",
          "4 - 1.4 = 2.6 (left: 2.6 11)",
          "11 / 4 = 2.75 (left: 1.4 2.75)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_13_1",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:09:28.526528",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_13_1",
      "result": "PASS",
      "reason": "node_id 0_13_1 matches thought position.",
      "timestamp": "2025-05-29T20:09:28.526597",
      "event_type": "validation",
      "details": {
        "node_id": "0_13_1",
        "state": "11 - 4 = 7 (left: 1.4 7)",
        "thoughts": [
          "1.4 + 4 = 5.4 (left: 5.4 11)",
          "11 - 4 = 7 (left: 1.4 7)",
          "11 / 1.4 = 7.86 (approx) (left: 4 7.86)",
          "4 * 1.4 = 5.6 (left: 5.6 11)",
          "11 - 1.4 = 9.6 (left: 4 9.6)",
          "4 - 1.4 = 2.6 (left: 2.6 11)",
          "11 / 4 = 2.75 (left: 1.4 2.75)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_13_2",
      "result": "PASS",
      "reason": "Value 2.001 meets threshold 3.0",
      "timestamp": "2025-05-29T20:09:41.895418",
      "event_type": "validation",
      "details": {
        "value": 2.001,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_13_2",
      "result": "PASS",
      "reason": "node_id 0_13_2 matches thought position.",
      "timestamp": "2025-05-29T20:09:41.895499",
      "event_type": "validation",
      "details": {
        "node_id": "0_13_2",
        "state": "11 / 1.4 = 7.86 (approx) (left: 4 7.86)",
        "thoughts": [
          "1.4 + 4 = 5.4 (left: 5.4 11)",
          "11 - 4 = 7 (left: 1.4 7)",
          "11 / 1.4 = 7.86 (approx) (left: 4 7.86)",
          "4 * 1.4 = 5.6 (left: 5.6 11)",
          "11 - 1.4 = 9.6 (left: 4 9.6)",
          "4 - 1.4 = 2.6 (left: 2.6 11)",
          "11 / 4 = 2.75 (left: 1.4 2.75)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_13_3",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:09:52.189556",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_13_3",
      "result": "PASS",
      "reason": "node_id 0_13_3 matches thought position.",
      "timestamp": "2025-05-29T20:09:52.189625",
      "event_type": "validation",
      "details": {
        "node_id": "0_13_3",
        "state": "4 * 1.4 = 5.6 (left: 5.6 11)",
        "thoughts": [
          "1.4 + 4 = 5.4 (left: 5.4 11)",
          "11 - 4 = 7 (left: 1.4 7)",
          "11 / 1.4 = 7.86 (approx) (left: 4 7.86)",
          "4 * 1.4 = 5.6 (left: 5.6 11)",
          "11 - 1.4 = 9.6 (left: 4 9.6)",
          "4 - 1.4 = 2.6 (left: 2.6 11)",
          "11 / 4 = 2.75 (left: 1.4 2.75)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_13_4",
      "result": "PASS",
      "reason": "Value 1.002 meets threshold 3.0",
      "timestamp": "2025-05-29T20:10:05.601630",
      "event_type": "validation",
      "details": {
        "value": 1.002,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_13_4",
      "result": "PASS",
      "reason": "node_id 0_13_4 matches thought position.",
      "timestamp": "2025-05-29T20:10:05.601720",
      "event_type": "validation",
      "details": {
        "node_id": "0_13_4",
        "state": "11 - 1.4 = 9.6 (left: 4 9.6)",
        "thoughts": [
          "1.4 + 4 = 5.4 (left: 5.4 11)",
          "11 - 4 = 7 (left: 1.4 7)",
          "11 / 1.4 = 7.86 (approx) (left: 4 7.86)",
          "4 * 1.4 = 5.6 (left: 5.6 11)",
          "11 - 1.4 = 9.6 (left: 4 9.6)",
          "4 - 1.4 = 2.6 (left: 2.6 11)",
          "11 / 4 = 2.75 (left: 1.4 2.75)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_13_5",
      "result": "PASS",
      "reason": "Value 2.001 meets threshold 3.0",
      "timestamp": "2025-05-29T20:10:16.015133",
      "event_type": "validation",
      "details": {
        "value": 2.001,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_13_5",
      "result": "PASS",
      "reason": "node_id 0_13_5 matches thought position.",
      "timestamp": "2025-05-29T20:10:16.015208",
      "event_type": "validation",
      "details": {
        "node_id": "0_13_5",
        "state": "4 - 1.4 = 2.6 (left: 2.6 11)",
        "thoughts": [
          "1.4 + 4 = 5.4 (left: 5.4 11)",
          "11 - 4 = 7 (left: 1.4 7)",
          "11 / 1.4 = 7.86 (approx) (left: 4 7.86)",
          "4 * 1.4 = 5.6 (left: 5.6 11)",
          "11 - 1.4 = 9.6 (left: 4 9.6)",
          "4 - 1.4 = 2.6 (left: 2.6 11)",
          "11 / 4 = 2.75 (left: 1.4 2.75)"
        ]
      }
    },
    {
      "check_name": "pruning",
      "node_id": "0_13_6",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T20:10:31.779777",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_13_6",
      "result": "PASS",
      "reason": "node_id 0_13_6 matches thought position.",
      "timestamp": "2025-05-29T20:10:31.779841",
      "event_type": "validation",
      "details": {
        "node_id": "0_13_6",
        "state": "11 / 4 = 2.75 (left: 1.4 2.75)",
        "thoughts": [
          "1.4 + 4 = 5.4 (left: 5.4 11)",
          "11 - 4 = 7 (left: 1.4 7)",
          "11 / 1.4 = 7.86 (approx) (left: 4 7.86)",
          "4 * 1.4 = 5.6 (left: 5.6 11)",
          "11 - 1.4 = 9.6 (left: 4 9.6)",
          "4 - 1.4 = 2.6 (left: 2.6 11)",
          "11 / 4 = 2.75 (left: 1.4 2.75)"
        ]
      }
    },
    {
      "check_name": "backtracking_I",
      "node_id": "0_13",
      "result": "PASS",
      "reason": "Complete backtracking validation passed: Correctly popped expected node 0_13; Correctly backtracking to parent '0'",
      "timestamp": "2025-05-29T20:10:33.977968",
      "event_type": "validation",
      "details": {
        "popped_node": "0_13",
        "expected_popped": "0_13",
        "backtrack_to": "0",
        "expected_parent": "0",
        "validation_details": [
          "Correctly popped expected node 0_13",
          "Correctly backtracking to parent '0'"
        ]
      }
    },
    {
      "check_name": "backtracking_III",
      "node_id": "0_13",
      "result": "PASS",
      "reason": "All 7 children explored - valid backtrack",
      "timestamp": "2025-05-29T20:10:33.977997",
      "event_type": "validation",
      "details": {
        "total_thoughts": 7,
        "evaluated_children": 7
      }
    },
    {
      "check_name": "backtracking_I",
      "node_id": "0",
      "result": "PASS",
      "reason": "Complete backtracking validation passed: Correctly popped expected node 0; Correctly backtracking to parent 'None'",
      "timestamp": "2025-05-29T20:10:35.869259",
      "event_type": "validation",
      "details": {
        "popped_node": "0",
        "expected_popped": "0",
        "backtrack_to": "None",
        "expected_parent": "None",
        "validation_details": [
          "Correctly popped expected node 0",
          "Correctly backtracking to parent 'None'"
        ]
      }
    },
    {
      "check_name": "backtracking_III",
      "node_id": "0",
      "result": "PASS",
      "reason": "All 14 children explored - valid backtrack",
      "timestamp": "2025-05-29T20:10:35.869287",
      "event_type": "validation",
      "details": {
        "total_thoughts": 14,
        "evaluated_children": 14
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_0",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071624",
      "event_type": "validation",
      "details": {
        "state": "4 + 5 = 9 (left: 7 9 11)",
        "thought": "4 + 5 = 9 (left: 7 9 11)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_1",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071653",
      "event_type": "validation",
      "details": {
        "state": "5 + 7 = 12 (left: 4 11 12)",
        "thought": "5 + 7 = 12 (left: 4 11 12)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_2",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071659",
      "event_type": "validation",
      "details": {
        "state": "7 + 11 = 18 (left: 4 5 18)",
        "thought": "7 + 11 = 18 (left: 4 5 18)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_3",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071665",
      "event_type": "validation",
      "details": {
        "state": "4 * 5 = 20 (left: 7 11 20)",
        "thought": "4 * 5 = 20 (left: 7 11 20)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_4",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071673",
      "event_type": "validation",
      "details": {
        "state": "5 * 7 = 35 (left: 4 11 35)",
        "thought": "5 * 7 = 35 (left: 4 11 35)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_5",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071693",
      "event_type": "validation",
      "details": {
        "state": "7 * 11 = 77 (left: 4 5 77)",
        "thought": "7 * 11 = 77 (left: 4 5 77)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_6",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071700",
      "event_type": "validation",
      "details": {
        "state": "11 - 4 = 7 (left: 5 7 7)",
        "thought": "11 - 4 = 7 (left: 5 7 7)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_7",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071707",
      "event_type": "validation",
      "details": {
        "state": "11 - 5 = 6 (left: 4 6 7)",
        "thought": "11 - 5 = 6 (left: 4 6 7)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_8",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071712",
      "event_type": "validation",
      "details": {
        "state": "7 - 4 = 3 (left: 3 5 11)",
        "thought": "7 - 4 = 3 (left: 3 5 11)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_9",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071717",
      "event_type": "validation",
      "details": {
        "state": "7 - 5 = 2 (left: 2 4 11)",
        "thought": "7 - 5 = 2 (left: 2 4 11)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_10",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071725",
      "event_type": "validation",
      "details": {
        "state": "11 / 4 = 2.75 (left: 2.75 5 7)",
        "thought": "11 / 4 = 2.75 (left: 2.75 5 7)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_11",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071731",
      "event_type": "validation",
      "details": {
        "state": "11 / 5 = 2.2 (left: 2.2 4 7)",
        "thought": "11 / 5 = 2.2 (left: 2.2 4 7)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_12",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071736",
      "event_type": "validation",
      "details": {
        "state": "7 / 4 = 1.75 (left: 1.75 5 11)",
        "thought": "7 / 4 = 1.75 (left: 1.75 5 11)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_13",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071741",
      "event_type": "validation",
      "details": {
        "state": "7 / 5 = 1.4 (left: 1.4 4 11)",
        "thought": "7 / 5 = 1.4 (left: 1.4 4 11)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_0_0",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071770",
      "event_type": "validation",
      "details": {
        "state": "7 + 9 = 16 (left: 11 16)",
        "thought": "7 + 9 = 16 (left: 11 16)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_0_1",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071776",
      "event_type": "validation",
      "details": {
        "state": "9 - 7 = 2 (left: 2 11)",
        "thought": "9 - 7 = 2 (left: 2 11)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_0_2",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071781",
      "event_type": "validation",
      "details": {
        "state": "11 - 7 = 4 (left: 4 9)",
        "thought": "11 - 7 = 4 (left: 4 9)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_0_3",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071786",
      "event_type": "validation",
      "details": {
        "state": "11 - 9 = 2 (left: 2 7)",
        "thought": "11 - 9 = 2 (left: 2 7)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_0_4",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071791",
      "event_type": "validation",
      "details": {
        "state": "7 * 9 = 63 (left: 11 63)",
        "thought": "7 * 9 = 63 (left: 11 63)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_0_5",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071796",
      "event_type": "validation",
      "details": {
        "state": "11 / 7 = 1.57 (left: 1.57 9)",
        "thought": "11 / 7 = 1.57 (left: 1.57 9)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_0_6",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071801",
      "event_type": "validation",
      "details": {
        "state": "9 / 7 = 1.29 (left: 1.29 11)",
        "thought": "9 / 7 = 1.29 (left: 1.29 11)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_6_0",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071908",
      "event_type": "validation",
      "details": {
        "state": "5 + 7 = 12 (left: 7 12)",
        "thought": "5 + 7 = 12 (left: 7 12)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_6_1",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071914",
      "event_type": "validation",
      "details": {
        "state": "5 - 7 = -2 (left: -2 7)",
        "thought": "5 - 7 = -2 (left: -2 7)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_6_2",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071919",
      "event_type": "validation",
      "details": {
        "state": "7 - 5 = 2 (left: 2 7)",
        "thought": "7 - 5 = 2 (left: 2 7)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_6_3",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071924",
      "event_type": "validation",
      "details": {
        "state": "7 / 5 = 1.4 (left: 1.4 7)",
        "thought": "7 / 5 = 1.4 (left: 1.4 7)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_6_4",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071929",
      "event_type": "validation",
      "details": {
        "state": "5 * 7 = 35 (left: 7 35)",
        "thought": "5 * 7 = 35 (left: 7 35)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_6_5",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.071935",
      "event_type": "validation",
      "details": {
        "state": "7 * 7 = 49 (left: 5 49)",
        "thought": "7 * 7 = 49 (left: 5 49)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_7_0",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072010",
      "event_type": "validation",
      "details": {
        "state": "4 + 6 = 10 (left: 7 10)",
        "thought": "4 + 6 = 10 (left: 7 10)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_7_1",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072017",
      "event_type": "validation",
      "details": {
        "state": "6 - 4 = 2 (left: 2 7)",
        "thought": "6 - 4 = 2 (left: 2 7)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_7_2",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072021",
      "event_type": "validation",
      "details": {
        "state": "7 - 4 = 3 (left: 3 6)",
        "thought": "7 - 4 = 3 (left: 3 6)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_7_3",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072026",
      "event_type": "validation",
      "details": {
        "state": "7 - 6 = 1 (left: 1 4)",
        "thought": "7 - 6 = 1 (left: 1 4)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_7_4",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072032",
      "event_type": "validation",
      "details": {
        "state": "6 / 4 = 1.5 (left: 1.5 7)",
        "thought": "6 / 4 = 1.5 (left: 1.5 7)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_7_5",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072036",
      "event_type": "validation",
      "details": {
        "state": "7 / 4 = 1.75 (left: 1.75 6)",
        "thought": "7 / 4 = 1.75 (left: 1.75 6)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_7_6",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072041",
      "event_type": "validation",
      "details": {
        "state": "4 * 6 = 24 (left: 7 24)",
        "thought": "4 * 6 = 24 (left: 7 24)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_7_7",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072048",
      "event_type": "validation",
      "details": {
        "state": "7 * 4 = 28 (left: 6 28)",
        "thought": "7 * 4 = 28 (left: 6 28)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_8_0",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072100",
      "event_type": "validation",
      "details": {
        "state": "3 + 5 = 8 (left: 8 11)",
        "thought": "3 + 5 = 8 (left: 8 11)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_8_1",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072105",
      "event_type": "validation",
      "details": {
        "state": "5 - 3 = 2 (left: 2 11)",
        "thought": "5 - 3 = 2 (left: 2 11)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_8_2",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072110",
      "event_type": "validation",
      "details": {
        "state": "11 - 3 = 8 (left: 5 8)",
        "thought": "11 - 3 = 8 (left: 5 8)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_8_3",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072115",
      "event_type": "validation",
      "details": {
        "state": "3 * 5 = 15 (left: 11 15)",
        "thought": "3 * 5 = 15 (left: 11 15)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_8_4",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072120",
      "event_type": "validation",
      "details": {
        "state": "11 - 5 = 6 (left: 3 6)",
        "thought": "11 - 5 = 6 (left: 3 6)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_8_5",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072126",
      "event_type": "validation",
      "details": {
        "state": "11 / 3 = Approximately 3.67 (left: 3.67 5)",
        "thought": "11 / 3 = Approximately 3.67 (left: 3.67 5)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_10_0",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072164",
      "event_type": "validation",
      "details": {
        "state": "2.75 + 5 = 7.75 (left: 7 7.75)",
        "thought": "2.75 + 5 = 7.75 (left: 7 7.75)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_10_1",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072169",
      "event_type": "validation",
      "details": {
        "state": "5 - 2.75 = 2.25 (left: 2.25 7)",
        "thought": "5 - 2.75 = 2.25 (left: 2.25 7)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_10_2",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072174",
      "event_type": "validation",
      "details": {
        "state": "7 - 2.75 = 4.25 (left: 4.25 5)",
        "thought": "7 - 2.75 = 4.25 (left: 4.25 5)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_10_3",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072178",
      "event_type": "validation",
      "details": {
        "state": "7 - 5 = 2 (left: 2 2.75)",
        "thought": "7 - 5 = 2 (left: 2 2.75)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_10_4",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072184",
      "event_type": "validation",
      "details": {
        "state": "5 / 2.75 = 1.81818182 (left: 1.81818182 7)",
        "thought": "5 / 2.75 = 1.81818182 (left: 1.81818182 7)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_10_5",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072188",
      "event_type": "validation",
      "details": {
        "state": "7 / 2.75 = 2.54545455 (left: 2.54545455 5)",
        "thought": "7 / 2.75 = 2.54545455 (left: 2.54545455 5)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_13_0",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072231",
      "event_type": "validation",
      "details": {
        "state": "1.4 + 4 = 5.4 (left: 5.4 11)",
        "thought": "1.4 + 4 = 5.4 (left: 5.4 11)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_13_1",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072236",
      "event_type": "validation",
      "details": {
        "state": "11 - 4 = 7 (left: 1.4 7)",
        "thought": "11 - 4 = 7 (left: 1.4 7)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_13_2",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072241",
      "event_type": "validation",
      "details": {
        "state": "11 / 1.4 = 7.86 (approx) (left: 4 7.86)",
        "thought": "11 / 1.4 = 7.86 (approx) (left: 4 7.86)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_13_3",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072247",
      "event_type": "validation",
      "details": {
        "state": "4 * 1.4 = 5.6 (left: 5.6 11)",
        "thought": "4 * 1.4 = 5.6 (left: 5.6 11)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_13_4",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072252",
      "event_type": "validation",
      "details": {
        "state": "11 - 1.4 = 9.6 (left: 4 9.6)",
        "thought": "11 - 1.4 = 9.6 (left: 4 9.6)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_13_5",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072257",
      "event_type": "validation",
      "details": {
        "state": "4 - 1.4 = 2.6 (left: 2.6 11)",
        "thought": "4 - 1.4 = 2.6 (left: 2.6 11)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_13_6",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T20:10:37.072262",
      "event_type": "validation",
      "details": {
        "state": "11 / 4 = 2.75 (left: 1.4 2.75)",
        "thought": "11 / 4 = 2.75 (left: 1.4 2.75)"
      }
    }
  ],
  "legacy_log": [
    {
      "event": "push",
      "node_id": "0",
      "issues": [],
      "log": []
    },
    {
      "event": "push",
      "node_id": "0_0",
      "issues": [],
      "log": [
        "\u2705 Recursive call happened correctly: node 0_0 with value 3.0 more than or equal to 3.0 should be traversed.",
        "\u2705 State validation passed: Last thought '4 + 5 = 9 (left: 7 9 11)' found in parent's thoughts",
        "\u2705 Node 0_0 matches thought position.",
        "\u2705 State consistency check passed for node 0_0"
      ]
    },
    {
      "event": "push",
      "node_id": "0_0_0",
      "issues": [],
      "log": [
        "\u2705 Node 0_0_0 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_0_0 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_0_1",
      "issues": [],
      "log": [
        "\u2705 Node 0_0_1 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_0_1 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_0_2",
      "issues": [],
      "log": [
        "\u2705 Node 0_0_2 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_0_2 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_0_3",
      "issues": [],
      "log": [
        "\u2705 Node 0_0_3 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_0_3 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_0_4",
      "issues": [],
      "log": [
        "\u2705 Node 0_0_4 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_0_4 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_0_5",
      "issues": [],
      "log": [
        "\u2705 Node 0_0_5 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_0_5 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_0_6",
      "issues": [],
      "log": [
        "\u2705 Node 0_0_6 with value 1.002 less than 3.0 pruned successfully.",
        "\u2705 Node 0_0_6 matches thought position."
      ]
    },
    {
      "event": "pop",
      "node_id": "",
      "issues": [],
      "log": [
        "\u2705 Popped 0_0 successfully.",
        "\u2705 Backtrack parent validation passed: correctly backtracking to '0'.",
        "\u2705 Complete backtracking validation passed: Correctly popped expected node 0_0; Correctly backtracking to parent '0'",
        "\u2705 All children of node 0_0 were explored \u2014 valid reason for backtracking.",
        "\u2705 Popped 0_6 successfully.",
        "\u2705 Backtrack parent validation passed: correctly backtracking to '0'.",
        "\u2705 Complete backtracking validation passed: Correctly popped expected node 0_6; Correctly backtracking to parent '0'",
        "\u2705 All children of node 0_6 were explored \u2014 valid reason for backtracking.",
        "\u2705 Popped 0_7 successfully.",
        "\u2705 Backtrack parent validation passed: correctly backtracking to '0'.",
        "\u2705 Complete backtracking validation passed: Correctly popped expected node 0_7; Correctly backtracking to parent '0'",
        "\u2705 All children of node 0_7 were explored \u2014 valid reason for backtracking.",
        "\u2705 Popped 0_8 successfully.",
        "\u2705 Backtrack parent validation passed: correctly backtracking to '0'.",
        "\u2705 Complete backtracking validation passed: Correctly popped expected node 0_8; Correctly backtracking to parent '0'",
        "\u2705 All children of node 0_8 were explored \u2014 valid reason for backtracking.",
        "\u2705 Popped 0_10 successfully.",
        "\u2705 Backtrack parent validation passed: correctly backtracking to '0'.",
        "\u2705 Complete backtracking validation passed: Correctly popped expected node 0_10; Correctly backtracking to parent '0'",
        "\u2705 All children of node 0_10 were explored \u2014 valid reason for backtracking.",
        "\u2705 Popped 0_13 successfully.",
        "\u2705 Backtrack parent validation passed: correctly backtracking to '0'.",
        "\u2705 Complete backtracking validation passed: Correctly popped expected node 0_13; Correctly backtracking to parent '0'",
        "\u2705 All children of node 0_13 were explored \u2014 valid reason for backtracking.",
        "\u2705 Popped 0 successfully.",
        "\u2705 Backtrack parent validation passed: correctly backtracking to 'None'.",
        "\u2705 Complete backtracking validation passed: Correctly popped expected node 0; Correctly backtracking to parent 'None'",
        "\u2705 All children of node 0 were explored \u2014 valid reason for backtracking."
      ]
    },
    {
      "event": "push",
      "node_id": "0_1",
      "issues": [],
      "log": [
        "\u2705 Sequential child node validation: pushing 0_1 after popping 0_0 is correct.",
        "\u2705 Node 0_1 with value 2.001 less than 3.0 pruned successfully.",
        "\u2705 Node 0_1 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_2",
      "issues": [],
      "log": [
        "\u2705 Node 0_2 with value 2.001 less than 3.0 pruned successfully.",
        "\u2705 Node 0_2 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_3",
      "issues": [],
      "log": [
        "\u2705 Node 0_3 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_3 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_4",
      "issues": [],
      "log": [
        "\u2705 Node 0_4 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_4 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_5",
      "issues": [],
      "log": [
        "\u2705 Node 0_5 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_5 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_6",
      "issues": [],
      "log": [
        "\u2705 Recursive call happened correctly: node 0_6 with value 3.0 more than or equal to 3.0 should be traversed.",
        "\u2705 State validation passed: Last thought '11 - 4 = 7 (left: 5 7 7)' found in parent's thoughts",
        "\u2705 Node 0_6 matches thought position.",
        "\u2705 State consistency check passed for node 0_6"
      ]
    },
    {
      "event": "push",
      "node_id": "0_6_0",
      "issues": [],
      "log": [
        "\u2705 Node 0_6_0 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_6_0 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_6_1",
      "issues": [],
      "log": [
        "\u2705 Node 0_6_1 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_6_1 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_6_2",
      "issues": [],
      "log": [
        "\u2705 Node 0_6_2 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_6_2 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_6_3",
      "issues": [],
      "log": [
        "\u2705 Node 0_6_3 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_6_3 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_6_4",
      "issues": [],
      "log": [
        "\u2705 Node 0_6_4 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_6_4 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_6_5",
      "issues": [],
      "log": [
        "\u2705 Node 0_6_5 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_6_5 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_7",
      "issues": [],
      "log": [
        "\u2705 Recursive call happened correctly: node 0_7 with value 3.0 more than or equal to 3.0 should be traversed.",
        "\u2705 State validation passed: Last thought '11 - 5 = 6 (left: 4 6 7)' found in parent's thoughts",
        "\u2705 Sequential child node validation: pushing 0_7 after popping 0_6 is correct.",
        "\u2705 Node 0_7 matches thought position.",
        "\u2705 State consistency check passed for node 0_7"
      ]
    },
    {
      "event": "push",
      "node_id": "0_7_0",
      "issues": [],
      "log": [
        "\u2705 Node 0_7_0 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_7_0 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_7_1",
      "issues": [],
      "log": [
        "\u2705 Node 0_7_1 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_7_1 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_7_2",
      "issues": [],
      "log": [
        "\u2705 Node 0_7_2 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_7_2 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_7_3",
      "issues": [],
      "log": [
        "\u2705 Node 0_7_3 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_7_3 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_7_4",
      "issues": [],
      "log": [
        "\u2705 Node 0_7_4 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_7_4 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_7_5",
      "issues": [],
      "log": [
        "\u2705 Node 0_7_5 with value 1.002 less than 3.0 pruned successfully.",
        "\u2705 Node 0_7_5 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_7_6",
      "issues": [],
      "log": [
        "\u2705 Node 0_7_6 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_7_6 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_7_7",
      "issues": [],
      "log": [
        "\u2705 Node 0_7_7 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_7_7 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_8",
      "issues": [],
      "log": [
        "\u2705 Recursive call happened correctly: node 0_8 with value 3.0 more than or equal to 3.0 should be traversed.",
        "\u2705 State validation passed: Last thought '7 - 4 = 3 (left: 3 5 11)' found in parent's thoughts",
        "\u2705 Sequential child node validation: pushing 0_8 after popping 0_7 is correct.",
        "\u2705 Node 0_8 matches thought position.",
        "\u2705 State consistency check passed for node 0_8"
      ]
    },
    {
      "event": "push",
      "node_id": "0_8_0",
      "issues": [],
      "log": [
        "\u2705 Node 0_8_0 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_8_0 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_8_1",
      "issues": [],
      "log": [
        "\u2705 Node 0_8_1 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_8_1 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_8_2",
      "issues": [],
      "log": [
        "\u2705 Node 0_8_2 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_8_2 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_8_3",
      "issues": [],
      "log": [
        "\u2705 Node 0_8_3 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_8_3 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_8_4",
      "issues": [],
      "log": [
        "\u2705 Node 0_8_4 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_8_4 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_8_5",
      "issues": [],
      "log": [
        "\u2705 Node 0_8_5 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_8_5 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_9",
      "issues": [],
      "log": [
        "\u2705 Sequential child node validation: pushing 0_9 after popping 0_8 is correct.",
        "\u2705 Node 0_9 with value 2.001 less than 3.0 pruned successfully.",
        "\u2705 Node 0_9 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_10",
      "issues": [],
      "log": [
        "\u2705 Recursive call happened correctly: node 0_10 with value 3.0 more than or equal to 3.0 should be traversed.",
        "\u2705 State validation passed: Last thought '11 / 4 = 2.75 (left: 2.75 5 7)' found in parent's thoughts",
        "\u2705 Node 0_10 matches thought position.",
        "\u2705 State consistency check passed for node 0_10"
      ]
    },
    {
      "event": "push",
      "node_id": "0_10_0",
      "issues": [],
      "log": [
        "\u2705 Node 0_10_0 with value 1.002 less than 3.0 pruned successfully.",
        "\u2705 Node 0_10_0 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_10_1",
      "issues": [],
      "log": [
        "\u2705 Node 0_10_1 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_10_1 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_10_2",
      "issues": [],
      "log": [
        "\u2705 Node 0_10_2 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_10_2 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_10_3",
      "issues": [],
      "log": [
        "\u2705 Node 0_10_3 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_10_3 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_10_4",
      "issues": [],
      "log": [
        "\u2705 Node 0_10_4 with value 2.001 less than 3.0 pruned successfully.",
        "\u2705 Node 0_10_4 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_10_5",
      "issues": [],
      "log": [
        "\u2705 Node 0_10_5 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_10_5 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_11",
      "issues": [],
      "log": [
        "\u2705 Sequential child node validation: pushing 0_11 after popping 0_10 is correct.",
        "\u2705 Node 0_11 with value 2.001 less than 3.0 pruned successfully.",
        "\u2705 Node 0_11 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_12",
      "issues": [],
      "log": [
        "\u2705 Node 0_12 with value 2.001 less than 3.0 pruned successfully.",
        "\u2705 Node 0_12 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_13",
      "issues": [],
      "log": [
        "\u2705 Recursive call happened correctly: node 0_13 with value 3.0 more than or equal to 3.0 should be traversed.",
        "\u2705 State validation passed: Last thought '7 / 5 = 1.4 (left: 1.4 4 11)' found in parent's thoughts",
        "\u2705 Node 0_13 matches thought position.",
        "\u2705 State consistency check passed for node 0_13"
      ]
    },
    {
      "event": "push",
      "node_id": "0_13_0",
      "issues": [],
      "log": [
        "\u2705 Node 0_13_0 with value 2.001 less than 3.0 pruned successfully.",
        "\u2705 Node 0_13_0 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_13_1",
      "issues": [],
      "log": [
        "\u2705 Node 0_13_1 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_13_1 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_13_2",
      "issues": [],
      "log": [
        "\u2705 Node 0_13_2 with value 2.001 less than 3.0 pruned successfully.",
        "\u2705 Node 0_13_2 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_13_3",
      "issues": [],
      "log": [
        "\u2705 Node 0_13_3 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_13_3 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_13_4",
      "issues": [],
      "log": [
        "\u2705 Node 0_13_4 with value 1.002 less than 3.0 pruned successfully.",
        "\u2705 Node 0_13_4 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_13_5",
      "issues": [],
      "log": [
        "\u2705 Node 0_13_5 with value 2.001 less than 3.0 pruned successfully.",
        "\u2705 Node 0_13_5 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_13_6",
      "issues": [],
      "log": [
        "\u2705 Node 0_13_6 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_13_6 matches thought position."
      ]
    }
  ],
  "tree_trace": {
    "0": {
      "state": null,
      "thought": "4 + 5 = 9 (left: 7 9 11)\n5 + 7 = 12 (left: 4 11 12)\n7 + 11 = 18 (left: 4 5 18)\n4 * 5 = 20 (left: 7 11 20)\n5 * 7 = 35 (left: 4 11 35)\n7 * 11 = 77 (left: 4 5 77)\n11 - 4 = 7 (left: 5 7 7)\n11 - 5 = 6 (left: 4 6 7)\n7 - 4 = 3 (left: 3 5 11)\n7 - 5 = 2 (left: 2 4 11)\n11 / 4 = 2.75 (left: 2.75 5 7)\n11 / 5 = 2.2 (left: 2.2 4 7)\n7 / 4 = 1.75 (left: 1.75 5 11)\n7 / 5 = 1.4 (left: 1.4 4 11)",
      "value": null,
      "opening_remark": null,
      "children": {
        "0_0": {
          "state": "4 + 5 = 9 (left: 7 9 11)",
          "thought": "7 + 9 = 16 (left: 11 16)\n9 - 7 = 2 (left: 2 11)\n11 - 7 = 4 (left: 4 9)\n11 - 9 = 2 (left: 2 7)\n7 * 9 = 63 (left: 11 63)\n11 / 7 = 1.57 (left: 1.57 9)\n9 / 7 = 1.29 (left: 1.29 11)",
          "value": 3.0,
          "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
          "children": {
            "0_0_0": {
              "state": "4 + 5 = 9 (left: 7 9 11)\n7 + 9 = 16 (left: 11 16)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_0_1": {
              "state": "4 + 5 = 9 (left: 7 9 11)\n9 - 7 = 2 (left: 2 11)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_0_2": {
              "state": "4 + 5 = 9 (left: 7 9 11)\n11 - 7 = 4 (left: 4 9)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_0_3": {
              "state": "4 + 5 = 9 (left: 7 9 11)\n11 - 9 = 2 (left: 2 7)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_0_4": {
              "state": "4 + 5 = 9 (left: 7 9 11)\n7 * 9 = 63 (left: 11 63)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_0_5": {
              "state": "4 + 5 = 9 (left: 7 9 11)\n11 / 7 = 1.57 (left: 1.57 9)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_0_6": {
              "state": "4 + 5 = 9 (left: 7 9 11)\n9 / 7 = 1.29 (left: 1.29 11)",
              "thought": null,
              "value": 1.002,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            }
          },
          "closing_remark": null,
          "backtracked": false,
          "backtracked_to": "0"
        },
        "0_1": {
          "state": "5 + 7 = 12 (left: 4 11 12)",
          "thought": null,
          "value": 2.001,
          "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
          "children": {},
          "closing_remark": null,
          "backtracked": false
        },
        "0_2": {
          "state": "7 + 11 = 18 (left: 4 5 18)",
          "thought": null,
          "value": 2.001,
          "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
          "children": {},
          "closing_remark": null,
          "backtracked": false
        },
        "0_3": {
          "state": "4 * 5 = 20 (left: 7 11 20)",
          "thought": null,
          "value": 0.003,
          "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
          "children": {},
          "closing_remark": null,
          "backtracked": false
        },
        "0_4": {
          "state": "5 * 7 = 35 (left: 4 11 35)",
          "thought": null,
          "value": 0.003,
          "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
          "children": {},
          "closing_remark": null,
          "backtracked": false
        },
        "0_5": {
          "state": "7 * 11 = 77 (left: 4 5 77)",
          "thought": null,
          "value": 0.003,
          "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
          "children": {},
          "closing_remark": null,
          "backtracked": false
        },
        "0_6": {
          "state": "11 - 4 = 7 (left: 5 7 7)",
          "thought": "5 + 7 = 12 (left: 7 12)\n5 - 7 = -2 (left: -2 7)\n7 - 5 = 2 (left: 2 7)\n7 / 5 = 1.4 (left: 1.4 7)\n5 * 7 = 35 (left: 7 35)\n7 * 7 = 49 (left: 5 49)",
          "value": 3.0,
          "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
          "children": {
            "0_6_0": {
              "state": "11 - 4 = 7 (left: 5 7 7)\n5 + 7 = 12 (left: 7 12)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_6_1": {
              "state": "11 - 4 = 7 (left: 5 7 7)\n5 - 7 = -2 (left: -2 7)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_6_2": {
              "state": "11 - 4 = 7 (left: 5 7 7)\n7 - 5 = 2 (left: 2 7)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_6_3": {
              "state": "11 - 4 = 7 (left: 5 7 7)\n7 / 5 = 1.4 (left: 1.4 7)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_6_4": {
              "state": "11 - 4 = 7 (left: 5 7 7)\n5 * 7 = 35 (left: 7 35)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_6_5": {
              "state": "11 - 4 = 7 (left: 5 7 7)\n7 * 7 = 49 (left: 5 49)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            }
          },
          "closing_remark": null,
          "backtracked": false,
          "backtracked_to": "0"
        },
        "0_7": {
          "state": "11 - 5 = 6 (left: 4 6 7)",
          "thought": "4 + 6 = 10 (left: 7 10)\n6 - 4 = 2 (left: 2 7)\n7 - 4 = 3 (left: 3 6)\n7 - 6 = 1 (left: 1 4)\n6 / 4 = 1.5 (left: 1.5 7)\n7 / 4 = 1.75 (left: 1.75 6)\n4 * 6 = 24 (left: 7 24)\n7 * 4 = 28 (left: 6 28)",
          "value": 3.0,
          "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
          "children": {
            "0_7_0": {
              "state": "11 - 5 = 6 (left: 4 6 7)\n4 + 6 = 10 (left: 7 10)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_7_1": {
              "state": "11 - 5 = 6 (left: 4 6 7)\n6 - 4 = 2 (left: 2 7)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_7_2": {
              "state": "11 - 5 = 6 (left: 4 6 7)\n7 - 4 = 3 (left: 3 6)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_7_3": {
              "state": "11 - 5 = 6 (left: 4 6 7)\n7 - 6 = 1 (left: 1 4)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_7_4": {
              "state": "11 - 5 = 6 (left: 4 6 7)\n6 / 4 = 1.5 (left: 1.5 7)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_7_5": {
              "state": "11 - 5 = 6 (left: 4 6 7)\n7 / 4 = 1.75 (left: 1.75 6)",
              "thought": null,
              "value": 1.002,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_7_6": {
              "state": "11 - 5 = 6 (left: 4 6 7)\n4 * 6 = 24 (left: 7 24)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_7_7": {
              "state": "11 - 5 = 6 (left: 4 6 7)\n7 * 4 = 28 (left: 6 28)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            }
          },
          "closing_remark": null,
          "backtracked": false,
          "backtracked_to": "0"
        },
        "0_8": {
          "state": "7 - 4 = 3 (left: 3 5 11)",
          "thought": "3 + 5 = 8 (left: 8 11)\n5 - 3 = 2 (left: 2 11)\n11 - 3 = 8 (left: 5 8)\n3 * 5 = 15 (left: 11 15)\n11 - 5 = 6 (left: 3 6)\n11 / 3 = Approximately 3.67 (left: 3.67 5)",
          "value": 3.0,
          "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
          "children": {
            "0_8_0": {
              "state": "7 - 4 = 3 (left: 3 5 11)\n3 + 5 = 8 (left: 8 11)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_8_1": {
              "state": "7 - 4 = 3 (left: 3 5 11)\n5 - 3 = 2 (left: 2 11)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_8_2": {
              "state": "7 - 4 = 3 (left: 3 5 11)\n11 - 3 = 8 (left: 5 8)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_8_3": {
              "state": "7 - 4 = 3 (left: 3 5 11)\n3 * 5 = 15 (left: 11 15)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_8_4": {
              "state": "7 - 4 = 3 (left: 3 5 11)\n11 - 5 = 6 (left: 3 6)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_8_5": {
              "state": "7 - 4 = 3 (left: 3 5 11)\n11 / 3 = Approximately 3.67 (left: 3.67 5)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            }
          },
          "closing_remark": null,
          "backtracked": false,
          "backtracked_to": "0"
        },
        "0_9": {
          "state": "7 - 5 = 2 (left: 2 4 11)",
          "thought": null,
          "value": 2.001,
          "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
          "children": {},
          "closing_remark": null,
          "backtracked": false
        },
        "0_10": {
          "state": "11 / 4 = 2.75 (left: 2.75 5 7)",
          "thought": "2.75 + 5 = 7.75 (left: 7 7.75)\n5 - 2.75 = 2.25 (left: 2.25 7)\n7 - 2.75 = 4.25 (left: 4.25 5)\n7 - 5 = 2 (left: 2 2.75)\n5 / 2.75 = 1.81818182 (left: 1.81818182 7)\n7 / 2.75 = 2.54545455 (left: 2.54545455 5)",
          "value": 3.0,
          "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
          "children": {
            "0_10_0": {
              "state": "11 / 4 = 2.75 (left: 2.75 5 7)\n2.75 + 5 = 7.75 (left: 7 7.75)",
              "thought": null,
              "value": 1.002,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_10_1": {
              "state": "11 / 4 = 2.75 (left: 2.75 5 7)\n5 - 2.75 = 2.25 (left: 2.25 7)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_10_2": {
              "state": "11 / 4 = 2.75 (left: 2.75 5 7)\n7 - 2.75 = 4.25 (left: 4.25 5)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_10_3": {
              "state": "11 / 4 = 2.75 (left: 2.75 5 7)\n7 - 5 = 2 (left: 2 2.75)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_10_4": {
              "state": "11 / 4 = 2.75 (left: 2.75 5 7)\n5 / 2.75 = 1.81818182 (left: 1.81818182 7)",
              "thought": null,
              "value": 2.001,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_10_5": {
              "state": "11 / 4 = 2.75 (left: 2.75 5 7)\n7 / 2.75 = 2.54545455 (left: 2.54545455 5)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            }
          },
          "closing_remark": null,
          "backtracked": false,
          "backtracked_to": "0"
        },
        "0_11": {
          "state": "11 / 5 = 2.2 (left: 2.2 4 7)",
          "thought": null,
          "value": 2.001,
          "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
          "children": {},
          "closing_remark": null,
          "backtracked": false
        },
        "0_12": {
          "state": "7 / 4 = 1.75 (left: 1.75 5 11)",
          "thought": null,
          "value": 2.001,
          "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
          "children": {},
          "closing_remark": null,
          "backtracked": false
        },
        "0_13": {
          "state": "7 / 5 = 1.4 (left: 1.4 4 11)",
          "thought": "1.4 + 4 = 5.4 (left: 5.4 11)\n11 - 4 = 7 (left: 1.4 7)\n11 / 1.4 = 7.86 (approx) (left: 4 7.86)\n4 * 1.4 = 5.6 (left: 5.6 11)\n11 - 1.4 = 9.6 (left: 4 9.6)\n4 - 1.4 = 2.6 (left: 2.6 11)\n11 / 4 = 2.75 (left: 1.4 2.75)",
          "value": 3.0,
          "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
          "children": {
            "0_13_0": {
              "state": "7 / 5 = 1.4 (left: 1.4 4 11)\n1.4 + 4 = 5.4 (left: 5.4 11)",
              "thought": null,
              "value": 2.001,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_13_1": {
              "state": "7 / 5 = 1.4 (left: 1.4 4 11)\n11 - 4 = 7 (left: 1.4 7)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_13_2": {
              "state": "7 / 5 = 1.4 (left: 1.4 4 11)\n11 / 1.4 = 7.86 (approx) (left: 4 7.86)",
              "thought": null,
              "value": 2.001,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_13_3": {
              "state": "7 / 5 = 1.4 (left: 1.4 4 11)\n4 * 1.4 = 5.6 (left: 5.6 11)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_13_4": {
              "state": "7 / 5 = 1.4 (left: 1.4 4 11)\n11 - 1.4 = 9.6 (left: 4 9.6)",
              "thought": null,
              "value": 1.002,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_13_5": {
              "state": "7 / 5 = 1.4 (left: 1.4 4 11)\n4 - 1.4 = 2.6 (left: 2.6 11)",
              "thought": null,
              "value": 2.001,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            },
            "0_13_6": {
              "state": "7 / 5 = 1.4 (left: 1.4 4 11)\n11 / 4 = 2.75 (left: 1.4 2.75)",
              "thought": null,
              "value": 0.003,
              "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
              "children": {},
              "closing_remark": null,
              "backtracked": false
            }
          },
          "closing_remark": null,
          "backtracked": false,
          "backtracked_to": "0"
        }
      },
      "closing_remark": null,
      "backtracked": false
    }
  }
}