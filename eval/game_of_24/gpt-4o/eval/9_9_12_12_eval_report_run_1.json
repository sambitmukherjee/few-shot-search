{
  "summary": {
    "total_checks": 30,
    "passed": 30,
    "failed": 0
  },
  "checks_by_type": {
    "pruning": {
      "FAIL": 0,
      "details": [
        {
          "check_name": "pruning",
          "node_id": "0_0",
          "result": "PASS",
          "reason": "Value 0.003 meets threshold 3.0",
          "timestamp": "2025-05-29T22:40:29.044223",
          "event_type": "validation",
          "details": {
            "value": 0.003,
            "threshold": 3.0
          }
        }
      ]
    },
    "child_id_assignment": {
      "FAIL": 0,
      "details": [
        {
          "check_name": "child_id_assignment",
          "node_id": "0_0",
          "result": "PASS",
          "reason": "node_id 0_0 matches thought position.",
          "timestamp": "2025-05-29T22:40:29.044281",
          "event_type": "validation",
          "details": {
            "node_id": "0_0",
            "state": "9 + 9 = 18 (left: 12 12 18)",
            "thoughts": [
              "9 + 9 = 18 (left: 12 12 18)",
              "12 - 9 = 3 (left: 3 9 12)",
              "12 / 9 = 1.33 (not an integer, ignored)",
              "12 * 9 = 108 (left: 9 12 108)",
              "9 - 9 = 0 (left: 0 12 12)",
              "12 + 9 = 21 (left: 9 12 21)",
              "12 - 12 = 0 (left: 0 9 9)",
              "12 / 12 = 1 (left: 1 9 9)",
              "12 * 12 = 144 (left: 9 9 144)",
              "9 + 12 = 21 (left: 9 12 21)",
              "9 - 12 = -3 (not positive, ignored)",
              "9 * 12 = 108 (left: 9 12 108)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_1",
          "result": "PASS",
          "reason": "node_id 0_1 matches thought position.",
          "timestamp": "2025-05-29T22:40:36.645296",
          "event_type": "validation",
          "details": {
            "node_id": "0_1",
            "state": "12 - 9 = 3 (left: 3 9 12)",
            "thoughts": [
              "9 + 9 = 18 (left: 12 12 18)",
              "12 - 9 = 3 (left: 3 9 12)",
              "12 / 9 = 1.33 (not an integer, ignored)",
              "12 * 9 = 108 (left: 9 12 108)",
              "9 - 9 = 0 (left: 0 12 12)",
              "12 + 9 = 21 (left: 9 12 21)",
              "12 - 12 = 0 (left: 0 9 9)",
              "12 / 12 = 1 (left: 1 9 9)",
              "12 * 12 = 144 (left: 9 9 144)",
              "9 + 12 = 21 (left: 9 12 21)",
              "9 - 12 = -3 (not positive, ignored)",
              "9 * 12 = 108 (left: 9 12 108)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_1_0",
          "result": "PASS",
          "reason": "node_id 0_1_0 matches thought position.",
          "timestamp": "2025-05-29T22:40:50.828098",
          "event_type": "validation",
          "details": {
            "node_id": "0_1_0",
            "state": "3 + 9 = 12 (left: 12 12)",
            "thoughts": [
              "3 + 9 = 12 (left: 12 12)",
              "9 / 3 = 3 (left: 3 12)",
              "12 / 3 = 4 (left: 4 9)",
              "12 - 3 = 9 (left: 9 9)",
              "12 - 9 = 3 (left: 3 3)",
              "9 - 3 = 6 (left: 6 12) ",
              "3 * 9 = 27 (left: 12 27) ",
              "12 + 3 = 15 (left: 9 15)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_1_0_0",
          "result": "PASS",
          "reason": "node_id 0_1_0_0 matches thought position.",
          "timestamp": "2025-05-29T22:41:08.296390",
          "event_type": "validation",
          "details": {
            "node_id": "0_1_0_0",
            "state": "12 + 12 = 24 (left: 24)",
            "thoughts": [
              "12 + 12 = 24 (left: 24)",
              "12 - 12 = 0 (left: 0)",
              "12 * 12 = 144 (left: 144)",
              "12 / 12 = 1 (left: 1)"
            ]
          }
        },
        {
          "check_name": "child_id_assignment",
          "node_id": "0_1_0_0_0",
          "result": "PASS",
          "reason": "node_id 0_1_0_0_0 matches thought position.",
          "timestamp": "2025-05-29T22:41:21.503670",
          "event_type": "validation",
          "details": {
            "node_id": "0_1_0_0_0",
            "state": "Answer: (12 - 9 + 9) + 12 = 24",
            "thoughts": [
              "Answer: (12 - 9 + 9) + 12 = 24"
            ]
          }
        }
      ]
    },
    "pseudo_recursive_call": {
      "FAIL": 0,
      "details": [
        {
          "check_name": "pseudo_recursive_call",
          "node_id": "0_1",
          "result": "PASS",
          "reason": "Value 22.0 more than or equal to threshold 3.0",
          "timestamp": "2025-05-29T22:40:36.645217",
          "event_type": "validation",
          "details": {
            "value": 22.0,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pseudo_recursive_call",
          "node_id": "0_1_0",
          "result": "PASS",
          "reason": "Value 60.0 more than or equal to threshold 3.0",
          "timestamp": "2025-05-29T22:40:50.828018",
          "event_type": "validation",
          "details": {
            "value": 60.0,
            "threshold": 3.0
          }
        },
        {
          "check_name": "pseudo_recursive_call",
          "node_id": "0_1_0_0",
          "result": "PASS",
          "reason": "Value 60.0 more than or equal to threshold 3.0",
          "timestamp": "2025-05-29T22:41:08.296311",
          "event_type": "validation",
          "details": {
            "value": 60.0,
            "threshold": 3.0
          }
        }
      ]
    },
    "child_state": {
      "FAIL": 0,
      "details": [
        {
          "check_name": "child_state",
          "node_id": "0_1",
          "result": "PASS",
          "reason": "State validation passed: Last thought '12 - 9 = 3 (left: 3 9 12)' found in parent's thoughts",
          "timestamp": "2025-05-29T22:40:36.645253",
          "event_type": "validation",
          "details": {
            "validation_success": [
              "Last thought '12 - 9 = 3 (left: 3 9 12)' found in parent's thoughts"
            ],
            "parent_thoughts": [
              "9 + 9 = 18 (left: 12 12 18)",
              "12 - 9 = 3 (left: 3 9 12)",
              "12 / 9 = 1.33 (not an integer, ignored)",
              "12 * 9 = 108 (left: 9 12 108)",
              "9 - 9 = 0 (left: 0 12 12)",
              "12 + 9 = 21 (left: 9 12 21)",
              "12 - 12 = 0 (left: 0 9 9)",
              "12 / 12 = 1 (left: 1 9 9)",
              "12 * 12 = 144 (left: 9 9 144)",
              "9 + 12 = 21 (left: 9 12 21)",
              "9 - 12 = -3 (not positive, ignored)",
              "9 * 12 = 108 (left: 9 12 108)"
            ],
            "parent_state": null
          }
        },
        {
          "check_name": "child_state",
          "node_id": "0_1_0",
          "result": "PASS",
          "reason": "State validation passed: Last thought '3 + 9 = 12 (left: 12 12)' found in parent's thoughts; Previous thought '12 - 9 = 3 (left: 3 9 12)' found in parent's state",
          "timestamp": "2025-05-29T22:40:50.828059",
          "event_type": "validation",
          "details": {
            "validation_success": [
              "Last thought '3 + 9 = 12 (left: 12 12)' found in parent's thoughts",
              "Previous thought '12 - 9 = 3 (left: 3 9 12)' found in parent's state"
            ],
            "parent_thoughts": [
              "3 + 9 = 12 (left: 12 12)",
              "9 / 3 = 3 (left: 3 12)",
              "12 / 3 = 4 (left: 4 9)",
              "12 - 3 = 9 (left: 9 9)",
              "12 - 9 = 3 (left: 3 3)",
              "9 - 3 = 6 (left: 6 12)",
              "3 * 9 = 27 (left: 12 27)",
              "12 + 3 = 15 (left: 9 15)"
            ],
            "parent_state": [
              "12 - 9 = 3 (left: 3 9 12)"
            ]
          }
        },
        {
          "check_name": "child_state",
          "node_id": "0_1_0_0",
          "result": "PASS",
          "reason": "State validation passed: Last thought '12 + 12 = 24 (left: 24)' found in parent's thoughts; Previous thought '12 - 9 = 3 (left: 3 9 12)' found in parent's state; Previous thought '3 + 9 = 12 (left: 12 12)' found in parent's state",
          "timestamp": "2025-05-29T22:41:08.296358",
          "event_type": "validation",
          "details": {
            "validation_success": [
              "Last thought '12 + 12 = 24 (left: 24)' found in parent's thoughts",
              "Previous thought '12 - 9 = 3 (left: 3 9 12)' found in parent's state",
              "Previous thought '3 + 9 = 12 (left: 12 12)' found in parent's state"
            ],
            "parent_thoughts": [
              "12 + 12 = 24 (left: 24)",
              "12 - 12 = 0 (left: 0)",
              "12 * 12 = 144 (left: 144)",
              "12 / 12 = 1 (left: 1)"
            ],
            "parent_state": [
              "12 - 9 = 3 (left: 3 9 12)",
              "3 + 9 = 12 (left: 12 12)"
            ]
          }
        }
      ]
    },
    "node_state": {
      "FAIL": 0,
      "details": [
        {
          "check_name": "node_state",
          "node_id": "0_1",
          "result": "PASS",
          "reason": "State consistency check passed",
          "timestamp": "2025-05-29T22:40:44.055319",
          "event_type": "validation",
          "details": {
            "expected_state": "12 - 9 = 3 (left: 3 9 12)",
            "actual_state": "12 - 9 = 3 (left: 3 9 12)"
          }
        },
        {
          "check_name": "node_state",
          "node_id": "0_1_0",
          "result": "PASS",
          "reason": "State consistency check passed",
          "timestamp": "2025-05-29T22:40:57.250813",
          "event_type": "validation",
          "details": {
            "expected_state": "12 - 9 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)",
            "actual_state": "12 - 9 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)"
          }
        },
        {
          "check_name": "node_state",
          "node_id": "0_1_0_0",
          "result": "PASS",
          "reason": "State consistency check passed",
          "timestamp": "2025-05-29T22:41:15.411272",
          "event_type": "validation",
          "details": {
            "expected_state": "12 - 9 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
            "actual_state": "12 - 9 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)"
          }
        }
      ]
    },
    "backtracking_I": {
      "FAIL": 0,
      "details": [
        {
          "check_name": "backtracking_I",
          "node_id": "0_1_0_0",
          "result": "PASS",
          "reason": "Complete backtracking validation passed: Correctly popped expected node 0_1_0_0; Correctly backtracking to parent '0_1_0'",
          "timestamp": "2025-05-29T22:41:24.581798",
          "event_type": "validation",
          "details": {
            "popped_node": "0_1_0_0",
            "expected_popped": "0_1_0_0",
            "backtrack_to": "0_1_0",
            "expected_parent": "0_1_0",
            "validation_details": [
              "Correctly popped expected node 0_1_0_0",
              "Correctly backtracking to parent '0_1_0'"
            ]
          }
        },
        {
          "check_name": "backtracking_I",
          "node_id": "0_1_0",
          "result": "PASS",
          "reason": "Complete backtracking validation passed: Correctly popped expected node 0_1_0; Correctly backtracking to parent '0_1'",
          "timestamp": "2025-05-29T22:41:26.563462",
          "event_type": "validation",
          "details": {
            "popped_node": "0_1_0",
            "expected_popped": "0_1_0",
            "backtrack_to": "0_1",
            "expected_parent": "0_1",
            "validation_details": [
              "Correctly popped expected node 0_1_0",
              "Correctly backtracking to parent '0_1'"
            ]
          }
        },
        {
          "check_name": "backtracking_I",
          "node_id": "0_1",
          "result": "PASS",
          "reason": "Complete backtracking validation passed: Correctly popped expected node 0_1; Correctly backtracking to parent '0'",
          "timestamp": "2025-05-29T22:41:28.848809",
          "event_type": "validation",
          "details": {
            "popped_node": "0_1",
            "expected_popped": "0_1",
            "backtrack_to": "0",
            "expected_parent": "0",
            "validation_details": [
              "Correctly popped expected node 0_1",
              "Correctly backtracking to parent '0'"
            ]
          }
        },
        {
          "check_name": "backtracking_I",
          "node_id": "0",
          "result": "PASS",
          "reason": "Complete backtracking validation passed: Correctly popped expected node 0; Correctly backtracking to parent 'None'",
          "timestamp": "2025-05-29T22:41:30.458414",
          "event_type": "validation",
          "details": {
            "popped_node": "0",
            "expected_popped": "0",
            "backtrack_to": "None",
            "expected_parent": "None",
            "validation_details": [
              "Correctly popped expected node 0",
              "Correctly backtracking to parent 'None'"
            ]
          }
        }
      ]
    },
    "base_case": {
      "FAIL": 0,
      "details": [
        {
          "check_name": "base_case",
          "node_id": "0_1_0_0",
          "result": "PASS",
          "reason": "Level limit 3 exceeded - valid backtrack",
          "timestamp": "2025-05-29T22:41:24.581820",
          "event_type": "validation",
          "details": {
            "stack_size": 3,
            "level_limit": 3
          }
        }
      ]
    },
    "backtracking_II": {
      "FAIL": 0,
      "details": [
        {
          "check_name": "backtracking_II",
          "node_id": "0_1_0_0",
          "result": "PASS",
          "reason": "Correct True flag used in True backtrack mode",
          "timestamp": "2025-05-29T22:41:24.581826",
          "event_type": "validation",
          "details": {
            "flag": "True",
            "true_backtrack_mode": true
          }
        },
        {
          "check_name": "backtracking_II",
          "node_id": "0_1_0",
          "result": "PASS",
          "reason": "Correct True flag used in True backtrack mode",
          "timestamp": "2025-05-29T22:41:26.563481",
          "event_type": "validation",
          "details": {
            "flag": "True",
            "true_backtrack_mode": true
          }
        },
        {
          "check_name": "backtracking_II",
          "node_id": "0_1",
          "result": "PASS",
          "reason": "Correct True flag used in True backtrack mode",
          "timestamp": "2025-05-29T22:41:28.848832",
          "event_type": "validation",
          "details": {
            "flag": "True",
            "true_backtrack_mode": true
          }
        },
        {
          "check_name": "backtracking_II",
          "node_id": "0",
          "result": "PASS",
          "reason": "Correct True flag used in True backtrack mode",
          "timestamp": "2025-05-29T22:41:30.458439",
          "event_type": "validation",
          "details": {
            "flag": "True",
            "true_backtrack_mode": true
          }
        }
      ]
    },
    "looping_order": {
      "FAIL": 0,
      "details": [
        {
          "check_name": "looping_order",
          "node_id": "0_0",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T22:41:31.595126",
          "event_type": "validation",
          "details": {
            "state": "9 + 9 = 18 (left: 12 12 18)",
            "thought": "9 + 9 = 18 (left: 12 12 18)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_1",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T22:41:31.595151",
          "event_type": "validation",
          "details": {
            "state": "12 - 9 = 3 (left: 3 9 12)",
            "thought": "12 - 9 = 3 (left: 3 9 12)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_1_0",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T22:41:31.595182",
          "event_type": "validation",
          "details": {
            "state": "3 + 9 = 12 (left: 12 12)",
            "thought": "3 + 9 = 12 (left: 12 12)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_1_0_0",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T22:41:31.595203",
          "event_type": "validation",
          "details": {
            "state": "12 + 12 = 24 (left: 24)",
            "thought": "12 + 12 = 24 (left: 24)"
          }
        },
        {
          "check_name": "looping_order",
          "node_id": "0_1_0_0_0",
          "result": "PASS",
          "reason": "State matches expected thought",
          "timestamp": "2025-05-29T22:41:31.595221",
          "event_type": "validation",
          "details": {
            "state": "Answer: (12 - 9 + 9) + 12 = 24",
            "thought": "Answer: (12 - 9 + 9) + 12 = 24"
          }
        }
      ]
    },
    "final_answer": {
      "FAIL": 0,
      "details": [
        {
          "check_name": "final_answer",
          "node_id": "final",
          "result": "PASS",
          "reason": "Result 24 matches expected answer 24.0",
          "timestamp": "2025-05-29T22:41:31.595314",
          "event_type": "validation",
          "details": {
            "result": 24,
            "expected": 24.0,
            "difference": 0.0
          }
        }
      ]
    },
    "valid_search_trace": {
      "success_trace": true
    }
  },
  "detailed_results": [
    {
      "check_name": "pruning",
      "node_id": "0_0",
      "result": "PASS",
      "reason": "Value 0.003 meets threshold 3.0",
      "timestamp": "2025-05-29T22:40:29.044223",
      "event_type": "validation",
      "details": {
        "value": 0.003,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_0",
      "result": "PASS",
      "reason": "node_id 0_0 matches thought position.",
      "timestamp": "2025-05-29T22:40:29.044281",
      "event_type": "validation",
      "details": {
        "node_id": "0_0",
        "state": "9 + 9 = 18 (left: 12 12 18)",
        "thoughts": [
          "9 + 9 = 18 (left: 12 12 18)",
          "12 - 9 = 3 (left: 3 9 12)",
          "12 / 9 = 1.33 (not an integer, ignored)",
          "12 * 9 = 108 (left: 9 12 108)",
          "9 - 9 = 0 (left: 0 12 12)",
          "12 + 9 = 21 (left: 9 12 21)",
          "12 - 12 = 0 (left: 0 9 9)",
          "12 / 12 = 1 (left: 1 9 9)",
          "12 * 12 = 144 (left: 9 9 144)",
          "9 + 12 = 21 (left: 9 12 21)",
          "9 - 12 = -3 (not positive, ignored)",
          "9 * 12 = 108 (left: 9 12 108)"
        ]
      }
    },
    {
      "check_name": "pseudo_recursive_call",
      "node_id": "0_1",
      "result": "PASS",
      "reason": "Value 22.0 more than or equal to threshold 3.0",
      "timestamp": "2025-05-29T22:40:36.645217",
      "event_type": "validation",
      "details": {
        "value": 22.0,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_state",
      "node_id": "0_1",
      "result": "PASS",
      "reason": "State validation passed: Last thought '12 - 9 = 3 (left: 3 9 12)' found in parent's thoughts",
      "timestamp": "2025-05-29T22:40:36.645253",
      "event_type": "validation",
      "details": {
        "validation_success": [
          "Last thought '12 - 9 = 3 (left: 3 9 12)' found in parent's thoughts"
        ],
        "parent_thoughts": [
          "9 + 9 = 18 (left: 12 12 18)",
          "12 - 9 = 3 (left: 3 9 12)",
          "12 / 9 = 1.33 (not an integer, ignored)",
          "12 * 9 = 108 (left: 9 12 108)",
          "9 - 9 = 0 (left: 0 12 12)",
          "12 + 9 = 21 (left: 9 12 21)",
          "12 - 12 = 0 (left: 0 9 9)",
          "12 / 12 = 1 (left: 1 9 9)",
          "12 * 12 = 144 (left: 9 9 144)",
          "9 + 12 = 21 (left: 9 12 21)",
          "9 - 12 = -3 (not positive, ignored)",
          "9 * 12 = 108 (left: 9 12 108)"
        ],
        "parent_state": null
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_1",
      "result": "PASS",
      "reason": "node_id 0_1 matches thought position.",
      "timestamp": "2025-05-29T22:40:36.645296",
      "event_type": "validation",
      "details": {
        "node_id": "0_1",
        "state": "12 - 9 = 3 (left: 3 9 12)",
        "thoughts": [
          "9 + 9 = 18 (left: 12 12 18)",
          "12 - 9 = 3 (left: 3 9 12)",
          "12 / 9 = 1.33 (not an integer, ignored)",
          "12 * 9 = 108 (left: 9 12 108)",
          "9 - 9 = 0 (left: 0 12 12)",
          "12 + 9 = 21 (left: 9 12 21)",
          "12 - 12 = 0 (left: 0 9 9)",
          "12 / 12 = 1 (left: 1 9 9)",
          "12 * 12 = 144 (left: 9 9 144)",
          "9 + 12 = 21 (left: 9 12 21)",
          "9 - 12 = -3 (not positive, ignored)",
          "9 * 12 = 108 (left: 9 12 108)"
        ]
      }
    },
    {
      "check_name": "node_state",
      "node_id": "0_1",
      "result": "PASS",
      "reason": "State consistency check passed",
      "timestamp": "2025-05-29T22:40:44.055319",
      "event_type": "validation",
      "details": {
        "expected_state": "12 - 9 = 3 (left: 3 9 12)",
        "actual_state": "12 - 9 = 3 (left: 3 9 12)"
      }
    },
    {
      "check_name": "pseudo_recursive_call",
      "node_id": "0_1_0",
      "result": "PASS",
      "reason": "Value 60.0 more than or equal to threshold 3.0",
      "timestamp": "2025-05-29T22:40:50.828018",
      "event_type": "validation",
      "details": {
        "value": 60.0,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_state",
      "node_id": "0_1_0",
      "result": "PASS",
      "reason": "State validation passed: Last thought '3 + 9 = 12 (left: 12 12)' found in parent's thoughts; Previous thought '12 - 9 = 3 (left: 3 9 12)' found in parent's state",
      "timestamp": "2025-05-29T22:40:50.828059",
      "event_type": "validation",
      "details": {
        "validation_success": [
          "Last thought '3 + 9 = 12 (left: 12 12)' found in parent's thoughts",
          "Previous thought '12 - 9 = 3 (left: 3 9 12)' found in parent's state"
        ],
        "parent_thoughts": [
          "3 + 9 = 12 (left: 12 12)",
          "9 / 3 = 3 (left: 3 12)",
          "12 / 3 = 4 (left: 4 9)",
          "12 - 3 = 9 (left: 9 9)",
          "12 - 9 = 3 (left: 3 3)",
          "9 - 3 = 6 (left: 6 12)",
          "3 * 9 = 27 (left: 12 27)",
          "12 + 3 = 15 (left: 9 15)"
        ],
        "parent_state": [
          "12 - 9 = 3 (left: 3 9 12)"
        ]
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_1_0",
      "result": "PASS",
      "reason": "node_id 0_1_0 matches thought position.",
      "timestamp": "2025-05-29T22:40:50.828098",
      "event_type": "validation",
      "details": {
        "node_id": "0_1_0",
        "state": "3 + 9 = 12 (left: 12 12)",
        "thoughts": [
          "3 + 9 = 12 (left: 12 12)",
          "9 / 3 = 3 (left: 3 12)",
          "12 / 3 = 4 (left: 4 9)",
          "12 - 3 = 9 (left: 9 9)",
          "12 - 9 = 3 (left: 3 3)",
          "9 - 3 = 6 (left: 6 12) ",
          "3 * 9 = 27 (left: 12 27) ",
          "12 + 3 = 15 (left: 9 15)"
        ]
      }
    },
    {
      "check_name": "node_state",
      "node_id": "0_1_0",
      "result": "PASS",
      "reason": "State consistency check passed",
      "timestamp": "2025-05-29T22:40:57.250813",
      "event_type": "validation",
      "details": {
        "expected_state": "12 - 9 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)",
        "actual_state": "12 - 9 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)"
      }
    },
    {
      "check_name": "pseudo_recursive_call",
      "node_id": "0_1_0_0",
      "result": "PASS",
      "reason": "Value 60.0 more than or equal to threshold 3.0",
      "timestamp": "2025-05-29T22:41:08.296311",
      "event_type": "validation",
      "details": {
        "value": 60.0,
        "threshold": 3.0
      }
    },
    {
      "check_name": "child_state",
      "node_id": "0_1_0_0",
      "result": "PASS",
      "reason": "State validation passed: Last thought '12 + 12 = 24 (left: 24)' found in parent's thoughts; Previous thought '12 - 9 = 3 (left: 3 9 12)' found in parent's state; Previous thought '3 + 9 = 12 (left: 12 12)' found in parent's state",
      "timestamp": "2025-05-29T22:41:08.296358",
      "event_type": "validation",
      "details": {
        "validation_success": [
          "Last thought '12 + 12 = 24 (left: 24)' found in parent's thoughts",
          "Previous thought '12 - 9 = 3 (left: 3 9 12)' found in parent's state",
          "Previous thought '3 + 9 = 12 (left: 12 12)' found in parent's state"
        ],
        "parent_thoughts": [
          "12 + 12 = 24 (left: 24)",
          "12 - 12 = 0 (left: 0)",
          "12 * 12 = 144 (left: 144)",
          "12 / 12 = 1 (left: 1)"
        ],
        "parent_state": [
          "12 - 9 = 3 (left: 3 9 12)",
          "3 + 9 = 12 (left: 12 12)"
        ]
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_1_0_0",
      "result": "PASS",
      "reason": "node_id 0_1_0_0 matches thought position.",
      "timestamp": "2025-05-29T22:41:08.296390",
      "event_type": "validation",
      "details": {
        "node_id": "0_1_0_0",
        "state": "12 + 12 = 24 (left: 24)",
        "thoughts": [
          "12 + 12 = 24 (left: 24)",
          "12 - 12 = 0 (left: 0)",
          "12 * 12 = 144 (left: 144)",
          "12 / 12 = 1 (left: 1)"
        ]
      }
    },
    {
      "check_name": "node_state",
      "node_id": "0_1_0_0",
      "result": "PASS",
      "reason": "State consistency check passed",
      "timestamp": "2025-05-29T22:41:15.411272",
      "event_type": "validation",
      "details": {
        "expected_state": "12 - 9 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
        "actual_state": "12 - 9 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)"
      }
    },
    {
      "check_name": "child_id_assignment",
      "node_id": "0_1_0_0_0",
      "result": "PASS",
      "reason": "node_id 0_1_0_0_0 matches thought position.",
      "timestamp": "2025-05-29T22:41:21.503670",
      "event_type": "validation",
      "details": {
        "node_id": "0_1_0_0_0",
        "state": "Answer: (12 - 9 + 9) + 12 = 24",
        "thoughts": [
          "Answer: (12 - 9 + 9) + 12 = 24"
        ]
      }
    },
    {
      "check_name": "backtracking_I",
      "node_id": "0_1_0_0",
      "result": "PASS",
      "reason": "Complete backtracking validation passed: Correctly popped expected node 0_1_0_0; Correctly backtracking to parent '0_1_0'",
      "timestamp": "2025-05-29T22:41:24.581798",
      "event_type": "validation",
      "details": {
        "popped_node": "0_1_0_0",
        "expected_popped": "0_1_0_0",
        "backtrack_to": "0_1_0",
        "expected_parent": "0_1_0",
        "validation_details": [
          "Correctly popped expected node 0_1_0_0",
          "Correctly backtracking to parent '0_1_0'"
        ]
      }
    },
    {
      "check_name": "base_case",
      "node_id": "0_1_0_0",
      "result": "PASS",
      "reason": "Level limit 3 exceeded - valid backtrack",
      "timestamp": "2025-05-29T22:41:24.581820",
      "event_type": "validation",
      "details": {
        "stack_size": 3,
        "level_limit": 3
      }
    },
    {
      "check_name": "backtracking_II",
      "node_id": "0_1_0_0",
      "result": "PASS",
      "reason": "Correct True flag used in True backtrack mode",
      "timestamp": "2025-05-29T22:41:24.581826",
      "event_type": "validation",
      "details": {
        "flag": "True",
        "true_backtrack_mode": true
      }
    },
    {
      "check_name": "backtracking_I",
      "node_id": "0_1_0",
      "result": "PASS",
      "reason": "Complete backtracking validation passed: Correctly popped expected node 0_1_0; Correctly backtracking to parent '0_1'",
      "timestamp": "2025-05-29T22:41:26.563462",
      "event_type": "validation",
      "details": {
        "popped_node": "0_1_0",
        "expected_popped": "0_1_0",
        "backtrack_to": "0_1",
        "expected_parent": "0_1",
        "validation_details": [
          "Correctly popped expected node 0_1_0",
          "Correctly backtracking to parent '0_1'"
        ]
      }
    },
    {
      "check_name": "backtracking_II",
      "node_id": "0_1_0",
      "result": "PASS",
      "reason": "Correct True flag used in True backtrack mode",
      "timestamp": "2025-05-29T22:41:26.563481",
      "event_type": "validation",
      "details": {
        "flag": "True",
        "true_backtrack_mode": true
      }
    },
    {
      "check_name": "backtracking_I",
      "node_id": "0_1",
      "result": "PASS",
      "reason": "Complete backtracking validation passed: Correctly popped expected node 0_1; Correctly backtracking to parent '0'",
      "timestamp": "2025-05-29T22:41:28.848809",
      "event_type": "validation",
      "details": {
        "popped_node": "0_1",
        "expected_popped": "0_1",
        "backtrack_to": "0",
        "expected_parent": "0",
        "validation_details": [
          "Correctly popped expected node 0_1",
          "Correctly backtracking to parent '0'"
        ]
      }
    },
    {
      "check_name": "backtracking_II",
      "node_id": "0_1",
      "result": "PASS",
      "reason": "Correct True flag used in True backtrack mode",
      "timestamp": "2025-05-29T22:41:28.848832",
      "event_type": "validation",
      "details": {
        "flag": "True",
        "true_backtrack_mode": true
      }
    },
    {
      "check_name": "backtracking_I",
      "node_id": "0",
      "result": "PASS",
      "reason": "Complete backtracking validation passed: Correctly popped expected node 0; Correctly backtracking to parent 'None'",
      "timestamp": "2025-05-29T22:41:30.458414",
      "event_type": "validation",
      "details": {
        "popped_node": "0",
        "expected_popped": "0",
        "backtrack_to": "None",
        "expected_parent": "None",
        "validation_details": [
          "Correctly popped expected node 0",
          "Correctly backtracking to parent 'None'"
        ]
      }
    },
    {
      "check_name": "backtracking_II",
      "node_id": "0",
      "result": "PASS",
      "reason": "Correct True flag used in True backtrack mode",
      "timestamp": "2025-05-29T22:41:30.458439",
      "event_type": "validation",
      "details": {
        "flag": "True",
        "true_backtrack_mode": true
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_0",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T22:41:31.595126",
      "event_type": "validation",
      "details": {
        "state": "9 + 9 = 18 (left: 12 12 18)",
        "thought": "9 + 9 = 18 (left: 12 12 18)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_1",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T22:41:31.595151",
      "event_type": "validation",
      "details": {
        "state": "12 - 9 = 3 (left: 3 9 12)",
        "thought": "12 - 9 = 3 (left: 3 9 12)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_1_0",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T22:41:31.595182",
      "event_type": "validation",
      "details": {
        "state": "3 + 9 = 12 (left: 12 12)",
        "thought": "3 + 9 = 12 (left: 12 12)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_1_0_0",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T22:41:31.595203",
      "event_type": "validation",
      "details": {
        "state": "12 + 12 = 24 (left: 24)",
        "thought": "12 + 12 = 24 (left: 24)"
      }
    },
    {
      "check_name": "looping_order",
      "node_id": "0_1_0_0_0",
      "result": "PASS",
      "reason": "State matches expected thought",
      "timestamp": "2025-05-29T22:41:31.595221",
      "event_type": "validation",
      "details": {
        "state": "Answer: (12 - 9 + 9) + 12 = 24",
        "thought": "Answer: (12 - 9 + 9) + 12 = 24"
      }
    },
    {
      "check_name": "final_answer",
      "node_id": "final",
      "result": "PASS",
      "reason": "Result 24 matches expected answer 24.0",
      "timestamp": "2025-05-29T22:41:31.595314",
      "event_type": "validation",
      "details": {
        "result": 24,
        "expected": 24.0,
        "difference": 0.0
      }
    }
  ],
  "legacy_log": [
    {
      "event": "push",
      "node_id": "0",
      "issues": [],
      "log": []
    },
    {
      "event": "push",
      "node_id": "0_0",
      "issues": [],
      "log": [
        "\u2705 Node 0_0 with value 0.003 less than 3.0 pruned successfully.",
        "\u2705 Node 0_0 matches thought position."
      ]
    },
    {
      "event": "push",
      "node_id": "0_1",
      "issues": [],
      "log": [
        "\u2705 Recursive call happened correctly: node 0_1 with value 22.0 more than or equal to 3.0 should be traversed.",
        "\u2705 State validation passed: Last thought '12 - 9 = 3 (left: 3 9 12)' found in parent's thoughts",
        "\u2705 Node 0_1 matches thought position.",
        "\u2705 State consistency check passed for node 0_1"
      ]
    },
    {
      "event": "push",
      "node_id": "0_1_0",
      "issues": [],
      "log": [
        "\u2705 Recursive call happened correctly: node 0_1_0 with value 60.0 more than or equal to 3.0 should be traversed.",
        "\u2705 State validation passed: Last thought '3 + 9 = 12 (left: 12 12)' found in parent's thoughts; Previous thought '12 - 9 = 3 (left: 3 9 12)' found in parent's state",
        "\u2705 Node 0_1_0 matches thought position.",
        "\u2705 State consistency check passed for node 0_1_0"
      ]
    },
    {
      "event": "push",
      "node_id": "0_1_0_0",
      "issues": [],
      "log": [
        "\u2705 Recursive call happened correctly: node 0_1_0_0 with value 60.0 more than or equal to 3.0 should be traversed.",
        "\u2705 State validation passed: Last thought '12 + 12 = 24 (left: 24)' found in parent's thoughts; Previous thought '12 - 9 = 3 (left: 3 9 12)' found in parent's state; Previous thought '3 + 9 = 12 (left: 12 12)' found in parent's state",
        "\u2705 Node 0_1_0_0 matches thought position.",
        "\u2705 State consistency check passed for node 0_1_0_0"
      ]
    },
    {
      "event": "push",
      "node_id": "0_1_0_0_0",
      "issues": [],
      "log": [
        "\u2705 Node 0_1_0_0_0 matches thought position."
      ]
    },
    {
      "event": "pop",
      "node_id": "",
      "issues": [],
      "log": [
        "\u2705 Popped 0_1_0_0 successfully.",
        "\u2705 Backtrack parent validation passed: correctly backtracking to '0_1_0'.",
        "\u2705 Complete backtracking validation passed: Correctly popped expected node 0_1_0_0; Correctly backtracking to parent '0_1_0'",
        "\u2705 Level limit exceeded \u2014 valid reason for backtracking.",
        "\u2705 Subsequent backtrack validation: correctly using True flag in Subsequent mode for 0_1_0_0.",
        "\u2705 Popped 0_1_0 successfully.",
        "\u2705 Backtrack parent validation passed: correctly backtracking to '0_1'.",
        "\u2705 Complete backtracking validation passed: Correctly popped expected node 0_1_0; Correctly backtracking to parent '0_1'",
        "\u2705 Subsequent backtrack validation: correctly using True flag in Subsequent mode for 0_1_0.",
        "\u2705 Popped 0_1 successfully.",
        "\u2705 Backtrack parent validation passed: correctly backtracking to '0'.",
        "\u2705 Complete backtracking validation passed: Correctly popped expected node 0_1; Correctly backtracking to parent '0'",
        "\u2705 Subsequent backtrack validation: correctly using True flag in Subsequent mode for 0_1.",
        "\u2705 Popped 0 successfully.",
        "\u2705 Backtrack parent validation passed: correctly backtracking to 'None'.",
        "\u2705 Complete backtracking validation passed: Correctly popped expected node 0; Correctly backtracking to parent 'None'",
        "\u2705 Subsequent backtrack validation: correctly using True flag in Subsequent mode for 0."
      ]
    }
  ],
  "tree_trace": {
    "0": {
      "state": null,
      "thought": "9 + 9 = 18 (left: 12 12 18)\n12 - 9 = 3 (left: 3 9 12)\n12 / 9 = 1.33 (not an integer, ignored)\n12 * 9 = 108 (left: 9 12 108)\n9 - 9 = 0 (left: 0 12 12)\n12 + 9 = 21 (left: 9 12 21)\n12 - 12 = 0 (left: 0 9 9)\n12 / 12 = 1 (left: 1 9 9)\n12 * 12 = 144 (left: 9 9 144)\n9 + 12 = 21 (left: 9 12 21)\n9 - 12 = -3 (not positive, ignored)\n9 * 12 = 108 (left: 9 12 108)",
      "value": null,
      "opening_remark": null,
      "children": {
        "0_0": {
          "state": "9 + 9 = 18 (left: 12 12 18)",
          "thought": null,
          "value": 0.003,
          "opening_remark": "Value does not exceed heuristic threshold, childs will not be traversed.",
          "children": {},
          "closing_remark": null,
          "backtracked": false
        },
        "0_1": {
          "state": "12 - 9 = 3 (left: 3 9 12)",
          "thought": "3 + 9 = 12 (left: 12 12)\n9 / 3 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 9)\n12 - 3 = 9 (left: 9 9)\n12 - 9 = 3 (left: 3 3)\n9 - 3 = 6 (left: 6 12) \n3 * 9 = 27 (left: 12 27) \n12 + 3 = 15 (left: 9 15)",
          "value": 22.0,
          "opening_remark": "Value exceeds heuristic threshold, childs will be traversed.",
          "children": {
            "0_1_0": {
              "state": "12 - 9 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)",
              "thought": "12 + 12 = 24 (left: 24)\n12 - 12 = 0 (left: 0)\n12 * 12 = 144 (left: 144)\n12 / 12 = 1 (left: 1)",
              "value": 60.0,
              "opening_remark": "Value exceeds heuristic threshold, childs will be traversed.",
              "children": {
                "0_1_0_0": {
                  "state": "12 - 9 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                  "thought": "Answer: (12 - 9 + 9) + 12 = 24",
                  "value": 60.0,
                  "opening_remark": "Value exceeds heuristic threshold, childs will be traversed.",
                  "children": {
                    "0_1_0_0_0": {
                      "state": "12 - 9 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 - 9 + 9) + 12 = 24",
                      "thought": null,
                      "value": 60.0,
                      "opening_remark": "Value exceeds heuristic threshold, childs will be traversed.",
                      "children": {},
                      "closing_remark": null,
                      "backtracked": false
                    }
                  },
                  "closing_remark": null,
                  "backtracked": true,
                  "backtracked_to": "0_1_0"
                }
              },
              "closing_remark": null,
              "backtracked": true,
              "backtracked_to": "0_1"
            }
          },
          "closing_remark": null,
          "backtracked": true,
          "backtracked_to": "0"
        }
      },
      "closing_remark": null,
      "backtracked": false
    }
  }
}